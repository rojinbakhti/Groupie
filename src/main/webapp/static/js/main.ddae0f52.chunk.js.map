{"version":3,"sources":["components/users/Widgets.tsx","common/formStyles.ts","context/GlobalContext.ts","components/users/Forms.tsx","components/users/Modals.tsx","pages/LoginPage.tsx","components/events/EventsList.tsx","components/events/SelectedEventList.tsx","components/events/EventsSearch.tsx","common/iso.ts","components/events/EventsFilter.tsx","components/UserSearch.tsx","pages/EditGroupDate.tsx","components/users/BlockedUsers.tsx","pages/SettingsPage.tsx","pages/SignUpPage.tsx","common/filter.ts","components/Filters.tsx","pages/AvailabilityPage.tsx","components/Footer.tsx","common/invitees.ts","components/viewinvite/FinalizedView.tsx","components/viewinvite/UnfinalizedView.tsx","pages/ViewInvite.tsx","components/Sidebar.tsx","components/ActivityFeed.tsx","assets/concert3.jpg","components/Header.tsx","App.tsx","common/inactivity.ts","reportWebVitals.ts","context/GlobalProvider.tsx","index.tsx"],"names":["UsernameInput","Item","label","name","rules","required","message","PasswordInput","Password","SubmitButton","children","wrapperCol","offset","span","type","htmlType","titleStyle","textAlign","marginTop","formStyle","width","margin","padding","border","borderRadius","React","createContext","username","Title","Typography","querystring","require","Login","wrongLogin","login","useContext","GlobalContext","style","labelCol","onFinish","data","axios","post","process","stringify","headers","then","res","catch","error","console","log","response","status","notification","open","duration","onClick","to","SignUp","password","confirmPassword","localStorage","setItem","window","location","href","Text","LockedOut","isOpen","LoginPage","useState","showLockedOut","setShowLockedOut","useEffect","loginEnabledTimeString","getItem","loginEnabledTime","Date","JSON","parse","interval","setInterval","clearInterval","failedAttemptsNum","failedAttempts","rightNow","oneMinLater","getTime","formatDate","dateString","toLocaleDateString","undefined","year","month","day","hour","minute","EventsList","events","onChange","selectedEvents","itemLayout","dataSource","marginLeft","renderItem","index","localDate","localTime","venueAddress","url","marginRight","e","checked","filter","event","length","Meta","title","description","SelectedEventList","containerStyle","display","buttonStyle","marginBottom","EventsSearch","setPage","setSelectedEvents","setGroupDateName","setEvents","button","level","target","newSelection","oldSelection","disabled","ISODateString","d","pad","n","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","Input","Search","RangePicker","DatePicker","Option","Select","genres","EventsFilter","onValuesChange","changedValues","allValues","a","requestBody","classificationName","genre","keyword","startDateTime","dateRange","endDateTime","city","stateCode","debouncedChangeHandler","useCallback","debounce","layout","placeholder","showTime","map","value","suffix","HomeOutlined","color","UserSearch","users","onSelect","query","setQuery","submit","user","action","reload","options","blocked","toLowerCase","includes","newQ","_","option","EditGroupDate","page","setUsers","blockedUsersStyle","BlockedUser","blockedUser","isLast","makeStyle","remove","justifyContent","alignItems","borderBottom","BlockedUsers","blockedUsers","allUsers","title2Style","settingsContainerStyle","getSettingsContainerStyle","matchMedia","matches","flexDirection","settingsSectionStyle","getSettingsSectionStyle","blockUsersStyle","SettingsPage","setLoading","blocked1","setBlocked","loggedInUsername","forEach","push","split","element","SignUpPage","defaultFilterState","finalized","unfinalized","responded","unresponded","Button","filterStyle","maxWidth","flexWrap","gap","backgroundColor","cursor","Filters","filterState","setFilterState","oldState","filterFinalized","filterUnfinalized","filterResponded","filterUnresponded","localizer","momentLocalizer","moment","height","backendEvents","startTime","endTime","AvailabilityPage","defaultDate","views","start","end","Footer","sidebarShowing","footerStyle","position","bottom","left","columns","dataIndex","key","excitement","firstButtonStyle","Event","eventStyle","marginTopStyle","widthStyle","min","max","defaultValue","UnfinalizedView","viewInviteStyle","ViewInvite","sidebarStyle","top","borderRight","zIndex","listStyle","listStyleType","Sidebar","logout","pathname","useLocation","className","PlusCircleOutlined","activityFeed","document","querySelector","classList","showActivityFeeed","BarsOutlined","SettingOutlined","LogoutOutlined","Activity","activityStyle","src","imageStyle","nameStyle","activityFeedStyle","boxShadow","objectFit","fontWeight","ActivityFeed","useRef","current","add","addEventListener","activityButton","isClickInside","contains","isHidden","ref","imgStyle","overlayStyle","fontSize","headerStyle","Header","logo","alt","App","time","resetTimer","clearTimeout","setTimeout","onload","onmousemove","onkeydown","inactivityTimer","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalProvider","props","history","useHistory","context","setContext","Provider","removeItem","ReactDOM","render","StrictMode","getElementById"],"mappings":"6PAEaA,EAA0B,WACnC,OACI,cAAC,IAAKC,KAAN,CACIC,MAAM,WACNC,KAAK,WACLC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,gCANrB,SAUI,cAAC,IAAD,OAWCC,EAA8C,SAAC,GAIrD,IAHHL,EAGE,EAHFA,MACAC,EAEE,EAFFA,KACAG,EACE,EADFA,QAEA,OACI,cAAC,IAAKL,KAAN,CACIC,MAAOA,EACPC,KAAMA,EACNC,MAAO,CACH,CACIC,UAAU,EACVC,YANZ,SAUI,cAAC,IAAME,SAAP,OASCC,EAA4C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxD,OACI,cAAC,IAAKT,KAAN,CAAWU,WAAY,CAAEC,OAAQ,EAAGC,KAAM,IAA1C,SACI,cAAC,IAAD,CAAQC,KAAK,UAAUC,SAAS,SAAhC,SACKL,OCpDJM,EAA6B,CACtCC,UAAW,SACXC,UAAW,OAGFC,EAA4B,CACrCC,MAAO,QACPC,OAAQ,SACRC,QAAS,MACTC,OAAQ,sBACRC,aAAc,O,iBCJHC,MAAMC,cAAgC,CACnDC,SAAU,OCFJC,EAAUC,IAAVD,MACJE,EAAcC,EAAQ,KAmCbC,EAA8B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAClCC,EAAUC,qBAAWC,GAArBF,MAwBR,OACI,gCACI,cAACN,EAAD,CAAOS,MAAOrB,EAAd,8BACA,eAAC,IAAD,CACIb,KAAK,QACLkC,MAAOlB,EACPmB,SAAU,CAAEzB,KAAM,GAClBF,WAAY,CAAEE,KAAM,IACpB0B,SA/BK,SAACC,GACdC,IACKC,KACGC,wCACAb,EAAYc,UAAUJ,GACtB,CACIK,QAAS,CACL,eAAgB,uCAI3BC,MAAK,SAACC,GACHb,EAAOa,EAAIP,KAAKb,aAEnBqB,OAAM,SAAUC,GACbC,QAAQC,IAAIF,EAAMG,SAASC,QAC3BpB,IAC6B,KAAzBgB,EAAMG,SAASC,QAnD/BC,IAAaC,KAAK,CACdjD,QAAS,4BACTkD,SAAU,IACVC,QAAS,WACLP,QAAQC,IAAI,gCAwDZ,UAOI,cAAC,EAAD,IACA,cAAC,EAAD,CACIjD,MAAM,WACNC,KAAK,WACLG,QAAQ,gCAEZ,cAAC,EAAD,oBAEA,kDACqB,cAAC,IAAD,CAAMoD,GAAG,UAAT,+BAOxBC,EAAS,WA8BlB,OACI,gCACI,cAAC/B,EAAD,CAAOS,MAAOrB,EAAd,qBACA,eAAC,IAAD,CACIb,KAAK,SACLkC,MAAOlB,EACPmB,SAAU,CAAEzB,KAAM,GAClBF,WAAY,CAAEE,KAAM,IACpB0B,SArCK,SAACC,GACd,GAAIA,EAAKoB,UAAYpB,EAAKqB,gBAK1B,OAAOpB,IACFC,KACGC,yCACAb,EAAYc,UAAUJ,GACtB,CACIK,QAAS,CACL,eAAgB,uCAI3BC,MAAK,SAACC,GACHe,aAAaC,QAAQ,WAAYhB,EAAIP,KAAKb,UAC1CuB,QAAQC,IAAIJ,EAAIP,MAChBwB,OAAOC,SAASC,KACZvB,mCAEPK,OAAM,SAAUC,GACbC,QAAQC,IAAIF,EAAMG,SAASC,QACE,KAAzBJ,EAAMG,SAASC,QAxF/BC,IAAaC,KAAK,CACdjD,QAAS,0BACTkD,SAAU,IACVC,QAAS,WACLP,QAAQC,IAAI,+BAdpBG,IAAaC,KAAK,CACdjD,QAAS,yBACTkD,SAAU,IACVC,QAAS,WACLP,QAAQC,IAAI,6BAsGZ,UAOI,cAAC,EAAD,IACA,cAAC,EAAD,CACIjD,MAAM,WACNC,KAAK,WACLG,QAAQ,gCAEZ,cAAC,EAAD,CACIJ,MAAM,mBACNC,KAAK,kBACLG,QAAQ,kCAGZ,cAAC,EAAD,6BAEA,0DAC6B,cAAC,IAAD,CAAMoD,GAAG,IAAT,8B,kBClJrCS,EAAStC,IAATsC,KAEKC,EAAY,kBACrB,cAAC,IAAD,CAAYC,QAAQ,EAApB,SACI,cAACF,EAAD,CAAMrD,KAAK,SAAX,iGCuDOwD,EAzDa,WACxB,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACAC,qBAAU,WACN,IAAMC,EACFX,OAAOF,aAAac,QAAQ,oBAChC,GAA+B,OAA3BD,EAAJ,CAEA,IAAME,EAAyB,IAAIC,KAC/BC,KAAKC,MAAML,IAETM,EAAWC,aAAY,WAER,IAAIJ,KACND,GACXJ,GAAiB,SAACD,GAAD,OAAmB,KACpCW,cAAcF,IAEdR,GAAiB,SAACD,GAAD,OAAmB,OAEzC,KAEH,OAAO,WACHW,cAAcF,OAEnB,IAyBH,OACI,qCACI,cAAC,EAAD,CAAOhD,WAzBI,WACf,IAEImD,EAFAC,EACArB,OAAOF,aAAac,QAAQ,kBAKhC,GAH6BQ,EAAN,OAAnBC,EAA6C,EACxBN,KAAKC,MAAMK,GAER,MAAtBD,EAAyB,CAC3BX,GAAiB,GACjB,IAAMa,EAAW,IAAIR,KACfS,EAAc,IAAIT,KAAKQ,EAASE,UAAY,KAClDxB,OAAOF,aAAaC,QAChB,mBACAgB,KAAKnC,UAAU2C,IAIvBvB,OAAOF,aAAaC,QAChB,iBACAgB,KAAKnC,UAAUwC,EAAoB,OAOlCZ,GAAiB,cAAC,EAAD,Q,0BClDjBiB,EAAa,SAACC,GAQvB,OAAO,IAAIZ,KAAKY,GAAYC,wBAAmBC,EAPH,CACxCC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,aA+DDC,EApD+B,SAAC,GAIxC,IAHHC,EAGE,EAHFA,OACAC,EAEE,EAFFA,SACAC,EACE,EADFA,eAEA,OACI,cAAC,IAAD,CACIC,WAAW,aACXC,WAAYJ,EACZ9D,MAAO,CACHmE,WAAY,MACZpF,MAAO,KAEXqF,WAAY,WAERC,GAFQ,IACNvG,EADM,EACNA,KAAMwG,EADA,EACAA,UAAWC,EADX,EACWA,UAAWC,EADtB,EACsBA,aADtB,EACoCC,IADpC,OAIR,cAAC,IAAK7G,KAAN,CACIoC,MAAO,CACHf,QAAS,IAFjB,SAKI,qCACI,cAAC,IAAD,CACIe,MAAO,CACH0E,YAAa,IAGjBX,SAAU,SAACY,GAAD,OAAOZ,EAASY,EAAGN,IAC7BO,QAOiB,IANbZ,EAAea,QACX,SAACC,GAAD,OACIA,EAAMhH,OAASA,GACfgH,EAAMR,WAAaA,GACnBQ,EAAMP,WAAaA,GACnBO,EAAMN,cAAgBA,KAC5BO,SAGV,cAAC,IAAKnH,KAAKoH,KAAX,CACIC,MAAOnH,EACPoH,YAAW,UAAKV,EAAL,cAAuBpB,EAC9BkB,e,SC1BjBa,EA/B8C,SAAC,GAEvD,IADHnB,EACE,EADFA,eAEA,OACI,cAAC,IAAD,CACIC,WAAW,aACXC,WAAYF,EACZhE,MAAO,CACHjB,MAAO,KAEXqF,WAAY,WAERC,GAFQ,IACNvG,EADM,EACNA,KAAMwG,EADA,EACAA,UAAsBE,GADtB,EACWD,UADX,EACsBC,cADtB,EACoCC,IADpC,OAIR,cAAC,IAAK7G,KAAN,CACIoC,MAAO,CACHf,QAAS,IAFjB,SAKI,cAAC,IAAKrB,KAAKoH,KAAX,CACIC,MAAOnH,EACPoH,YAAW,UAAKV,EAAL,cAAuBpB,EAC9BkB,YCdpB/E,EAAUC,IAAVD,MAqEF6F,EAAiC,CACnCC,QAAS,QAGPC,EAA8B,CAChCC,aAAc,OAGHC,EA3EmC,SAAC,GAK5C,IAJHC,EAIE,EAJFA,QACAzB,EAGE,EAHFA,eACA0B,EAEE,EAFFA,kBACAC,EACE,EADFA,iBAEA,EAA4BzD,mBAA8B,IAA1D,mBAAO4B,EAAP,KAAe8B,EAAf,KAEMC,EAAmC,IAA1B7B,EAAee,OAAe,EAAI,EAmBjD,OACI,qCACI,cAAC,EAAD,CAAO/E,MAAO,CAAEf,QAAS,IAAzB,+BACA,sBAAKe,MAAOoF,EAAZ,UACI,gCACI,cAAC,GAAD,CACIQ,UAAWA,EACXD,iBAAkBA,IAEK,IAA1B3B,EAAee,QACZ,cAAC,EAAD,CAAOe,MAAO,EAAG9F,MAAO,CAAEf,QAAS,IAAnC,6BAIJ,cAAC,EAAD,CAAmB+E,eAAgBA,OAGvC,cAAC,EAAD,CACIF,OAAQA,EACRE,eAAgBA,EAChBD,SArCO,SAACY,EAAwBN,GAE5C,GADgBM,EAAEoB,OAAOnB,QACZ,CACT,IAAMoB,EAAY,sBAAOhC,GAAP,CAAuBF,EAAOO,KAChDqB,GAAkB,SAACO,GAAD,OAAkBD,SACjC,CACH,IAAMA,EAAehC,EAAea,QAChC,SAACC,GAAD,OACIA,EAAMhH,OAASgG,EAAOO,GAAOvG,MAC7BgH,EAAMR,YAAcR,EAAOO,GAAOC,WAClCQ,EAAMP,YAAcT,EAAOO,GAAOE,WAClCO,EAAMN,eAAiBV,EAAOO,GAAOG,gBAE7CkB,GAAkB,SAACO,GAAD,OAAkBD,YA4BxB,IAAXH,GACG,eAAC,IAAD,CAAQK,UAAQ,EAAC9E,QAAS,kBAAMqE,EAAQ,IAAIzF,MAAOsF,EAAnD,UACK,IADL,OAES,OAGD,IAAXO,GACG,eAAC,IAAD,CAAQzE,QAAS,kBAAMqE,EAAQ,IAAIzF,MAAOsF,EAA1C,UACK,IADL,OAES,W,8DC/ElB,SAASa,EAAcC,GAC1B,SAASC,EAAIC,GAAa,OAAOA,EAAE,GAAK,IAAIA,EAAIA,EAChD,OAAOF,EAAEG,iBAAiB,IACnBF,EAAID,EAAEI,cAAc,GAAG,IACvBH,EAAID,EAAEK,cAAc,IACpBJ,EAAID,EAAEM,eAAe,IACrBL,EAAID,EAAEO,iBAAiB,IACvBN,EAAID,EAAEQ,iBAAiB,ICCfC,IAAXC,OAAR,IACQC,EAAgBC,IAAhBD,YACAE,EAAWC,IAAXD,OAEFE,EAAS,CAAC,WAAY,SAAU,UA0EvBC,GApEmC,SAAC,GAG5C,IAFHxB,EAEE,EAFFA,UACAD,EACE,EADFA,iBAEM0B,EAAc,uCAAG,WAAOC,EAAoBC,GAA3B,2BAAAC,EAAA,6DACnB7B,EAAgB,UAAC4B,EAAUzJ,YAAX,QAAmB,IAC7BmF,EAAW,IAAIR,KACfgF,EAAc,CAChBC,mBAAkB,UAAEH,EAAUI,aAAZ,QAAqB,GACvCC,QAAO,UAAEL,EAAUK,eAAZ,QAAuB,GAC9BC,cAAeN,EAAUO,UACnB3B,EAAcoB,EAAUO,UAAU,IAClC3B,EAAclD,GACpB8E,YAAaR,EAAUO,UACjB3B,EAAcoB,EAAUO,UAAU,IAClC3B,EACI,IAAI1D,KAAKQ,EAASE,UAAY,SAExC6E,KAAI,UAAET,EAAUS,YAAZ,QAAoB,GACxBC,UAAW,IAfI,SAkBD7H,IAAMC,KACpBC,0CACAmH,GApBe,OAkBb/G,EAlBa,OAsBnBkF,EAAUlF,EAAIP,MAtBK,2CAAH,wDAyBd+H,EAAyBC,sBAC3BC,mBAASf,EAAgB,KACzB,IAGJ,OACI,eAAC,IAAD,CACIrH,MAAO,CAAEjB,MAAO,IAAKE,QAAS,IAC9BoJ,OAAO,WACPhB,eAAgBa,EAHpB,UAKI,cAAC,IAAKtK,KAAN,CAAWC,MAAM,kBAAkBC,KAAK,OAAxC,SACI,cAAC,IAAD,CAAOwK,YAAY,uCAEvB,cAAC,IAAK1K,KAAN,CAAWC,MAAM,UAAUC,KAAK,UAAhC,SACI,cAAC,IAAD,CAAOwK,YAAY,8BAEvB,cAAC,IAAK1K,KAAN,CAAWC,MAAM,aAAaC,KAAK,YAAnC,SACI,cAACiJ,EAAD,CAAawB,UAAQ,EAACvI,MAAO,CAAEjB,MAAO,YAE1C,cAAC,IAAKnB,KAAN,CAAWC,MAAM,QAAQC,KAAK,QAA9B,SACI,cAAC,IAAD,CAAQwK,YAAY,iBAApB,SACKnB,EAAOqB,KAAI,SAACb,GAAD,OACR,cAACV,EAAD,CAAQwB,MAAOd,EAAf,SAAuBA,WAInC,cAAC,IAAK/J,KAAN,CAAWC,MAAM,OAAOC,KAAK,OAA7B,SACI,cAAC,IAAD,CACIwK,YAAY,kBACZI,OACI,cAACC,EAAA,EAAD,CAAc3I,MAAO,CAAE4I,MAAO,6B,UClE9CrJ,GAAUC,IAAVD,MACJE,GAAcC,EAAQ,KAmEXmJ,GAjE+B,SAAC,GAKxC,IAJH5D,EAIE,EAJFA,MACAqD,EAGE,EAHFA,YACAQ,EAEE,EAFFA,MACAC,EACE,EADFA,SAEA,EAA0B7G,mBAAiB,IAA3C,mBAAO8G,EAAP,KAAcC,EAAd,KACMC,EAAS,WACX,GAAIF,EAAO,CACPnI,QAAQC,IAAIkI,GACZ,IAEM7I,EAAO,CAAEb,SAFEmC,aAAac,QAAQ,YAEH4G,KADtBH,EACkCI,OAAQ,OACvDhJ,IACKC,KACGC,qCACAb,GAAYc,UAAUJ,GACtB,CACIK,QAAS,CACL,eAAgB,uCAI3BC,MAAK,SAACC,GACHG,QAAQC,IAAIJ,EAAIP,MAChBwB,OAAOC,SAASyH,YAEnB1I,OAAM,SAAUC,GACbC,QAAQC,IAAIF,EAAMG,SAASC,QAC3BH,QAAQC,IAAIF,EAAMG,UAClBF,QAAQC,IAAIF,QAI5B,OACI,sBAAKZ,MAAO,CAAEf,QAAS,IAAvB,UACI,cAAC,GAAD,UAAQgG,IACR,cAAC,KAAD,CACIqE,QAASR,EACJjE,QAAO,SAACsE,GAAD,OAAWA,EAAKI,WACvB1E,QAAO,SAACsE,GAAD,OACJA,EAAK7J,SACAkK,cACAC,SAAST,EAAMQ,kBAEvBhB,KAAI,SAACW,GAAD,MAAW,CACZV,MAAOU,EAAK7J,SACZzB,MAAOsL,EAAK7J,SACZ6J,WAERnJ,MAAO,CAAEjB,MAAO,KAChBuJ,YAAaA,EACbG,MAAOO,EACPjF,SAAU,SAAC2F,GAAD,OAAUT,EAASS,IAC7BX,SAAU,SAACY,EAAGC,GAAJ,cAAeb,QAAf,IAAeA,OAAf,EAAeA,EAAYa,EAAeT,SAExD,cAAC,IAAD,CAAQ/H,QAAS8H,EAAjB,kBACA,uBACA,cAAC,IAAD,CAAQ9H,QAAS8H,EAAjB,mBACC,KACD,cAAC,IAAD,CAAQ9H,QAAS8H,EAAjB,gCC7BN9D,GAAiC,CACnCjB,WAAY,OAGD0F,GA1CiB,WACP/J,qBAAWC,GAAxBT,SAAR,IACA,EAAwB4C,mBAAS,GAAjC,mBAAO4H,EAAP,KAAarE,EAAb,KACA,EAA0CvD,mBAAS,IAAnD,mBAAsByD,GAAtB,WACA,EAA4CzD,mBACxC,IADJ,mBAAO8B,EAAP,KAAuB0B,EAAvB,KAIA,EAA0BxD,mBAAiB,IAA3C,mBAAO4G,EAAP,KAAciB,EAAd,KACA,EAAwC7H,mBAAmB,IAA3D,6BAQA,OANAG,qBAAU,WACNjC,IACKC,KAAKC,uCACLG,MAAK,SAACC,GAAD,OAASqJ,EAASrJ,EAAIP,WACjC,IAGC,sBAAKH,MAAOoF,GAAZ,UACc,IAAT0E,GACG,cAAC,EAAD,CACIrE,QAASA,EACTzB,eAAgBA,EAChB0B,kBAAmBA,EACnBC,iBAAkBA,IAGhB,IAATmE,GACG,cAAC,GAAD,CACI7E,MAAM,YACNqD,YAAY,YACZQ,MAAOA,Q,SCjCvBrJ,GAAcC,EAAQ,KAmBpBsK,GAAoC,CACtChL,OAAQ,QACRE,OAAQ,oBACRC,aAAc,OAgClB,IAAM8K,GAA0C,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAhB,OAC5C,sBAAKnK,MAAOoK,GAAUD,GAAtB,UACI,oBAAGnK,MAAO,CAAEnB,UAAW,UAAvB,cAAqCqL,KACrC,cAAC,IAAD,CAAQzL,KAAK,UAAU2C,QAAS,kBA3BxC,SAAgBtD,GACZ,IACMqL,EAAOrL,EACPqC,EAAO,CAAEb,SAFEmC,aAAac,QAAQ,YAEH4G,KAAMA,EAAMC,OAAQ,UAEvD,OADAvI,QAAQC,IAAIqI,GACL/I,IACFC,KACGC,qCACAb,GAAYc,UAAUJ,GACtB,CACIK,QAAS,CACL,eAAgB,uCAI3BC,MAAK,SAACC,GACHG,QAAQC,IAAIJ,EAAIP,MAChBwB,OAAOC,SAASyH,YAEnB1I,OAAM,SAAUC,GACbC,QAAQC,IAAIF,EAAMG,SAASC,WAOOqJ,CAAOH,IAA7C,yBAMFE,GAAY,SAACD,GAQf,MAPyC,CACrC9E,QAAS,OACTiF,eAAgB,gBAChBC,WAAY,SACZC,aAAcL,EAAS,EAAI,oBAC3BlL,QAAS,cAKFwL,GApEmC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjD,OACI,qBAAK1K,MAAOgK,GAAZ,SACKU,EAAalC,KAAI,SAAC0B,EAAa7F,GAAd,OACd,cAAC,GAAD,CACI6F,YAAaA,EACbC,OAAQ9F,IAAUqG,EAAa3F,OAAS,UCVpDxF,GAAUC,IAAVD,MACJoL,GAAmB,GACnBpB,GAAoB,GACpB9J,GAAcC,EAAQ,KA2FpBf,GAA6B,CAC/BK,OAAQ,MACRmF,WAAY,OAGVyG,GAA8B,CAChChM,UAAW,SACXC,UAAW,OAGTgM,GAAyC,CAC3CxF,QAAS,OACTnG,OAAQ,qBACRF,OAAQ,QACRG,aAAc,MACdmL,eAAgB,SAChBC,WAAY,UAGVO,GAA4B,WAE9B,OADmBnJ,OAAOoJ,WAAW,uBACtBC,QACJ,6BACAH,IADP,IAEII,cAAe,WAGhBJ,IAGLK,GAAuC,CACzCnM,MAAO,OAGLoM,GAA0B,WAE5B,OADmBxJ,OAAOoJ,WAAW,uBACtBC,QACJ,6BACAE,IADP,IAEInM,MAAO,UAGRmM,IAGLE,GAAkC,CACpCrM,MAAO,MACPC,OAAQ,UAGGqM,GA3IgB,WAC3B,MAAgCnJ,oBAAS,GAAzC,mBAAkBoJ,GAAlB,WACA,EAA+BpJ,qBAA/B,mBAAOqJ,EAAP,KAAiBC,EAAjB,KA8DA,OA5DAnJ,qBAAU,WAGN,IAAMoJ,EAAmBhK,aAAac,QAAQ,YAC9CnC,IACKC,KAAKC,uCACLG,MAAK,SAACC,GAEHA,EAAIP,KAAKuL,SAAQ,SAACvC,GACVA,EAAK7J,UAAYmM,GACjBd,GAASgB,KAAKxC,MAGtBtI,QAAQC,IAAI,WAAY6J,OAE3BhK,OAAM,SAAUC,GACbC,QAAQC,IAAIF,EAAMG,SAASC,QAC3BH,QAAQC,IAAIF,EAAMG,UAClBF,QAAQC,IAAIF,QAErB,IAEHyB,qBAAU,WACN,IACMlC,EAAO,CAAEb,SADEmC,aAAac,QAAQ,YACH4G,KAAM,GAAIC,OAAQ,QAKrDhJ,IACKC,KACGC,qCACAb,GAAYc,UAAUJ,GACtB,CACIK,QAAS,CACL,eAAgB,uCAI3BC,MAAK,SAACC,GACH4K,GAAW,GAEC5K,EAAIP,KAAKyL,MAAM,KACrBF,SAAQ,SAACG,GACI,SAAXA,GACAtC,GAAQoC,KAAKE,MAGrBL,EAAWjC,IACX1I,QAAQC,IAAI,eAAgByI,OAE/B5I,OAAM,SAAUC,GACbC,QAAQC,IAAIF,EAAMG,SAASC,aAEpC,CAACuK,IAOA,qCACI,cAAC,GAAD,CAAOvL,MAAOrB,GAAd,sBACA,qBAAKqB,MAAO8K,KAAZ,SACI,sBAAK9K,MAAOmL,KAAZ,UACI,cAAC,GAAD,CAAOrF,MAAO,EAAG9F,MAAO4K,GAAxB,yBAGA,sBAAK5K,MAAOoL,GAAZ,UACI,cAAC,GAAD,CACI9C,YAAY,eACZQ,MAAO6B,KAEX,cAAC,GAAD,CACID,kBACgBnH,GAAZgI,EAAwBA,EAAWhC,iBCrFpDuC,GAJc,WACzB,OAAO,cAAC,EAAD,K,uCC+BEC,GAAqB,CAC9BC,WAAY,EACZC,aAAc,EACdC,WAAY,EACZC,aAAc,GCoBZC,GAAgC,SAAC,GAA2B,IAAzB/N,EAAwB,EAAxBA,SAAU+C,EAAc,EAAdA,QAC/C,OACI,wBAAQpB,MAAOsF,GAAalE,QAASA,EAArC,SACK/C,KAKPgO,GAA8B,CAChChH,QAAS,OACTkF,WAAY,SACZtL,QAAS,MACTqN,SAAU,OACVC,SAAU,OACVC,IAAK,MACLhC,aAAc,4BACdjF,aAAc,OAGZD,GAA8B,CAChCnG,aAAc,OACdF,QAAS,SACTC,OAAQ,8BACR0J,MAAO,oBACP6D,gBAAiB,OACjBC,OAAQ,WAGGC,GAvEwB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eACnD,OACI,sBAAK7M,MAAOqM,GAAZ,UACI,cAAC,GAAD,CACIjL,QAAS,SAACuI,GAAD,OACLkD,GAAe,SAACC,GAAD,ODVJ,SAACA,GAAD,oBAAC,gBACzBA,GADwB,IAE3Bd,WAAY,EACZC,aAAc,ICO+Bc,CAAgBH,OAFrD,uBAQA,cAAC,GAAD,CACIxL,QAAS,SAACuI,GAAD,OACLkD,GAAe,SAACC,GAAD,ODZF,SAACA,GAAD,oBAAC,gBAC3BA,GAD0B,IAE7Bd,WAAY,EACZC,aAAc,ICS+Be,CAAkBJ,OAFvD,yBAQA,cAAC,GAAD,CACIxL,QAAS,SAACuI,GAAD,OACLkD,GAAe,SAACC,GAAD,ODdJ,SAACA,GAAD,oBAAC,gBACzBA,GADwB,IAE3BZ,WAAY,EACZC,aAAc,ICW+Bc,CAAgBL,OAFrD,uBAQA,cAAC,GAAD,CACIxL,QAAS,SAACuI,GAAD,OACLkD,GAAe,SAACC,GAAD,ODhBF,SAACA,GAAD,oBAAC,gBAC3BA,GAD0B,IAE7BZ,WAAY,EACZC,aAAc,ICa+Be,CAAkBN,OAFvD,6BClCNO,GAAYC,aAAgBC,MAE5BjI,GAAiC,CACnCkI,OAAQ,OACRzO,UAAW,MACXE,MAAO,OACPoF,WAAY,MACZoB,aAAc,QAGZgI,GAAgC,CAClC,CACIzI,MAAO,YACP0I,UAAW,qBACXC,QAAS,uBAgCFC,GAnBoB,WAC/B,IAViB5J,EAUjB,EAAsC5B,mBAAS6J,IAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KACA,OACI,sBAAK7M,MAAOoF,GAAZ,UACI,cAAC,GAAD,CACIwH,YAAaA,EACbC,eAAgBA,IAGpB,cAAC,KAAD,CACIc,YAAa,IAAIlL,KACjBmL,MAAO,CAAC,QAAS,OAAQ,OACzBT,UAAWA,GACXrJ,QAtBKA,EAsBeyJ,GArBzBzJ,EAAO0E,KAAI,SAAC1D,EAAOT,GAAR,MAAmB,CACjCA,QACAY,MAAOH,EAAMA,MACb+I,MAAO,IAAIpL,KAAKqC,EAAM0I,WACtBM,IAAK,IAAIrL,KAAKqC,EAAM2I,oBCJbM,GAxBA,WACX,IACMC,EAA8B,OADflO,qBAAWC,GAAxBT,SAGF2O,EAA8B,CAChClP,MAAOiP,EAAiB,qBAAuB,QAC/C/O,QAAS,UACToG,QAAS,OACTiF,eAAgB,gBAChBmC,gBAAiB,oBACjB7D,MAAO,QACPsF,SAAU,WACVC,OAAQ,IACRC,KAAMJ,EAAiB,OAAS,GAGpC,OACI,yBAAQhO,MAAOiO,EAAf,UACI,uDACA,yD,UCrBCI,GAAU,CACnB,CACIpJ,MAAO,OACPqJ,UAAW,OACXC,IAAK,QAET,CACItJ,MAAO,WACPqJ,UAAW,WACXC,IAAK,YAET,CACItJ,MAAO,aACPqJ,UAAW,aACXC,IAAK,eAIArK,GAAa,CACtB,CACIqK,IAAK,IACLzQ,KAAM,UACNiD,SAAU,MACVyN,WAAY,KAEhB,CACID,IAAK,IACLzQ,KAAM,SACNiD,SAAU,MACVyN,WAAY,MAIPC,GAAmC,CAC5C/J,YAAa,O,IChCClF,IAAVD,M,QCCAA,GAAUC,IAAVD,MAcFmP,GAAQ,kBACV,sBAAK1O,MAAO2O,GAAZ,UACI,cAAC,GAAD,CAAO7I,MAAO,EAAd,wBACA,cAAC,GAAD,CAAOA,MAAO,EAAd,wBACA,cAAC,GAAD,CAAOA,MAAO,EAAd,sBACA,cAAC,KAAD,CAAO5B,WAAYA,GAAYmK,QAASA,KACxC,cAAC,IAAD,CAAQ5P,KAAK,UAAUuB,MAAOyO,GAA9B,iBAGA,cAAC,IAAD,CAAQhQ,KAAK,UAAb,gBACA,uBACA,cAAC,GAAD,CAAOuB,MAAO4O,GAAgB9I,MAAO,EAArC,kCAGA,cAAC,KAAD,CAAQ9F,MAAO6O,GAAYC,IAAK,EAAGC,IAAK,EAAGC,aAAc,QAI3DL,GAA6B,CAC/BxK,WAAY,MACZlF,QAAS,MACTC,OAAQ,4BACRC,aAAc,MACdoG,aAAc,OAGZqJ,GAAiC,CACnC/P,UAAW,SAGTgQ,GAA6B,CAC/B9P,MAAO,SAGIkQ,GA9CS,WACpB,OACI,gCACI,cAAC,GAAD,IACA,cAAC,IAAD,CAAQxQ,KAAK,UAAUuB,MAAOyO,GAA9B,oBAGA,cAAC,IAAD,CAAQhQ,KAAK,UAAb,4BCRJc,GAAUC,IAAVD,MAgBF2P,GAAkC,CACpCjQ,QAAS,OAGEkQ,GAlBI,WAGf,OACI,sBAAKnP,MAAOkP,GAAZ,UACI,cAAC,GAAD,8BACA,eAAC,GAAD,CAAOpJ,MAAO,EAAd,qBACuC,iBAEN,cAAC,GAAD,Q,wCC0CvCsJ,GAA+B,CACjClB,SAAU,QACVZ,OAAQ,QACR+B,IAAK,EACLjB,KAAM,EACNrP,MAAO,OACPuQ,YAAa,4BACbC,OAAQ,EACRlK,QAAS,OACT4F,cAAe,SACfV,WAAY,SACZD,eAAgB,UAGdkF,GAA4B,CAC9BC,cAAe,OACfzQ,OAAQ,EACRC,QAAS,GAGEyQ,GAnEC,WACZ,IAAQC,EAAW7P,qBAAWC,GAAtB4P,OAEFC,EADWC,cACSD,SAO1B,OACI,qBAAKE,UAAU,UAAU9P,MAAOoP,GAAhC,SACI,qBAAIpP,MAAOwP,GAAX,UACI,oBAAIM,UAAwB,MAAbF,EAAmB,WAAa,GAA/C,SACI,cAAC,IAAD,CAAMvO,GAAG,IAAT,SACI,cAACsH,EAAA,EAAD,QAGR,oBAAImH,UAAwB,aAAbF,EAA0B,WAAa,GAAtD,SACI,cAAC,IAAD,CAAMvO,GAAG,WAAT,SACI,cAAC0O,GAAA,EAAD,QAGR,oBAAID,UAAwB,aAAbF,EAA0B,WAAa,GAAtD,SACI,cAAC,IAAD,CACIvO,GAAG,IACHD,QAAS,kBArBH,WACtB,IAAM4O,EAAeC,SAASC,cAAc,kBAChC,OAAZF,QAAY,IAAZA,KAAcG,UAAU9F,OAAO,UAmBA+F,IACfN,UAAU,kBAHd,SAKI,cAACO,GAAA,EAAD,QAGR,oBAAIP,UAAwB,cAAbF,EAA2B,WAAa,GAAvD,SACI,cAAC,IAAD,CAAMvO,GAAG,YAAT,SACI,cAACiP,GAAA,EAAD,QAGR,6BACI,cAAC,IAAD,CAAMjP,GAAG,IAAID,QAAS,kBAAMuO,KAA5B,SACI,cAACY,GAAA,EAAD,cCRlBC,GAAW,kBACb,sBAAKxQ,MAAOyQ,GAAZ,UACI,qBACIC,IAAI,iKACJ1Q,MAAO2Q,KAEX,gCACI,mBAAG3Q,MAAO4Q,GAAV,6BACA,yDAKNC,GAAoC,CACtCvD,OAAQ,QACRvO,MAAO,QACPmP,SAAU,QACVmB,IAAK,EACLjB,KAAM,EACN3B,gBAAiB,sBACjBxN,QAAS,MACTsQ,OAAQ,GAGNkB,GAAgC,CAClCpL,QAAS,OACTkF,WAAY,SACZtL,QAAS,MACTwN,gBAAiB,QACjBqE,UAAW,8BAGTH,GAA6B,CAC/B5R,MAAO,QACPuO,OAAQ,QACRyD,UAAW,QACX5R,aAAc,MACduF,YAAa,OAGXkM,GAA4B,CAC9BI,WAAY,KAGDC,GAlFM,WACjB,MAAsC/O,mBAAS6J,IAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KACMmD,EAAekB,iBAAuB,MAqB5C,OAnBA7O,qBAAU,WAAO,IAAD,EACZ,UAAA2N,EAAamB,eAAb,SAAsBhB,UAAUiB,IAAI,UAepCnB,SAASoB,iBAAiB,SAbT,SAAC1M,GAAc,IAAD,IAOM,EAN3B2M,EAAiBrB,SAASC,cAAc,oBACxCqB,GACF,UAAAvB,EAAamB,eAAb,eAAsBK,SAAS7M,EAAEoB,WAAjC,OACAuL,QADA,IACAA,OADA,EACAA,EAAgBE,SAAS7M,EAAEoB,SACzB0L,EAAQ,UAAGzB,EAAamB,eAAhB,aAAG,EAAsBhB,UAAUqB,SAAS,UAErDD,GAAkBE,IAEnB,UAAAzB,EAAamB,eAAb,SAAsBhB,UAAUiB,IAAI,gBAK7C,CAACpB,IAGA,sBACIF,UAAU,gBACV9P,MAAO6Q,GACPa,IAAK1B,EAHT,UAKI,cAAC,GAAD,CACIpD,YAAaA,EACbC,eAAgBA,IAEpB,cAAC,GAAD,QCtCG,OAA0B,qCCgBnC8E,GAA2B,CAC7B5S,MAAO,OACPuO,OAAQ,OACRyD,UAAW,SAGTa,GAA+B,CACjCtE,OAAQ,cACRvO,MAAO,cACP0N,gBAAiB,oBACjByB,SAAU,WACVmB,IAAK,OACLjB,KAAM,QAGJzP,GAA6B,CAC/BiK,MAAO,QACPiJ,SAAU,OACVb,WAAY,OACZhS,OAAQ,KAGN8S,GAA8B,CAChC9S,OAAQ,OACRsO,OAAQ,OACRvO,MAAO,QACPsG,QAAS,OACTiF,eAAgB,gBAChBmC,gBAAiB,oBACjB7D,MAAO,QACP2G,OAAQ,GAGGwC,GA7CA,WACX,OACI,yBAAQ/R,MAAO8R,GAAf,UACI,sBAAK9R,MAAO4R,GAAZ,UACK,IACD,oBAAI5R,MAAOrB,GAAX,qBAAoC,OAExC,qBAAK+R,IAAKsB,GAAMhS,MAAO2R,GAAUM,IAAI,aCmDlCC,OA/Cf,WACI,MAA6BpS,qBAAWC,GAAhCT,EAAR,EAAQA,SAAUqQ,EAAlB,EAAkBA,OAMlB,OAJAtN,qBAAU,WACF/C,GCnBmB,SAACqQ,GAC5B,IAAIwC,EAMJ,SAASC,IACLC,aAAaF,GACbA,EAAOG,WAAW3C,EAAQ,KAP9BhO,OAAO4Q,OAASH,EAEhBnC,SAASuC,YAAcJ,EACvBnC,SAASwC,UAAYL,EDcHM,CAAgB/C,KAC/B,CAACrQ,IAGA,sBAAKwQ,UAAU,MAAf,UACI,sBAAKA,UAAU,UAAf,UACI,cAAC,GAAD,IACA,eAAC,IAAD,YACMxQ,GACE,qCACI,cAAC,IAAD,CAAOqT,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACI,cAAC,GAAD,SAIXtT,GACG,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,IAAD,CAAOsT,KAAK,YAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,GAAD,eAMpB,cAAC,GAAD,QE3CGC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBtS,MAAK,YAAkD,IAA/CuS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OC6CCO,GA5CiC,SAACC,GAC7C,IAAMC,EAAUC,cAChB,EAA8BtR,mBAA2B,CACrD5C,SAAUqC,OAAOF,aAAac,QAAQ,cAD1C,mBAAOkR,EAAP,KAAgBC,EAAhB,KA6BA,OACI,cAAC3T,EAAc4T,SAAf,CACIlL,MAAO,CACHnJ,SAAUmU,EAAQnU,SAClBO,MA7BE,SAACP,GACXmC,aAAaC,QAAQ,WAAYpC,GACjCoU,EAAW,6BACJD,GADG,IAENnU,cAEJqC,OAAOF,aAAaC,QAAQ,iBAAkBgB,KAAKnC,UAAU,KAwBrDoP,OArBG,WACc,OAArB8D,EAAQnU,WACZmC,aAAamS,WAAW,YACxBF,EAAW,6BACJD,GADG,IAENnU,SAAU,QAGd2B,IAAaC,KAAK,CACdjD,QAAS,yBACTkD,SAAU,MAGdoS,EAAQ5H,KAAK,QAIb,SAOK2H,EAAMjV,YCzCnBwV,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,GAAD,UACI,cAAC,GAAD,UAIZ9D,SAAS+D,eAAe,SAM5BnB,O","file":"static/js/main.ddae0f52.chunk.js","sourcesContent":["import { Form, Input, Button } from \"antd\";\r\n\r\nexport const UsernameInput: React.FC = () => {\r\n    return (\r\n        <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            rules={[\r\n                {\r\n                    required: true,\r\n                    message: \"Please input your username!\",\r\n                },\r\n            ]}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n    );\r\n};\r\n\r\ntype PasswordInputProps = {\r\n    label: string;\r\n    name: string;\r\n    message: string;\r\n};\r\n\r\nexport const PasswordInput: React.FC<PasswordInputProps> = ({\r\n    label,\r\n    name,\r\n    message,\r\n}) => {\r\n    return (\r\n        <Form.Item\r\n            label={label}\r\n            name={name}\r\n            rules={[\r\n                {\r\n                    required: true,\r\n                    message,\r\n                },\r\n            ]}\r\n        >\r\n            <Input.Password />\r\n        </Form.Item>\r\n    );\r\n};\r\n\r\ntype SubmitButtonProps = {\r\n    children: React.ReactNode;\r\n};\r\n\r\nexport const SubmitButton: React.FC<SubmitButtonProps> = ({ children }) => {\r\n    return (\r\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                {children}\r\n            </Button>\r\n        </Form.Item>\r\n    );\r\n};\r\n","import CSS from \"csstype\";\r\n\r\nexport const titleStyle: CSS.Properties = {\r\n    textAlign: \"center\",\r\n    marginTop: \"2em\",\r\n};\r\n\r\nexport const formStyle: CSS.Properties = {\r\n    width: \"500px\",\r\n    margin: \"0 auto\",\r\n    padding: \"3em\",\r\n    border: \"1px solid lightblue\",\r\n    borderRadius: \"4px\",\r\n};","import React from 'react';\r\n\r\nexport interface ContextInterface {\r\n  username: string | null;\r\n  login? : (username: string) => void;\r\n  logout? : () => void;\r\n}\r\n\r\nexport default React.createContext<ContextInterface>({\r\n  username: null\r\n});\r\n","import { Typography, Form, notification } from \"antd\";\r\nimport { UsernameInput, PasswordInput, SubmitButton } from \"./Widgets\";\r\nimport { titleStyle, formStyle } from \"../../common/formStyles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport React, { useContext } from \"react\";\r\nimport GlobalContext from \"../../context/GlobalContext\";\r\nconst { Title } = Typography;\r\nvar querystring = require(\"querystring\");\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: \"Invalid Username/Password\",\r\n        duration: 2.5,\r\n        onClick: () => {\r\n            console.log(\"Notification Clicked!\");\r\n        },\r\n    });\r\n};\r\n\r\nconst openNotification2 = () => {\r\n    notification.open({\r\n        message: \"Passwords do not match\",\r\n        duration: 2.5,\r\n        onClick: () => {\r\n            console.log(\"Notification Clicked!\");\r\n        },\r\n    });\r\n};\r\n\r\nconst openNotification3 = () => {\r\n    notification.open({\r\n        message: \"Username already exists\",\r\n        duration: 2.5,\r\n        onClick: () => {\r\n            console.log(\"Notification Clicked!\");\r\n        },\r\n    });\r\n};\r\n\r\ntype LoginProps = {\r\n    wrongLogin: () => void;\r\n};\r\nexport const Login: React.FC<LoginProps> = ({ wrongLogin }) => {\r\n    const { login } = useContext(GlobalContext);\r\n    const onFinish = (data: any) => {\r\n        axios\r\n            .post(\r\n                process.env.REACT_APP_HOST_API_URL + \"/api/auth/login\",\r\n                querystring.stringify(data),\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    },\r\n                }\r\n            )\r\n            .then((res) => {\r\n                login!(res.data.username);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response.status); // 401\r\n                wrongLogin();\r\n                if (error.response.status == 401) {\r\n                    openNotification();\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Title style={titleStyle}>Log Into Groupie</Title>\r\n            <Form\r\n                name=\"login\"\r\n                style={formStyle}\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                onFinish={onFinish}\r\n            >\r\n                <UsernameInput />\r\n                <PasswordInput\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    message=\"Please input your password!\"\r\n                />\r\n                <SubmitButton>Login</SubmitButton>\r\n\r\n                <p>\r\n                    New around here? <Link to=\"/signup\">Sign Up</Link>\r\n                </p>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const SignUp = () => {\r\n    const onFinish = (data: any) => {\r\n        if (data.password != data.confirmPassword) {\r\n            openNotification2();\r\n            return;\r\n        }\r\n\r\n        return axios\r\n            .post(\r\n                process.env.REACT_APP_HOST_API_URL + \"/api/auth/signup\",\r\n                querystring.stringify(data),\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    },\r\n                }\r\n            )\r\n            .then((res) => {\r\n                localStorage.setItem(\"username\", res.data.username);\r\n                console.log(res.data);\r\n                window.location.href =\r\n                    process.env.REACT_APP_HOST_API_URL + \"/invite\";\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response.status); // 401\r\n                if (error.response.status == 401) {\r\n                    openNotification3();\r\n                }\r\n            });\r\n    };\r\n    return (\r\n        <div>\r\n            <Title style={titleStyle}>Sign Up</Title>\r\n            <Form\r\n                name=\"signUp\"\r\n                style={formStyle}\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                onFinish={onFinish}\r\n            >\r\n                <UsernameInput />\r\n                <PasswordInput\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    message=\"Please input your password!\"\r\n                />\r\n                <PasswordInput\r\n                    label=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    message=\"Please confirm your password!\"\r\n                />\r\n\r\n                <SubmitButton>Create Account</SubmitButton>\r\n\r\n                <p>\r\n                    Already have an account? <Link to=\"/\">Cancel</Link>\r\n                </p>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n","import ReactModal from \"react-modal\";\r\nimport { Typography } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\n\r\nexport const LockedOut = () => (\r\n    <ReactModal isOpen={true}>\r\n        <Text type=\"danger\">\r\n            You are currently locked out, please wait a minute before trying to\r\n            log in again\r\n        </Text>\r\n    </ReactModal>\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Login } from \"../components/users/Forms\";\r\nimport { LockedOut } from \"../components/users/Modals\";\r\n\r\nconst LoginPage: React.FC = () => {\r\n    const [showLockedOut, setShowLockedOut] = useState(false);\r\n    useEffect(() => {\r\n        const loginEnabledTimeString: string | null =\r\n            window.localStorage.getItem(\"loginEnabledTime\");\r\n        if (loginEnabledTimeString === null) return;\r\n\r\n        const loginEnabledTime: Date = new Date(\r\n            JSON.parse(loginEnabledTimeString)\r\n        );\r\n        const interval = setInterval(() => {\r\n            // Check if current time is greater than loginEnabledTime\r\n            const rightNow = new Date();\r\n            if (rightNow > loginEnabledTime) {\r\n                setShowLockedOut((showLockedOut) => false);\r\n                clearInterval(interval);\r\n            } else {\r\n                setShowLockedOut((showLockedOut) => true);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, []);\r\n\r\n    const wrongLogin = () => {\r\n        let failedAttempts: string | null =\r\n            window.localStorage.getItem(\"failedAttempts\");\r\n        let failedAttemptsNum: number;\r\n        if (failedAttempts === null) failedAttemptsNum = 0;\r\n        else failedAttemptsNum = JSON.parse(failedAttempts);\r\n\r\n        if (++failedAttemptsNum === 3) {\r\n            setShowLockedOut(true);\r\n            const rightNow = new Date();\r\n            const oneMinLater = new Date(rightNow.getTime() + 60000);\r\n            window.localStorage.setItem(\r\n                \"loginEnabledTime\",\r\n                JSON.stringify(oneMinLater)\r\n            );\r\n        }\r\n\r\n        window.localStorage.setItem(\r\n            \"failedAttempts\",\r\n            JSON.stringify(failedAttemptsNum % 3)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Login wrongLogin={wrongLogin} />\r\n            {showLockedOut && <LockedOut />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport { Checkbox, List } from \"antd\";\r\nimport { TicketmasterEvent } from \"../../common/types\";\r\nimport { Dispatch } from \"react\";\r\nimport { SetStateAction } from \"react\";\r\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\r\n\r\nexport const formatDate = (dateString: string) => {\r\n    const options: Intl.DateTimeFormatOptions = {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n    };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n};\r\n\r\ntype EventsListProps = {\r\n    events: TicketmasterEvent[];\r\n    selectedEvents: TicketmasterEvent[];\r\n    onChange: (e: CheckboxChangeEvent, index: number) => void;\r\n};\r\n\r\nconst EventsList: React.FC<EventsListProps> = ({\r\n    events,\r\n    onChange,\r\n    selectedEvents,\r\n}) => {\r\n    return (\r\n        <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={events}\r\n            style={{\r\n                marginLeft: \"3em\",\r\n                width: 500,\r\n            }}\r\n            renderItem={(\r\n                { name, localDate, localTime, venueAddress, url },\r\n                index\r\n            ) => (\r\n                <List.Item\r\n                    style={{\r\n                        padding: 12,\r\n                    }}\r\n                >\r\n                    <>\r\n                        <Checkbox\r\n                            style={{\r\n                                marginRight: 12,\r\n                            }}\r\n                            // onChange={() => onChange?.(index)}\r\n                            onChange={(e) => onChange(e, index)}\r\n                            checked={\r\n                                selectedEvents.filter(\r\n                                    (event) =>\r\n                                        event.name === name &&\r\n                                        event.localDate == localDate &&\r\n                                        event.localTime == localTime &&\r\n                                        event.venueAddress == venueAddress\r\n                                ).length !== 0\r\n                            }\r\n                        />\r\n                        <List.Item.Meta\r\n                            title={name}\r\n                            description={`${venueAddress} | ${formatDate(\r\n                                localDate\r\n                            )}`}\r\n                        />\r\n                    </>\r\n                </List.Item>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default EventsList;\r\n","import { List } from \"antd\";\r\nimport React from \"react\";\r\nimport { TicketmasterEvent } from \"../../common/types\";\r\nimport { formatDate } from \"./EventsList\";\r\n\r\ntype SelectedEventsListProps = {\r\n    selectedEvents: TicketmasterEvent[];\r\n};\r\n\r\nconst SelectedEventList: React.FC<SelectedEventsListProps> = ({\r\n    selectedEvents,\r\n}) => {\r\n    return (\r\n        <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={selectedEvents}\r\n            style={{\r\n                width: 500,\r\n            }}\r\n            renderItem={(\r\n                { name, localDate, localTime, venueAddress, url },\r\n                index\r\n            ) => (\r\n                <List.Item\r\n                    style={{\r\n                        padding: 12,\r\n                    }}\r\n                >\r\n                    <List.Item.Meta\r\n                        title={name}\r\n                        description={`${venueAddress} | ${formatDate(\r\n                            localDate\r\n                        )}`}\r\n                    />\r\n                </List.Item>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SelectedEventList;\r\n","import { Button, Typography } from \"antd\";\r\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\r\nimport React, { Dispatch, SetStateAction, useState } from \"react\";\r\nimport { EventsFilter, EventsList } from \".\";\r\nimport { TicketmasterEvent } from \"../../common/types\";\r\nimport CSS from \"csstype\";\r\nimport SelectedEventList from \"./SelectedEventList\";\r\n\r\ntype EventsSearchProps = {\r\n    setPage: Dispatch<SetStateAction<number>>;\r\n    selectedEvents: TicketmasterEvent[];\r\n    setSelectedEvents: React.Dispatch<\r\n        React.SetStateAction<TicketmasterEvent[]>\r\n    >;\r\n    setGroupDateName: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst { Title } = Typography;\r\n\r\nconst EventsSearch: React.FC<EventsSearchProps> = ({\r\n    setPage,\r\n    selectedEvents,\r\n    setSelectedEvents,\r\n    setGroupDateName,\r\n}) => {\r\n    const [events, setEvents] = useState<TicketmasterEvent[]>([]);\r\n\r\n    const button = selectedEvents.length === 0 ? 0 : 1;\r\n\r\n    const onSelectChange = (e: CheckboxChangeEvent, index: number) => {\r\n        const checked = e.target.checked;\r\n        if (checked) {\r\n            const newSelection = [...selectedEvents, events[index]];\r\n            setSelectedEvents((oldSelection) => newSelection);\r\n        } else {\r\n            const newSelection = selectedEvents.filter(\r\n                (event) =>\r\n                    event.name !== events[index].name ||\r\n                    event.localDate !== events[index].localDate ||\r\n                    event.localTime !== events[index].localTime ||\r\n                    event.venueAddress !== events[index].venueAddress\r\n            );\r\n            setSelectedEvents((oldSelection) => newSelection);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Title style={{ padding: 12 }}>Create Group Date</Title>\r\n            <div style={containerStyle}>\r\n                <div>\r\n                    <EventsFilter\r\n                        setEvents={setEvents}\r\n                        setGroupDateName={setGroupDateName}\r\n                    />\r\n                    {selectedEvents.length !== 0 && (\r\n                        <Title level={3} style={{ padding: 12 }}>\r\n                            Selected Events\r\n                        </Title>\r\n                    )}\r\n                    <SelectedEventList selectedEvents={selectedEvents} />\r\n                </div>\r\n\r\n                <EventsList\r\n                    events={events}\r\n                    selectedEvents={selectedEvents}\r\n                    onChange={onSelectChange}\r\n                />\r\n            </div>\r\n\r\n            {button === 0 && (\r\n                <Button disabled onClick={() => setPage(1)} style={buttonStyle}>\r\n                    {\" \"}\r\n                    Next{\" \"}\r\n                </Button>\r\n            )}\r\n            {button === 1 && (\r\n                <Button onClick={() => setPage(1)} style={buttonStyle}>\r\n                    {\" \"}\r\n                    Next{\" \"}\r\n                </Button>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nconst containerStyle: CSS.Properties = {\r\n    display: \"flex\",\r\n};\r\n\r\nconst buttonStyle: CSS.Properties = {\r\n    marginBottom: \"2em\",\r\n};\r\n\r\nexport default EventsSearch;\r\n","export function ISODateString(d : Date) {\r\n    function pad(n : number) {return n<10 ? '0'+n : n}\r\n    return d.getUTCFullYear()+'-'\r\n         + pad(d.getUTCMonth()+1)+'-'\r\n         + pad(d.getUTCDate())+'T'\r\n         + pad(d.getUTCHours())+':'\r\n         + pad(d.getUTCMinutes())+':'\r\n         + pad(d.getUTCSeconds())+'Z'\r\n}","import { Input, DatePicker, Select, Form } from \"antd\";\r\nimport { HomeOutlined } from \"@ant-design/icons\";\r\nimport React, { useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport _, { debounce } from \"lodash\";\r\nimport { TicketmasterEvent } from \"../../common/types\";\r\nimport { ISODateString } from \"../../common/iso\";\r\n\r\nconst { Search } = Input;\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\n\r\nconst genres = [\"Concerts\", \"Movies\", \"Sports\"];\r\n\r\ntype EventsFilterProps = {\r\n    setEvents: React.Dispatch<React.SetStateAction<TicketmasterEvent[]>>;\r\n    setGroupDateName: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\nconst EventsFilter: React.FC<EventsFilterProps> = ({\r\n    setEvents,\r\n    setGroupDateName,\r\n}) => {\r\n    const onValuesChange = async (changedValues: any, allValues: any) => {\r\n        setGroupDateName(allValues.name ?? \"\");\r\n        const rightNow = new Date();\r\n        const requestBody = {\r\n            classificationName: allValues.genre ?? \"\",\r\n            keyword: allValues.keyword ?? \"\",\r\n            startDateTime: allValues.dateRange\r\n                ? ISODateString(allValues.dateRange[0])\r\n                : ISODateString(rightNow),\r\n            endDateTime: allValues.dateRange\r\n                ? ISODateString(allValues.dateRange[1])\r\n                : ISODateString(\r\n                      new Date(rightNow.getTime() + 1000 * 60 * 60 * 24 * 7)\r\n                  ),\r\n            city: allValues.city ?? \"\",\r\n            stateCode: \"\",\r\n        };\r\n\r\n        const res = await axios.post(\r\n            process.env.REACT_APP_HOST_API_URL + \"/api/ticketmaster\",\r\n            requestBody\r\n        );\r\n        setEvents(res.data);\r\n    };\r\n\r\n    const debouncedChangeHandler = useCallback(\r\n        debounce(onValuesChange, 1000),\r\n        []\r\n    );\r\n\r\n    return (\r\n        <Form\r\n            style={{ width: 500, padding: 12 }}\r\n            layout=\"vertical\"\r\n            onValuesChange={debouncedChangeHandler}\r\n        >\r\n            <Form.Item label=\"Group Date Name\" name=\"name\">\r\n                <Input placeholder=\"Enter the name of the group date\" />\r\n            </Form.Item>\r\n            <Form.Item label=\"Keyword\" name=\"keyword\">\r\n                <Input placeholder=\"Enter your search query\" />\r\n            </Form.Item>\r\n            <Form.Item label=\"Date range\" name=\"dateRange\">\r\n                <RangePicker showTime style={{ width: \"100%\" }} />\r\n            </Form.Item>\r\n            <Form.Item label=\"Genre\" name=\"genre\">\r\n                <Select placeholder=\"Select a genre\">\r\n                    {genres.map((genre) => (\r\n                        <Option value={genre}>{genre}</Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"City\" name=\"city\">\r\n                <Input\r\n                    placeholder=\"Enter your city\"\r\n                    suffix={\r\n                        <HomeOutlined style={{ color: \"rgba(0,0,0,.45)\" }} />\r\n                    }\r\n                ></Input>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default EventsFilter;\r\n","import { AutoComplete, Typography, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { User } from \"../common/types\";\r\nimport axios from \"axios\";\r\n\r\ntype UserSearchProps = {\r\n    title?: string;\r\n    placeholder: string;\r\n    users: User[];\r\n    onSelect?: (user: User) => void;\r\n};\r\n\r\nconst { Title } = Typography;\r\nvar querystring = require(\"querystring\");\r\n\r\nconst UserSearch: React.FC<UserSearchProps> = ({\r\n    title,\r\n    placeholder,\r\n    users,\r\n    onSelect,\r\n}) => {\r\n    const [query, setQuery] = useState<string>(\"\");\r\n    const submit = () => {\r\n        if (query) {\r\n            console.log(query);\r\n            const username = localStorage.getItem(\"username\");\r\n            const user = query;\r\n            const data = { username: username, user: user, action: \"add\" };\r\n            axios\r\n                .post(\r\n                    process.env.REACT_APP_HOST_API_URL + \"/api/setting\",\r\n                    querystring.stringify(data),\r\n                    {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    window.location.reload();\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error.response.status);\r\n                    console.log(error.response);\r\n                    console.log(error);\r\n                });\r\n        }\r\n    };\r\n    return (\r\n        <div style={{ padding: 12 }}>\r\n            <Title>{title}</Title>\r\n            <AutoComplete\r\n                options={users\r\n                    .filter((user) => !user.blocked)\r\n                    .filter((user) =>\r\n                        user.username\r\n                            .toLowerCase()\r\n                            .includes(query.toLowerCase())\r\n                    )\r\n                    .map((user) => ({\r\n                        value: user.username,\r\n                        label: user.username,\r\n                        user,\r\n                    }))}\r\n                style={{ width: 200 }}\r\n                placeholder={placeholder}\r\n                value={query}\r\n                onChange={(newQ) => setQuery(newQ)}\r\n                onSelect={(_, option) => onSelect?.((option as any).user)}\r\n            />\r\n            <Button onClick={submit}> Add</Button>\r\n            <br />\r\n            <Button onClick={submit}> Send</Button>\r\n            {\"\\n\"}\r\n            <Button onClick={submit}> Save as Draft</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserSearch;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { EventsSearch } from \"../components/events\";\r\nimport UserSearch from \"../components/UserSearch\";\r\nimport CSS from \"csstype\";\r\nimport { TicketmasterEvent, User } from \"../common/types\";\r\nimport axios from \"axios\";\r\nimport GlobalContext from \"../context/GlobalContext\";\r\n\r\nconst EditGroupDate: React.FC = () => {\r\n    const { username } = useContext(GlobalContext);\r\n    const [page, setPage] = useState(0);\r\n    const [groupDateName, setGroupDateName] = useState(\"\");\r\n    const [selectedEvents, setSelectedEvents] = useState<TicketmasterEvent[]>(\r\n        []\r\n    );\r\n\r\n    const [users, setUsers] = useState<User[]>([]);\r\n    const [invitedUsers, setInvitedUsers] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .post(process.env.REACT_APP_HOST_API_URL + \"/api/getusers\")\r\n            .then((res) => setUsers(res.data));\r\n    }, []);\r\n\r\n    return (\r\n        <div style={containerStyle}>\r\n            {page === 0 && (\r\n                <EventsSearch\r\n                    setPage={setPage}\r\n                    selectedEvents={selectedEvents}\r\n                    setSelectedEvents={setSelectedEvents}\r\n                    setGroupDateName={setGroupDateName}\r\n                />\r\n            )}\r\n            {page === 1 && (\r\n                <UserSearch\r\n                    title=\"Add Users\"\r\n                    placeholder=\"Add users\"\r\n                    users={users}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst containerStyle: CSS.Properties = {\r\n    marginLeft: \"5em\",\r\n};\r\n\r\nexport default EditGroupDate;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { User } from \"../../common/types\";\r\nimport CSS from \"csstype\";\r\nimport axios from \"axios\";\r\n\r\nvar querystring = require(\"querystring\");\r\n\r\ntype BlockedUsersProps = {\r\n    blockedUsers: string[];\r\n};\r\n\r\nconst BlockedUsers: React.FC<BlockedUsersProps> = ({ blockedUsers }) => {\r\n    return (\r\n        <div style={blockedUsersStyle}>\r\n            {blockedUsers.map((blockedUser, index) => (\r\n                <BlockedUser\r\n                    blockedUser={blockedUser}\r\n                    isLast={index === blockedUsers.length - 1}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst blockedUsersStyle: CSS.Properties = {\r\n    margin: \"1em 0\",\r\n    border: \"1px solid #D3D3D3\",\r\n    borderRadius: \"4px\",\r\n};\r\n\r\ntype BlockedUserProps = {\r\n    blockedUser: string;\r\n    isLast: boolean;\r\n};\r\n\r\nfunction remove(name: any) {\r\n    const username = localStorage.getItem(\"username\");\r\n    const user = name;\r\n    const data = { username: username, user: user, action: \"remove\" };\r\n    console.log(user);\r\n    return axios\r\n        .post(\r\n            process.env.REACT_APP_HOST_API_URL + \"/api/setting\",\r\n            querystring.stringify(data),\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                },\r\n            }\r\n        )\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            window.location.reload();\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error.response.status);\r\n        });\r\n}\r\n\r\nconst BlockedUser: React.FC<BlockedUserProps> = ({ blockedUser, isLast }) => (\r\n    <div style={makeStyle(isLast)}>\r\n        <p style={{ marginTop: \"revert\" }}>@{blockedUser}</p>\r\n        <Button type=\"default\" onClick={() => remove(blockedUser)}>\r\n            Unblock\r\n        </Button>\r\n    </div>\r\n);\r\n\r\nconst makeStyle = (isLast: boolean): CSS.Properties => {\r\n    const blockedUserStyle: CSS.Properties = {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        borderBottom: isLast ? 0 : \"1px solid #D3D3D3\",\r\n        padding: \"0.5em 1em\",\r\n    };\r\n    return blockedUserStyle;\r\n};\r\n\r\nexport default BlockedUsers;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport CSS from \"csstype\";\r\nimport UserSearch from \"../components/UserSearch\";\r\nimport BlockedUsers from \"../components/users/BlockedUsers\";\r\nimport axios from \"axios\";\r\nimport { User } from \"../common/types\";\r\n\r\nconst { Title } = Typography;\r\nlet allUsers: User[] = [];\r\nlet blocked: string[] = []; // array of usernames\r\nvar querystring = require(\"querystring\");\r\n\r\nconst SettingsPage: React.FC = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [blocked1, setBlocked] = useState<string[]>();\r\n\r\n    useEffect(() => {\r\n        //fakeUsers.push({name: \"dasol\"});\r\n        //localStorage.setItem(\"username\", \"dasollee\");\r\n        const loggedInUsername = localStorage.getItem(\"username\");\r\n        axios\r\n            .post(process.env.REACT_APP_HOST_API_URL + \"/api/getusers\")\r\n            .then((res) => {\r\n                //console.log(res.data);\r\n                res.data.forEach((user: User) => {\r\n                    if (user.username != loggedInUsername) {\r\n                        allUsers.push(user);\r\n                    }\r\n                });\r\n                console.log(\"allUsers\", allUsers);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response.status);\r\n                console.log(error.response);\r\n                console.log(error);\r\n            });\r\n    }, []); // run only once\r\n\r\n    useEffect(() => {\r\n        const username = localStorage.getItem(\"username\");\r\n        const data = { username: username, user: \"\", action: \"show\" };\r\n        //blocked.push({name: \"dasol\"});\r\n        //setLoading(false);\r\n        //setBlocked(blocked);\r\n        //setBlocked(blockedUsers);\r\n        axios\r\n            .post(\r\n                process.env.REACT_APP_HOST_API_URL + \"/api/setting\",\r\n                querystring.stringify(data),\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    },\r\n                }\r\n            )\r\n            .then((res) => {\r\n                setLoading(false);\r\n                //console.log(res.data);\r\n                var array = res.data.split(\",\");\r\n                array.forEach((element: any) => {\r\n                    if (element != \"empty\") {\r\n                        blocked.push(element);\r\n                    }\r\n                });\r\n                setBlocked(blocked);\r\n                console.log(\"blockedUsers\", blocked);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response.status);\r\n            });\r\n    }, [blocked1]);\r\n\r\n    // console.log(isLoading);\r\n    /*if (isLoading) {\r\n        return <div className=\"App\">Loading...</div>;\r\n    }*/\r\n    return (\r\n        <>\r\n            <Title style={titleStyle}>Settings</Title>\r\n            <div style={getSettingsContainerStyle()}>\r\n                <div style={getSettingsSectionStyle()}>\r\n                    <Title level={3} style={title2Style}>\r\n                        Block Users\r\n                    </Title>\r\n                    <div style={blockUsersStyle}>\r\n                        <UserSearch\r\n                            placeholder=\"Search users\"\r\n                            users={allUsers}\r\n                        />\r\n                        <BlockedUsers\r\n                            blockedUsers={\r\n                                blocked1 != undefined ? blocked1 : blocked\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst titleStyle: CSS.Properties = {\r\n    margin: \"1em\",\r\n    marginLeft: \"2em\",\r\n};\r\n\r\nconst title2Style: CSS.Properties = {\r\n    textAlign: \"center\",\r\n    marginTop: \"1em\",\r\n};\r\n\r\nconst settingsContainerStyle: CSS.Properties = {\r\n    display: \"flex\",\r\n    border: \"1px solid darkgrey\",\r\n    margin: \"0 5em\",\r\n    borderRadius: \"4px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n};\r\n\r\nconst getSettingsContainerStyle = (): CSS.Properties => {\r\n    const mediaQuery = window.matchMedia(\"(max-width: 1080px)\");\r\n    if (mediaQuery.matches) {\r\n        return {\r\n            ...settingsContainerStyle,\r\n            flexDirection: \"column\",\r\n        };\r\n    }\r\n    return settingsContainerStyle;\r\n};\r\n\r\nconst settingsSectionStyle: CSS.Properties = {\r\n    width: \"50%\",\r\n};\r\n\r\nconst getSettingsSectionStyle = (): CSS.Properties => {\r\n    const mediaQuery = window.matchMedia(\"(max-width: 1080px)\");\r\n    if (mediaQuery.matches) {\r\n        return {\r\n            ...settingsSectionStyle,\r\n            width: \"unset\",\r\n        };\r\n    }\r\n    return settingsSectionStyle;\r\n};\r\n\r\nconst blockUsersStyle: CSS.Properties = {\r\n    width: \"80%\",\r\n    margin: \"0 auto\",\r\n};\r\n\r\nexport default SettingsPage;\r\n","import React from \"react\";\r\nimport { SignUp } from \"../components/users/Forms\";\r\n\r\nconst SignUpPage: React.FC = () => {\r\n    return <SignUp />;\r\n};\r\n\r\nexport default SignUpPage;\r\n","export type FilterState = {\r\n    finalized : boolean // true if filtering on this, false if not\r\n    unfinalized : boolean // so if both false, we return any\r\n    responded : boolean\r\n    unresponded : boolean\r\n}\r\n\r\nexport interface GroupDate extends FilterState {\r\n    name : string\r\n}\r\n\r\nexport const filterFinalized = (oldState : FilterState) : FilterState => ({\r\n    ...oldState,\r\n    finalized : true,\r\n    unfinalized : false\r\n})\r\n\r\nexport const filterUnfinalized = (oldState : FilterState) : FilterState => ({\r\n    ...oldState,\r\n    finalized : false,\r\n    unfinalized : true\r\n})\r\n\r\nexport const filterResponded = (oldState : FilterState) : FilterState => ({\r\n    ...oldState,\r\n    responded : true,\r\n    unresponded : false\r\n})\r\n\r\nexport const filterUnresponded = (oldState : FilterState) : FilterState => ({\r\n    ...oldState,\r\n    responded : false,\r\n    unresponded : true\r\n})\r\n\r\nexport const defaultFilterState = {\r\n    finalized : false,\r\n    unfinalized : false,\r\n    responded : false,\r\n    unresponded : false\r\n}\r\n\r\nexport const resetFilters = () : FilterState => defaultFilterState\r\n\r\nexport const filterGroupDates = (groupDates : GroupDate[], filter : FilterState) : GroupDate[] => {\r\n    // We don't want to modify the input array\r\n    let res : GroupDate[] = [...groupDates]\r\n    if (filter.finalized) res = res.filter((groupDate : GroupDate) => groupDate.finalized === true)\r\n    if (filter.unfinalized) res = res.filter((groupDate : GroupDate) => groupDate.finalized === false)\r\n    if (filter.unresponded) res = res.filter((groupDate : GroupDate) => groupDate.responded === false)\r\n    if (filter.unresponded) res = res.filter((groupDate : GroupDate) => groupDate.responded === false)\r\n\r\n    return res\r\n}","import React, { MouseEventHandler } from \"react\";\r\nimport CSS from \"csstype\";\r\nimport {\r\n    defaultFilterState,\r\n    filterFinalized,\r\n    filterResponded,\r\n    FilterState,\r\n    filterUnfinalized,\r\n    filterUnresponded,\r\n} from \"../common/filter\";\r\n\r\ntype FilterProps = {\r\n    filterState: FilterState;\r\n    setFilterState: React.Dispatch<React.SetStateAction<FilterState>>;\r\n};\r\n\r\nconst Filters: React.FC<FilterProps> = ({ filterState, setFilterState }) => {\r\n    return (\r\n        <div style={filterStyle}>\r\n            <Button\r\n                onClick={(_) =>\r\n                    setFilterState((oldState) => filterFinalized(filterState))\r\n                }\r\n            >\r\n                Finalized\r\n            </Button>\r\n\r\n            <Button\r\n                onClick={(_) =>\r\n                    setFilterState((oldState) => filterUnfinalized(filterState))\r\n                }\r\n            >\r\n                Unfinalized\r\n            </Button>\r\n\r\n            <Button\r\n                onClick={(_) =>\r\n                    setFilterState((oldState) => filterResponded(filterState))\r\n                }\r\n            >\r\n                Responded\r\n            </Button>\r\n\r\n            <Button\r\n                onClick={(_) =>\r\n                    setFilterState((oldState) => filterUnresponded(filterState))\r\n                }\r\n            >\r\n                Unresponded\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype ButtonProps = {\r\n    children: React.ReactNode;\r\n    onClick: MouseEventHandler;\r\n};\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, onClick }) => {\r\n    return (\r\n        <button style={buttonStyle} onClick={onClick}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nconst filterStyle: CSS.Properties = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"1em\",\r\n    maxWidth: \"100%\",\r\n    flexWrap: \"wrap\",\r\n    gap: \"1em\",\r\n    borderBottom: \"1px solid rgba(0,0,0,0.1)\",\r\n    marginBottom: \"1em\",\r\n};\r\n\r\nconst buttonStyle: CSS.Properties = {\r\n    borderRadius: \"25px\",\r\n    padding: \"0.75em\",\r\n    border: \"1px solid rgb(68, 141, 247)\",\r\n    color: \"rgb(68, 141, 247)\",\r\n    backgroundColor: \"#fff\",\r\n    cursor: \"pointer\",\r\n};\r\n\r\nexport default Filters;\r\n","import React, { useState } from \"react\";\r\nimport \"react-big-calendar/lib/sass/styles.scss\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport CSS from \"csstype\";\r\nimport { BackendEvent, CalendarEvent } from \"../common/types\";\r\nimport { defaultFilterState } from \"../common/filter\";\r\nimport Filters from \"../components/Filters\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst containerStyle: CSS.Properties = {\r\n    height: \"85vh\",\r\n    marginTop: \"4vh\",\r\n    width: \"90vw\",\r\n    marginLeft: \"5vw\",\r\n    marginBottom: \"12vh\",\r\n};\r\n\r\nconst backendEvents: BackendEvent[] = [\r\n    {\r\n        event: \"JBConcert\",\r\n        startTime: \"11-4-2021 15:00:00\",\r\n        endTime: \"11-4-2021 15:45:00\",\r\n    },\r\n];\r\n\r\nconst eventMapper = (events: BackendEvent[]): CalendarEvent[] => {\r\n    return events.map((event, index) => ({\r\n        index,\r\n        title: event.event,\r\n        start: new Date(event.startTime),\r\n        end: new Date(event.endTime),\r\n    }));\r\n};\r\n\r\nconst AvailabilityPage: React.FC = () => {\r\n    const [filterState, setFilterState] = useState(defaultFilterState);\r\n    return (\r\n        <div style={containerStyle}>\r\n            <Filters\r\n                filterState={filterState}\r\n                setFilterState={setFilterState}\r\n            />\r\n\r\n            <Calendar\r\n                defaultDate={new Date()}\r\n                views={[\"month\", \"week\", \"day\"]}\r\n                localizer={localizer}\r\n                events={eventMapper(backendEvents)}\r\n            ></Calendar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvailabilityPage;\r\n","import React, { useContext } from \"react\";\r\nimport CSS from \"csstype\";\r\nimport GlobalContext from \"../context/GlobalContext\";\r\n\r\nconst Footer = () => {\r\n    const { username } = useContext(GlobalContext);\r\n    const sidebarShowing = username !== null;\r\n\r\n    const footerStyle: CSS.Properties = {\r\n        width: sidebarShowing ? \"calc(100vw - 50px)\" : \"100vw\",\r\n        padding: \"3em 2em\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        backgroundColor: \"rgb(68, 141, 247)\",\r\n        color: \"white\",\r\n        position: \"absolute\",\r\n        bottom: \"0\",\r\n        left: sidebarShowing ? \"50px\" : 0, // width of sidebar\r\n    };\r\n\r\n    return (\r\n        <footer style={footerStyle}>\r\n            <p>Group Date Application</p>\r\n            <p>A Team 40 Production</p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import CSS from \"csstype\";\r\n\r\nexport const columns = [\r\n    {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n    },\r\n    {\r\n        title: \"Response\",\r\n        dataIndex: \"response\",\r\n        key: \"response\",\r\n    },\r\n    {\r\n        title: \"Excitement\",\r\n        dataIndex: \"excitement\",\r\n        key: \"excitement\",\r\n    },\r\n];\r\n\r\nexport const dataSource = [\r\n    {\r\n        key: \"1\",\r\n        name: \"Vikhyat\",\r\n        response: \"Yes\",\r\n        excitement: \"5\",\r\n    },\r\n    {\r\n        key: \"2\",\r\n        name: \"Daniel\",\r\n        response: \"Yes\",\r\n        excitement: \"5\",\r\n    },\r\n];\r\n\r\nexport const firstButtonStyle: CSS.Properties = {\r\n    marginRight: \"1em\",\r\n};\r\n","import React from 'react'\r\nimport { Typography, Table, Button } from \"antd\";\r\nimport {firstButtonStyle, columns, dataSource} from \"../../common/invitees\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst FinalizedView = () => {\r\n    return (\r\n        <>\r\n            <Title level={4}>Event Name, Time, @ Location</Title>\r\n            <Title level={4}>Invitees</Title>\r\n            <Table dataSource={dataSource} columns={columns} />\r\n            <Button type=\"primary\" style={firstButtonStyle}>\r\n                Accept\r\n            </Button>\r\n            <Button type=\"default\">Decline</Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FinalizedView\r\n","import React from \"react\";\r\nimport { Typography, Table, Button, Slider } from \"antd\";\r\nimport CSS from \"csstype\";\r\nimport { firstButtonStyle, columns, dataSource } from \"../../common/invitees\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst UnfinalizedView = () => {\r\n    return (\r\n        <div>\r\n            <Event />\r\n            <Button type=\"primary\" style={firstButtonStyle}>\r\n                Submit\r\n            </Button>\r\n            <Button type=\"default\">Save Draft</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Event = () => (\r\n    <div style={eventStyle}>\r\n        <Title level={3}>Event Name</Title>\r\n        <Title level={4}>Event Info</Title>\r\n        <Title level={4}>Invitees</Title>\r\n        <Table dataSource={dataSource} columns={columns} />\r\n        <Button type=\"primary\" style={firstButtonStyle}>\r\n            Yes\r\n        </Button>\r\n        <Button type=\"default\">No</Button>\r\n        <br />\r\n        <Title style={marginTopStyle} level={5}>\r\n            How excited are you?\r\n        </Title>\r\n        <Slider style={widthStyle} min={1} max={5} defaultValue={3} />\r\n    </div>\r\n);\r\n\r\nconst eventStyle: CSS.Properties = {\r\n    marginLeft: \"5em\",\r\n    padding: \"2em\",\r\n    border: \"1px solid rgba(0,0,0,0.1)\",\r\n    borderRadius: \"4px\",\r\n    marginBottom: \"2em\",\r\n};\r\n\r\nconst marginTopStyle: CSS.Properties = {\r\n    marginTop: \"1.5em\",\r\n};\r\n\r\nconst widthStyle: CSS.Properties = {\r\n    width: \"300px\",\r\n};\r\n\r\nexport default UnfinalizedView;\r\n","import React from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport CSS from \"csstype\";\r\nimport FinalizedView from \"../components/viewinvite/FinalizedView\";\r\nimport UnfinalizedView from \"../components/viewinvite/UnfinalizedView\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst ViewInvite = () => {\r\n    const finalized = false;\r\n\r\n    return (\r\n        <div style={viewInviteStyle}>\r\n            <Title>Group Date Name</Title>\r\n            <Title level={3}>\r\n                Status: {finalized ? \"Finalized\" : \"Unfinalized\"}\r\n            </Title>\r\n            {finalized ? <FinalizedView /> : <UnfinalizedView />}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst viewInviteStyle: CSS.Properties = {\r\n    padding: \"3em\",\r\n};\r\n\r\nexport default ViewInvite;\r\n","import React, { useContext } from \"react\";\r\nimport CSS from \"csstype\";\r\nimport {\r\n    HomeOutlined,\r\n    PlusCircleOutlined,\r\n    SettingOutlined,\r\n    LogoutOutlined,\r\n    BarsOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport GlobalContext from \"../context/GlobalContext\";\r\n\r\nconst Sidebar = () => {\r\n    const { logout } = useContext(GlobalContext);\r\n    const location = useLocation();\r\n    const pathname = location.pathname;\r\n\r\n    const showActivityFeeed = () => {\r\n        const activityFeed = document.querySelector(\".activity-feed\");\r\n        activityFeed?.classList.remove(\"closed\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"sidebar\" style={sidebarStyle}>\r\n            <ul style={listStyle}>\r\n                <li className={pathname === \"/\" ? \"selected\" : \"\"}>\r\n                    <Link to=\"/\">\r\n                        <HomeOutlined />\r\n                    </Link>\r\n                </li>\r\n                <li className={pathname === \"/propose\" ? \"selected\" : \"\"}>\r\n                    <Link to=\"/propose\">\r\n                        <PlusCircleOutlined />\r\n                    </Link>\r\n                </li>\r\n                <li className={pathname === \"/propose\" ? \"selected\" : \"\"}>\r\n                    <Link\r\n                        to=\"#\"\r\n                        onClick={() => showActivityFeeed()}\r\n                        className=\"activity-button\"\r\n                    >\r\n                        <BarsOutlined />\r\n                    </Link>\r\n                </li>\r\n                <li className={pathname === \"/settings\" ? \"selected\" : \"\"}>\r\n                    <Link to=\"/settings\">\r\n                        <SettingOutlined />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"#\" onClick={() => logout!()}>\r\n                        <LogoutOutlined />\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst sidebarStyle: CSS.Properties = {\r\n    position: \"fixed\",\r\n    height: \"100vh\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"50px\",\r\n    borderRight: \"1px solid rgba(0,0,0,0.1)\",\r\n    zIndex: 5,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n};\r\n\r\nconst listStyle: CSS.Properties = {\r\n    listStyleType: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport CSS from \"csstype\";\r\nimport Filters from \"./Filters\";\r\nimport { defaultFilterState } from \"../common/filter\";\r\n\r\nconst ActivityFeed = () => {\r\n    const [filterState, setFilterState] = useState(defaultFilterState);\r\n    const activityFeed = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        activityFeed.current?.classList.add(\"closed\");\r\n\r\n        const listener = (e: Event) => {\r\n            const activityButton = document.querySelector(\".activity-button\");\r\n            const isClickInside =\r\n                activityFeed.current?.contains(e.target as Node) ||\r\n                activityButton?.contains(e.target as Node);\r\n            const isHidden = activityFeed.current?.classList.contains(\"closed\");\r\n\r\n            if (!isClickInside && !isHidden) {\r\n                //the click was outside the activity feed\r\n                activityFeed.current?.classList.add(\"closed\");\r\n            }\r\n        };\r\n\r\n        document.addEventListener(\"click\", listener);\r\n    }, [activityFeed]);\r\n\r\n    return (\r\n        <div\r\n            className=\"activity-feed\"\r\n            style={activityFeedStyle}\r\n            ref={activityFeed}\r\n        >\r\n            <Filters\r\n                filterState={filterState}\r\n                setFilterState={setFilterState}\r\n            />\r\n            <Activity />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Activity = () => (\r\n    <div style={activityStyle}>\r\n        <img\r\n            src=\"https://images.unsplash.com/photo-1637102838603-d1c02da68c66?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2070&q=80\"\r\n            style={imageStyle}\r\n        />\r\n        <div>\r\n            <p style={nameStyle}>Group Date Name</p>\r\n            <p>Group Date Status</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst activityFeedStyle: CSS.Properties = {\r\n    height: \"100vh\",\r\n    width: \"400px\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    backgroundColor: \"rgba(247, 247, 247)\",\r\n    padding: \"1em\",\r\n    zIndex: 6,\r\n};\r\n\r\nconst activityStyle: CSS.Properties = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"1em\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 1px 3px hsla(0, 0%, 0.2)\",\r\n};\r\n\r\nconst imageStyle: CSS.Properties = {\r\n    width: \"160px\",\r\n    height: \"100px\",\r\n    objectFit: \"cover\",\r\n    borderRadius: \"4px\",\r\n    marginRight: \"1em\",\r\n};\r\n\r\nconst nameStyle: CSS.Properties = {\r\n    fontWeight: 700,\r\n};\r\n\r\nexport default ActivityFeed;\r\n","export default __webpack_public_path__ + \"static/media/concert3.c57aa10b.jpg\";","import React from \"react\";\r\nimport CSS from \"csstype\";\r\nimport logo from \"../assets/concert3.jpg\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <div style={overlayStyle}>\r\n                {\" \"}\r\n                <h1 style={titleStyle}>Groupie</h1>{\" \"}\r\n            </div>\r\n            <img src={logo} style={imgStyle} alt=\"logo\" />\r\n        </header>\r\n    );\r\n};\r\n\r\nconst imgStyle: CSS.Properties = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n};\r\n\r\nconst overlayStyle: CSS.Properties = {\r\n    height: \"fit-content\",\r\n    width: \"fit-content\",\r\n    backgroundColor: \"rgb(68, 141, 247)\",\r\n    position: \"absolute\",\r\n    top: \"25px\",\r\n    left: \"35px\",\r\n};\r\n\r\nconst titleStyle: CSS.Properties = {\r\n    color: \"white\",\r\n    fontSize: \"55px\",\r\n    fontWeight: \"bold\",\r\n    margin: \"0\",\r\n};\r\n\r\nconst headerStyle: CSS.Properties = {\r\n    margin: \"auto\",\r\n    height: \"20vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: \"rgb(68, 141, 247)\",\r\n    color: \"white\",\r\n    zIndex: 6,\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport EditGroupDate from \"./pages/EditGroupDate\";\r\nimport SettingsPage from \"./pages/SettingsPage\";\r\nimport SignUpPage from \"./pages/SignUpPage\";\r\nimport AvailabilityPage from \"./pages/AvailabilityPage\";\r\nimport Footer from \"./components/Footer\";\r\nimport ViewInvite from \"./pages/ViewInvite\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport ActivityFeed from \"./components/ActivityFeed\";\r\nimport { inactivityTimer } from \"./common/inactivity\";\r\nimport Header from \"./components/Header\";\r\nimport GlobalContext from \"./context/GlobalContext\";\r\n\r\nfunction App() {\r\n    const { username, logout } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        if (username) inactivityTimer(logout!);\r\n    }, [username]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"content\">\r\n                <Header />\r\n                <Switch>\r\n                    {!username && (\r\n                        <>\r\n                            <Route exact path=\"/\">\r\n                                <LoginPage />\r\n                            </Route>\r\n                            <Route path=\"/signup\">\r\n                                <SignUpPage />\r\n                            </Route>\r\n                        </>\r\n                    )}\r\n                    {username && (\r\n                        <>\r\n                            <Sidebar />\r\n                            <ActivityFeed />\r\n                            <Route path=\"/settings\">\r\n                                <SettingsPage />\r\n                            </Route>\r\n                            <Route path=\"/propose\">\r\n                                <EditGroupDate />\r\n                            </Route>\r\n                            <Route path=\"/invite\">\r\n                                <ViewInvite />\r\n                            </Route>\r\n                            <Route exact path=\"/\">\r\n                                <AvailabilityPage />\r\n                            </Route>\r\n                        </>\r\n                    )}\r\n                </Switch>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","export const inactivityTimer = (logout : () => void) => {\r\n    let time: NodeJS.Timeout;\r\n    window.onload = resetTimer;\r\n    // DOM Events\r\n    document.onmousemove = resetTimer;\r\n    document.onkeydown = resetTimer;\r\n\r\n    function resetTimer() {\r\n        clearTimeout(time);\r\n        time = setTimeout(logout, 1000*60)\r\n    }\r\n};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useState } from \"react\";\r\nimport { notification } from \"antd\";\r\n\r\nimport GlobalContext, { ContextInterface } from \"./GlobalContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ntype ProviderProps = {\r\n    children: React.ReactNode;\r\n};\r\n\r\nconst GlobalProvider: React.FC<ProviderProps> = (props) => {\r\n    const history = useHistory();\r\n    const [context, setContext] = useState<ContextInterface>({\r\n        username: window.localStorage.getItem(\"username\"),\r\n    });\r\n\r\n    const login = (username: string) => {\r\n        localStorage.setItem(\"username\", username);\r\n        setContext({\r\n            ...context,\r\n            username,\r\n        });\r\n        window.localStorage.setItem(\"failedAttempts\", JSON.stringify(0));\r\n    };\r\n\r\n    const logout = () => {\r\n        if (context.username === null) return;\r\n        localStorage.removeItem(\"username\");\r\n        setContext({\r\n            ...context,\r\n            username: null,\r\n        });\r\n\r\n        notification.open({\r\n            message: \"You've been logged out\",\r\n            duration: 2.5,\r\n        });\r\n\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                username: context.username,\r\n                login,\r\n                logout,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n\r\nexport default GlobalProvider;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport GlobalProvider from \"./context/GlobalProvider\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <GlobalProvider>\r\n                <App />\r\n            </GlobalProvider>\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}