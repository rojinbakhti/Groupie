{"version":3,"sources":["components/users/Widgets.tsx","common/formStyles.ts","context/GlobalContext.ts","components/users/Forms.tsx","components/users/Modals.tsx","pages/LoginPage.tsx","components/events/EventsList.tsx","components/events/SelectedEventList.tsx","components/events/EventsSearch.tsx","common/iso.ts","components/events/EventsFilter.tsx","components/UserSearch.tsx","components/SelectedUsersList.tsx","pages/EditGroupDate.tsx","common/invitees.ts","components/viewinvite/InviterView.tsx","pages/Inviter.tsx","components/BlockedUserSearch.tsx","components/users/BlockedUsers.tsx","common/inactivity.ts","pages/SettingsPage.tsx","pages/SignUpPage.tsx","common/filter.ts","components/Filters.tsx","pages/AvailabilityPage.tsx","components/Footer.tsx","components/viewinvite/FinalizedView.tsx","components/viewinvite/UnfinalizedView.tsx","pages/ViewInvite.tsx","components/Sidebar.tsx","components/ActivityFeed.tsx","assets/concert3.jpg","components/Header.tsx","App.tsx","reportWebVitals.ts","context/GlobalProvider.tsx","index.tsx"],"names":["UsernameInput","Item","label","name","rules","required","message","PasswordInput","Password","SubmitButton","children","wrapperCol","offset","span","type","htmlType","titleStyle","textAlign","marginTop","formStyle","width","margin","padding","border","borderRadius","React","createContext","username","Title","Typography","querystring","require","Login","wrongLogin","login","useContext","GlobalContext","style","labelCol","onFinish","data","axios","post","process","stringify","headers","then","res","catch","error","console","log","response","status","notification","open","duration","onClick","to","SignUp","password","confirmPassword","localStorage","setItem","window","location","href","Text","LockedOut","isOpen","LoginPage","useState","showLockedOut","setShowLockedOut","useEffect","loginEnabledTimeString","getItem","loginEnabledTime","Date","JSON","parse","interval","setInterval","clearInterval","failedAttemptsNum","failedAttempts","rightNow","oneMinLater","getTime","formatDate","dateString","toLocaleDateString","undefined","year","month","day","hour","minute","EventsList","events","onChange","selectedEvents","itemLayout","dataSource","marginLeft","renderItem","index","localDate","localTime","venueAddress","url","marginRight","e","checked","filter","event","length","Meta","title","description","SelectedEventList","containerStyle","display","buttonStyle","marginBottom","EventsSearch","setPage","setSelectedEvents","setGroupDateName","setEvents","button","level","target","newSelection","oldSelection","disabled","ISODateString","d","pad","n","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","Input","Search","RangePicker","DatePicker","Option","Select","genres","EventsFilter","onValuesChange","changedValues","allValues","a","requestBody","classificationName","genre","keyword","startDateTime","dateRange","endDateTime","city","stateCode","debouncedChangeHandler","useCallback","debounce","layout","placeholder","showTime","map","value","suffix","HomeOutlined","color","UserSearch","users","onSelect","query","setQuery","options","user","blocked","toLowerCase","includes","newQ","_","option","SelectedUsersList","selectedUsers","onRemove","removeText","EditGroupDate","page","setUsers","invitedUsers","setInvitedUsers","onSelectUser","body","onSubmit","u","columns","dataIndex","key","excitement","firstButtonStyle","FinalizedView","viewInviteStyle","ViewInvite","InviterView","BlockedUserSearch","reload","blockedUsersStyle","time","BlockedUser","blockedUser","isLast","makeStyle","remove","justifyContent","alignItems","borderBottom","BlockedUsers","blockedUsers","allUsers","title2Style","settingsContainerStyle","getSettingsContainerStyle","matchMedia","matches","flexDirection","settingsSectionStyle","getSettingsSectionStyle","blockUsersStyle","SettingsPage","blocked1","setBlocked","loggedInUsername","forEach","element","push","split","SignUpPage","defaultFilterState","finalized","unfinalized","responded","unresponded","filterGroupDates","groupDates","groupDate","Button","filterStyle","maxWidth","flexWrap","gap","backgroundColor","cursor","Filters","filterState","setFilterState","oldState","filterFinalized","filterUnfinalized","filterResponded","filterUnresponded","localizer","momentLocalizer","moment","height","eventMapper","start","startTime","end","endTime","AvailabilityPage","useHistory","selectable","defaultDate","views","onSelectEvent","oldEvents","onSelectSlot","eventPropGetter","opacity","Footer","sidebarShowing","footerStyle","position","bottom","left","Event","eventStyle","marginTopStyle","widthStyle","min","max","defaultValue","UnfinalizedView","sidebarStyle","top","borderRight","zIndex","listStyle","listStyleType","Sidebar","logout","pathname","useLocation","className","PlusCircleOutlined","activityFeed","document","querySelector","classList","showActivityFeeed","BarsOutlined","SettingOutlined","LogoutOutlined","Activity","gd","activityStyle","src","imageStyle","nameStyle","activityFeedStyle","overflow","boxShadow","objectFit","fontWeight","ActivityFeed","useRef","setGroupDates","current","add","addEventListener","activityButton","isClickInside","contains","isHidden","fetchGroupDates","gds","sort","b","date","ref","imgStyle","overlayStyle","fontSize","headerStyle","Header","logo","alt","App","resetTimer","clearTimeout","setTimeout","onload","onmousemove","onkeydown","inactivityTimer","exact","path","Inviter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalProvider","props","history","context","setContext","Provider","removeItem","ReactDOM","render","StrictMode","getElementById"],"mappings":"6PAEaA,EAA0B,WACnC,OACI,cAAC,IAAKC,KAAN,CACIC,MAAM,WACNC,KAAK,WACLC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,gCANrB,SAUI,cAAC,IAAD,OAWCC,EAA8C,SAAC,GAIrD,IAHHL,EAGE,EAHFA,MACAC,EAEE,EAFFA,KACAG,EACE,EADFA,QAEA,OACI,cAAC,IAAKL,KAAN,CACIC,MAAOA,EACPC,KAAMA,EACNC,MAAO,CACH,CACIC,UAAU,EACVC,YANZ,SAUI,cAAC,IAAME,SAAP,OASCC,EAA4C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxD,OACI,cAAC,IAAKT,KAAN,CAAWU,WAAY,CAAEC,OAAQ,EAAGC,KAAM,IAA1C,SACI,cAAC,IAAD,CAAQC,KAAK,UAAUC,SAAS,SAAhC,SACKL,OCpDJM,EAA6B,CACtCC,UAAW,SACXC,UAAW,OAGFC,EAA4B,CACrCC,MAAO,QACPC,OAAQ,SACRC,QAAS,MACTC,OAAQ,sBACRC,aAAc,O,iBCJHC,MAAMC,cAAgC,CACnDC,SAAU,OCFJC,EAAUC,IAAVD,MACJE,EAAcC,EAAQ,KAmCbC,EAA8B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAClCC,EAAUC,qBAAWC,GAArBF,MAwBR,OACI,gCACI,cAACN,EAAD,CAAOS,MAAOrB,EAAd,oBACA,eAAC,IAAD,CACIb,KAAK,QACLkC,MAAOlB,EACPmB,SAAU,CAAEzB,KAAM,GAClBF,WAAY,CAAEE,KAAM,IACpB0B,SA/BK,SAACC,GACdC,IACKC,KACGC,wCACAb,EAAYc,UAAUJ,GACtB,CACIK,QAAS,CACL,eAAgB,uCAI3BC,MAAK,SAACC,GACHb,EAAOa,EAAIP,KAAKb,aAEnBqB,OAAM,SAAUC,GACbC,QAAQC,IAAIF,EAAMG,SAASC,QAC3BpB,IAC6B,KAAzBgB,EAAMG,SAASC,QAnD/BC,IAAaC,KAAK,CACdjD,QAAS,4BACTkD,SAAU,IACVC,QAAS,WACLP,QAAQC,IAAI,gCAwDZ,UAOI,cAAC,EAAD,IACA,cAAC,EAAD,CACIjD,MAAM,WACNC,KAAK,WACLG,QAAQ,gCAEZ,cAAC,EAAD,oBAEA,kDACqB,cAAC,IAAD,CAAMoD,GAAG,UAAT,+BAOxBC,EAAS,WA8BlB,OACI,gCACI,cAAC/B,EAAD,CAAOS,MAAOrB,EAAd,qBACA,eAAC,IAAD,CACIb,KAAK,SACLkC,MAAOlB,EACPmB,SAAU,CAAEzB,KAAM,GAClBF,WAAY,CAAEE,KAAM,IACpB0B,SArCK,SAACC,GACd,GAAIA,EAAKoB,UAAYpB,EAAKqB,gBAK1B,OAAOpB,IACFC,KACGC,yCACAb,EAAYc,UAAUJ,GACtB,CACIK,QAAS,CACL,eAAgB,uCAI3BC,MAAK,SAACC,GACHe,aAAaC,QAAQ,WAAYhB,EAAIP,KAAKb,UAC1CuB,QAAQC,IAAIJ,EAAIP,MAChBwB,OAAOC,SAASC,KACZvB,6BAEPK,OAAM,SAAUC,GACbC,QAAQC,IAAIF,EAAMG,SAASC,QACE,KAAzBJ,EAAMG,SAASC,QAxF/BC,IAAaC,KAAK,CACdjD,QAAS,0BACTkD,SAAU,IACVC,QAAS,WACLP,QAAQC,IAAI,+BAdpBG,IAAaC,KAAK,CACdjD,QAAS,yBACTkD,SAAU,IACVC,QAAS,WACLP,QAAQC,IAAI,6BAsGZ,UAOI,cAAC,EAAD,IACA,cAAC,EAAD,CACIjD,MAAM,WACNC,KAAK,WACLG,QAAQ,gCAEZ,cAAC,EAAD,CACIJ,MAAM,mBACNC,KAAK,kBACLG,QAAQ,kCAGZ,cAAC,EAAD,6BAEA,0DAC6B,cAAC,IAAD,CAAMoD,GAAG,IAAT,8B,kBClJrCS,EAAStC,IAATsC,KAEKC,EAAY,kBACrB,cAAC,IAAD,CAAYC,QAAQ,EAApB,SACI,cAACF,EAAD,CAAMrD,KAAK,SAAX,iGCuDOwD,EAzDa,WACxB,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACAC,qBAAU,WACN,IAAMC,EACFX,OAAOF,aAAac,QAAQ,oBAChC,GAA+B,OAA3BD,EAAJ,CAEA,IAAME,EAAyB,IAAIC,KAC/BC,KAAKC,MAAML,IAETM,EAAWC,aAAY,WAER,IAAIJ,KACND,GACXJ,GAAiB,SAACD,GAAD,OAAmB,KACpCW,cAAcF,IAEdR,GAAiB,SAACD,GAAD,OAAmB,OAEzC,KAEH,OAAO,WACHW,cAAcF,OAEnB,IAyBH,OACI,qCACI,cAAC,EAAD,CAAOhD,WAzBI,WACf,IAEImD,EAFAC,EACArB,OAAOF,aAAac,QAAQ,kBAKhC,GAH6BQ,EAAN,OAAnBC,EAA6C,EACxBN,KAAKC,MAAMK,GAER,MAAtBD,EAAyB,CAC3BX,GAAiB,GACjB,IAAMa,EAAW,IAAIR,KACfS,EAAc,IAAIT,KAAKQ,EAASE,UAAY,KAClDxB,OAAOF,aAAaC,QAChB,mBACAgB,KAAKnC,UAAU2C,IAIvBvB,OAAOF,aAAaC,QAChB,iBACAgB,KAAKnC,UAAUwC,EAAoB,OAOlCZ,GAAiB,cAAC,EAAD,Q,4DClDjBiB,EAAa,SAACC,GAQvB,OAAO,IAAIZ,KAAKY,GAAYC,wBAAmBC,EAPH,CACxCC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,aA+DDC,EApD+B,SAAC,GAIxC,IAHHC,EAGE,EAHFA,OACAC,EAEE,EAFFA,SACAC,EACE,EADFA,eAEA,OACI,cAAC,IAAD,CACIC,WAAW,aACXC,WAAYJ,EACZ9D,MAAO,CACHmE,WAAY,MACZpF,MAAO,KAEXqF,WAAY,WAERC,GAFQ,IACNvG,EADM,EACNA,KAAMwG,EADA,EACAA,UAAWC,EADX,EACWA,UAAWC,EADtB,EACsBA,aADtB,EACoCC,IADpC,OAIR,cAAC,IAAK7G,KAAN,CACIoC,MAAO,CACHf,QAAS,IAFjB,SAKI,qCACI,cAAC,IAAD,CACIe,MAAO,CACH0E,YAAa,IAGjBX,SAAU,SAACY,GAAD,OAAOZ,EAASY,EAAGN,IAC7BO,QAOiB,IANbZ,EAAea,QACX,SAACC,GAAD,OACIA,EAAMhH,OAASA,GACfgH,EAAMR,WAAaA,GACnBQ,EAAMP,WAAaA,GACnBO,EAAMN,cAAgBA,KAC5BO,SAGV,cAAC,IAAKnH,KAAKoH,KAAX,CACIC,MAAOnH,EACPoH,YAAW,UAAKV,EAAL,cAAuBpB,EAC9BkB,eC1BjBa,EA/B8C,SAAC,GAEvD,IADHnB,EACE,EADFA,eAEA,OACI,cAAC,IAAD,CACIC,WAAW,aACXC,WAAYF,EACZhE,MAAO,CACHjB,MAAO,KAEXqF,WAAY,WAERC,GAFQ,IACNvG,EADM,EACNA,KAAMwG,EADA,EACAA,UAAsBE,GADtB,EACWD,UADX,EACsBC,cADtB,EACoCC,IADpC,OAIR,cAAC,IAAK7G,KAAN,CACIoC,MAAO,CACHf,QAAS,IAFjB,SAKI,cAAC,IAAKrB,KAAKoH,KAAX,CACIC,MAAOnH,EACPoH,YAAW,UAAKV,EAAL,cAAuBpB,EAC9BkB,YCdpB/E,EAAUC,IAAVD,MAqEF6F,EAAiC,CACnCC,QAAS,QAGPC,EAA8B,CAChCC,aAAc,OAGHC,EA3EmC,SAAC,GAK5C,IAJHC,EAIE,EAJFA,QACAzB,EAGE,EAHFA,eACA0B,EAEE,EAFFA,kBACAC,EACE,EADFA,iBAEA,EAA4BzD,mBAA8B,IAA1D,mBAAO4B,EAAP,KAAe8B,EAAf,KAEMC,EAAmC,IAA1B7B,EAAee,OAAe,EAAI,EAmBjD,OACI,qCACI,cAAC,EAAD,CAAO/E,MAAO,CAAEf,QAAS,IAAzB,+BACA,sBAAKe,MAAOoF,EAAZ,UACI,gCACI,cAAC,GAAD,CACIQ,UAAWA,EACXD,iBAAkBA,IAEK,IAA1B3B,EAAee,QACZ,cAAC,EAAD,CAAOe,MAAO,EAAG9F,MAAO,CAAEf,QAAS,IAAnC,6BAIJ,cAAC,EAAD,CAAmB+E,eAAgBA,OAGvC,cAAC,EAAD,CACIF,OAAQA,EACRE,eAAgBA,EAChBD,SArCO,SAACY,EAAwBN,GAE5C,GADgBM,EAAEoB,OAAOnB,QACZ,CACT,IAAMoB,EAAY,sBAAOhC,GAAP,CAAuBF,EAAOO,KAChDqB,GAAkB,SAACO,GAAD,OAAkBD,SACjC,CACH,IAAMA,EAAehC,EAAea,QAChC,SAACC,GAAD,OACIA,EAAMhH,OAASgG,EAAOO,GAAOvG,MAC7BgH,EAAMR,YAAcR,EAAOO,GAAOC,WAClCQ,EAAMP,YAAcT,EAAOO,GAAOE,WAClCO,EAAMN,eAAiBV,EAAOO,GAAOG,gBAE7CkB,GAAkB,SAACO,GAAD,OAAkBD,YA4BxB,IAAXH,GACG,eAAC,IAAD,CAAQK,UAAQ,EAAC9E,QAAS,kBAAMqE,EAAQ,IAAIzF,MAAOsF,EAAnD,UACK,IADL,OAES,OAGD,IAAXO,GACG,eAAC,IAAD,CAAQzE,QAAS,kBAAMqE,EAAQ,IAAIzF,MAAOsF,EAA1C,UACK,IADL,OAES,W,mCC/ElB,SAASa,EAAcC,GAC1B,SAASC,EAAIC,GAAa,OAAOA,EAAE,GAAK,IAAIA,EAAIA,EAChD,OAAOF,EAAEG,iBAAiB,IACnBF,EAAID,EAAEI,cAAc,GAAG,IACvBH,EAAID,EAAEK,cAAc,IACpBJ,EAAID,EAAEM,eAAe,IACrBL,EAAID,EAAEO,iBAAiB,IACvBN,EAAID,EAAEQ,iBAAiB,ICCfC,IAAXC,OAAR,IACQC,EAAgBC,IAAhBD,YACAE,EAAWC,IAAXD,OAEFE,EAAS,CAAC,WAAY,SAAU,UA0EvBC,GApEmC,SAAC,GAG5C,IAFHxB,EAEE,EAFFA,UACAD,EACE,EADFA,iBAEM0B,EAAc,uCAAG,WAAOC,EAAoBC,GAA3B,2BAAAC,EAAA,6DACnB7B,EAAgB,UAAC4B,EAAUzJ,YAAX,QAAmB,IAC7BmF,EAAW,IAAIR,KACfgF,EAAc,CAChBC,mBAAkB,UAAEH,EAAUI,aAAZ,QAAqB,GACvCC,QAAO,UAAEL,EAAUK,eAAZ,QAAuB,GAC9BC,cAAeN,EAAUO,UACnB3B,EAAcoB,EAAUO,UAAU,IAClC3B,EAAclD,GACpB8E,YAAaR,EAAUO,UACjB3B,EAAcoB,EAAUO,UAAU,IAClC3B,EACI,IAAI1D,KAAKQ,EAASE,UAAY,SAExC6E,KAAI,UAAET,EAAUS,YAAZ,QAAoB,GACxBC,UAAW,IAfI,SAkBD7H,IAAMC,KACpBC,0CACAmH,GApBe,OAkBb/G,EAlBa,OAsBnBkF,EAAUlF,EAAIP,MAtBK,2CAAH,wDAyBd+H,EAAyBC,sBAC3BC,mBAASf,EAAgB,KACzB,IAGJ,OACI,eAAC,IAAD,CACIrH,MAAO,CAAEjB,MAAO,IAAKE,QAAS,IAC9BoJ,OAAO,WACPhB,eAAgBa,EAHpB,UAKI,cAAC,IAAKtK,KAAN,CAAWC,MAAM,kBAAkBC,KAAK,OAAxC,SACI,cAAC,IAAD,CAAOwK,YAAY,uCAEvB,cAAC,IAAK1K,KAAN,CAAWC,MAAM,UAAUC,KAAK,UAAhC,SACI,cAAC,IAAD,CAAOwK,YAAY,8BAEvB,cAAC,IAAK1K,KAAN,CAAWC,MAAM,aAAaC,KAAK,YAAnC,SACI,cAACiJ,EAAD,CAAawB,UAAQ,EAACvI,MAAO,CAAEjB,MAAO,YAE1C,cAAC,IAAKnB,KAAN,CAAWC,MAAM,QAAQC,KAAK,QAA9B,SACI,cAAC,IAAD,CAAQwK,YAAY,iBAApB,SACKnB,EAAOqB,KAAI,SAACb,GAAD,OACR,cAACV,EAAD,CAAQwB,MAAOd,EAAf,SAAuBA,WAInC,cAAC,IAAK/J,KAAN,CAAWC,MAAM,OAAOC,KAAK,OAA7B,SACI,cAAC,IAAD,CACIwK,YAAY,kBACZI,OACI,cAACC,EAAA,EAAD,CAAc3I,MAAO,CAAE4I,MAAO,6B,UCnE9CrJ,GAAUC,IAAVD,MAsCOsJ,GApC+B,SAAC,GAKxC,IAJH5D,EAIE,EAJFA,MACAqD,EAGE,EAHFA,YACAQ,EAEE,EAFFA,MACAC,EACE,EADFA,SAEA,EAA0B7G,mBAAiB,IAA3C,mBAAO8G,EAAP,KAAcC,EAAd,KACA,OACI,sBAAKjJ,MAAO,CAAEf,QAAS,IAAvB,UACI,cAAC,GAAD,UAAQgG,IACR,cAAC,KAAD,CACIiE,QAASJ,EACJjE,QAAO,SAACsE,GAAD,OAAWA,EAAKC,WACvBvE,QAAO,SAACsE,GAAD,OACJA,EAAK7J,SACA+J,cACAC,SAASN,EAAMK,kBAEvBb,KAAI,SAACW,GAAD,MAAW,CACZV,MAAOU,EAAK7J,SACZzB,MAAOsL,EAAK7J,SACZ6J,WAERnJ,MAAO,CAAEjB,MAAO,KAChBuJ,YAAaA,EACbG,MAAOO,EACPjF,SAAU,SAACwF,GAAD,OAAUN,EAASM,IAC7BR,SAAU,SAACS,EAAGC,GACF,OAARV,QAAQ,IAARA,KAAYU,EAAeN,MAC3BF,EAAS,W,qBCIdS,GApC6C,SAAC,GAItD,IAHHC,EAGE,EAHFA,cACAC,EAEE,EAFFA,SACAC,EACE,EADFA,WAEA,OACI,qCAC8B,IAAzBF,EAAc5E,QACX,cAAC,KAAD,CAAOe,MAAO,EAAG9F,MAAO,CAAEf,QAAS,IAAnC,2BAIJ,cAAC,IAAD,CACIgF,WAAW,aACXC,WAAYyF,EACZ3J,MAAO,CACHjB,MAAO,IACPwG,aAAc,OAElBnB,WAAY,SAAC+E,EAAM9E,GAAP,OACR,eAAC,IAAKzG,KAAN,CACIoC,MAAO,CACHf,QAAS,IAFjB,UAKI,cAAC,IAAKrB,KAAKoH,KAAX,CAAgBC,MAAOkE,EAAK7J,WAC5B,cAAC,IAAD,CAAQb,KAAK,UAAU2C,QAAS,SAACuD,GAAD,OAAOiF,EAAST,IAAhD,SACKU,cCsDvBzE,GAAiC,CACnCjB,WAAY,OAGD2F,GArFiB,WAC5B,IAAQxK,EAAaQ,qBAAWC,GAAxBT,SACR,EAAwB4C,mBAAS,GAAjC,mBAAO6H,EAAP,KAAatE,EAAb,KACA,EAA0CvD,mBAAS,IAAnD,mBAAsByD,GAAtB,WACA,EAA4CzD,mBACxC,IADJ,mBAAO8B,EAAP,KAAuB0B,EAAvB,KAIA,EAA0BxD,mBAAiB,IAA3C,mBAAO4G,EAAP,KAAckB,EAAd,KACA,EAAwC9H,mBAAiB,IAAzD,mBAAO+H,EAAP,KAAqBC,EAArB,KAEMC,EAAY,uCAAG,WAAOhB,GAAP,mBAAA3B,EAAA,6DACX4C,EAAO,CACT9K,WACA6J,KAAMA,EAAK7J,SACXwE,OAAQE,GAJK,SAMM5D,IAAMC,KACzBC,qCACA8J,GARa,kBAMTjK,MAKE6F,EADA,sBACmBiE,GADnB,CACiCd,IACvCe,GAAgB,SAACjE,GAAD,OAAkBD,MAElC/E,IAAaC,KAAK,CACdjD,QACI,8EACJkD,SAAU,MAjBD,2CAAH,sDA6BlBkB,qBAAU,WACNjC,IACKC,KAAKC,uCACLG,MAAK,SAACC,GAAD,OAASsJ,EAAStJ,EAAIP,WACjC,IAEH,IAAMkK,OAAW9G,EAEjB,OACI,sBAAKvD,MAAOoF,GAAZ,UACc,IAAT2E,GACG,cAAC,EAAD,CACItE,QAASA,EACTzB,eAAgBA,EAChB0B,kBAAmBA,EACnBC,iBAAkBA,IAGhB,IAAToE,GACG,qCACI,cAAC,GAAD,CACI9E,MAAM,YACNqD,YAAY,YACZQ,MAAOA,EACPC,SAAUoB,IAEd,uBACA,cAAC,GAAD,CACIN,WAAW,SACXD,SApCC,SAACT,GAClB,IAAMnD,EAAeiE,EAAapF,QAC9B,SAACyF,GAAD,OAAOA,EAAEhL,WAAa6J,EAAK7J,YAE/B4K,GAAgB,SAACjE,GAAD,OAAkBD,MAiClB2D,cAAeM,IAEnB,cAAC,IAAD,CAAQ7I,QAASiJ,EAAjB,mBACC,KACD,cAAC,IAAD,CAAQjJ,QAASiJ,EAAjB,mC,UClFPE,GAAU,CACnB,CACItF,MAAO,OACPuF,UAAW,OACXC,IAAK,QAET,CACIxF,MAAO,WACPuF,UAAW,WACXC,IAAK,YAET,CACIxF,MAAO,aACPuF,UAAW,aACXC,IAAK,eAIAvG,GAAa,CACtB,CACIuG,IAAK,IACL3M,KAAM,UACNiD,SAAU,MACV2J,WAAY,KAEhB,CACID,IAAK,IACL3M,KAAM,SACNiD,SAAU,MACV2J,WAAY,MAIPC,GAAmC,CAC5CjG,YAAa,OC/BTnF,GAAUC,IAAVD,MAgBOqL,GAdO,WAElB,OACI,qCACI,cAAC,GAAD,CAAO9E,MAAO,EAAd,0CACA,cAAC,GAAD,CAAOA,MAAO,EAAd,sBACA,cAAC,KAAD,CAAO5B,WAAYA,GAAYqG,QAASA,KACxC,eAAC,GAAD,CAAOzE,MAAO,EAAd,oCANK,EAML,OACA,eAAC,GAAD,CAAOA,MAAO,EAAd,4BAAgC,cAAC,KAAD,OALpC,IAMI,cAAC,IAAD,CAAQrH,KAAK,UAAb,0CCVJc,GAAUC,IAAVD,MAgBFsL,GAAkC,CACpC5L,QAAS,OAGE6L,GAlBI,WAGf,OACI,sBAAK9K,MAAO6K,GAAZ,UACI,cAAC,GAAD,8BACA,eAAC,GAAD,CAAO/E,MAAO,EAAd,qBACuC,iBAEvC,cAACiF,GAAD,Q,SCLJxL,GAAUC,IAAVD,MACJE,GAAcC,EAAQ,KAuDXsL,GArD6C,SAAC,GAItD,IAHH/F,EAGE,EAHFA,MACAqD,EAEE,EAFFA,YACAQ,EACE,EADFA,MAEA,EAA0B5G,mBAAiB,IAA3C,mBAAO8G,EAAP,KAAcC,EAAd,KAuBA,OACI,sBAAKjJ,MAAO,CAAEf,QAAS,IAAvB,UACI,cAAC,GAAD,UAAQgG,IACR,cAAC,KAAD,CACIiE,QAASJ,EACJjE,QAAO,SAACsE,GAAD,OACJA,EAAKrL,KACAuL,cACAC,SAASN,EAAMK,kBAEvBb,KAAI,SAACW,GAAD,MAAW,CACZV,MAAOU,EAAKrL,KACZD,MAAOsL,EAAKrL,KACZqL,WAERnJ,MAAO,CAAEjB,MAAO,KAChBuJ,YAAaA,EACbG,MAAOO,EACPjF,SAAU,SAACwF,GAAD,OAAUN,EAASM,MAElC,cAAC,IAAD,CAAQnI,QA1CA,WACX,GAAI4H,EAAM,CACNnI,QAAQC,IAAI,QAAQkI,GACpB,IAEM7I,EAAO,CAAC,SAFGsB,aAAac,QAAQ,YAEF,KADvByG,EACqC,OAAU,OAC5D5I,IAAMC,KAAKC,qCACXb,GAAYc,UAAUJ,GACtB,CACIK,QAAS,CACT,eAAgB,uCAEjBC,MAAM,SAAAC,GACLG,QAAQC,IAAI,qBAAqBJ,EAAIP,MACrCwB,OAAOC,SAASqJ,YACjBtK,OAAM,SAAUC,GACfC,QAAQC,IAAIF,EAAMG,SAASC,QAC3BH,QAAQC,IAAIF,EAAMG,UAClBF,QAAQC,IAAIF,QAwBjB,wBCzDPnB,GAAcC,EAAQ,KAmBpBwL,GAAoC,CACtClM,OAAQ,QACRE,OAAQ,oBACRC,aAAc,OA2BlB,ICvDIgM,GDuDEC,GAA0C,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAhB,OAC5C,sBAAKtL,MAAOuL,GAAUD,GAAtB,UACI,oBAAGtL,MAAO,CAAEnB,UAAW,UAAvB,cAAqCwM,EAAYvN,QACjD,cAAC,IAAD,CAAQW,KAAK,UAAU2C,QAAS,kBAtBxC,SAAgBtD,GACZ,IACMqL,EAAOrL,EACPqC,EAAO,CAAE,SAFEsB,aAAac,QAAQ,YAED,KAAQ4G,EAAM,OAAU,UAE7D,OADAtI,QAAQC,IAAIqI,GACL/I,IAAMC,KAAKC,qCACdb,GAAYc,UAAUJ,GACtB,CACIK,QAAS,CACL,eAAgB,uCAErBC,MAAK,SAAAC,GACJG,QAAQC,IAAIJ,EAAIP,MAChBwB,OAAOC,SAASqJ,YACjBtK,OAAM,SAAUC,GACfC,QAAQC,IAAIF,EAAMG,SAASC,WAOOwK,CAAOH,EAAYvN,OAAzD,yBAIFyN,GAAY,SAACD,GAQf,MAPyC,CACrCjG,QAAS,OACToG,eAAgB,gBAChBC,WAAY,SACZC,aAAcL,EAAS,EAAI,oBAC3BrM,QAAS,cAKF2M,GA7DmC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjD,OACI,qBAAK7L,MAAOkL,GAAZ,SACKW,EAAarD,KAAI,SAAC6C,EAAahH,GAAd,OACd,cAAC,GAAD,CACIgH,YAAaA,EACbC,OAAQjH,IAAUwH,EAAa9G,OAAS,UEVpDxF,GAAUC,IAAVD,MACJuM,GAA0B,GAE1BrM,GAAcC,EAAQ,KAsEpBf,GAA6B,CAC/BK,OAAQ,MACRmF,WAAY,OAGV4H,GAA8B,CAChCnN,UAAW,SACXC,UAAW,OAGTmN,GAAyC,CAC3C3G,QAAS,OACTnG,OAAQ,qBACRF,OAAQ,QACRG,aAAc,MACdsM,eAAe,SACfC,WAAW,UAGTO,GAA4B,WAE9B,OADmBtK,OAAOuK,WAAW,uBACtBC,QACJ,6BACAH,IADP,IAEII,cAAe,WAGhBJ,IAGLK,GAAuC,CACzCtN,MAAO,OAGLuN,GAA0B,WAE5B,OADmB3K,OAAOuK,WAAW,uBACtBC,QACJ,6BACAE,IADP,IAEItN,MAAO,UAGRsN,IAGLE,GAAkC,CACpCxN,MAAO,MACPC,OAAQ,UAGGwN,GAtHgB,WAC3B,MAA+BtK,qBAA/B,mBAAOuK,EAAP,KAAiBC,EAAjB,KACItD,EAA0B,GA6C9B,OA5CA/G,qBAAU,WACN,IAAMsK,EAAmBlL,aAAac,QAAQ,YAC9CnC,IAAMC,KAAKC,uCAAsDG,MAAM,SAAAC,GAEnEA,EAAIP,KAAKyM,SAAQ,SAACC,GACVA,EAAQvN,UAAUqN,GAClBb,GAASgB,KAAK,CAAChP,KAAM+O,EAAQvN,cAGrCuB,QAAQC,IAAI,WAAYgL,OACzBnL,OAAM,SAAUC,GACfC,QAAQC,IAAIF,EAAMG,SAASC,QAC3BH,QAAQC,IAAIF,EAAMG,UAClBF,QAAQC,IAAIF,QAEf,IAEHyB,qBAAU,WACR,IACMlC,EAAO,CAAC,SADGsB,aAAac,QAAQ,YACF,KAAQ,GAAI,OAAU,QAC1D6G,EAAU,GAEVhJ,IAAMC,KAAKC,qCACPb,GAAYc,UAAUJ,GACtB,CACIK,QAAS,CACT,eAAgB,uCAEjBC,MAAM,SAAAC,GACLG,QAAQC,IAAIJ,EAAIP,MAChBU,QAAQC,IAAI,2BAA4BsI,GAC5B1I,EAAIP,KAAK4M,MAAM,KACrBH,SAAQ,SAACC,GACG,SAAVA,GACAzD,EAAQ0D,KAAK,CAAChP,KAAM+O,OAG5BH,EAAWtD,GACXvI,QAAQC,IAAI,0BAA2BsI,MACxCzI,OAAM,SAAUC,GACfC,QAAQC,IAAIF,EAAMG,SAASC,aAElC,IAGD,qCACI,cAAC,GAAD,CAAOhB,MAAOrB,GAAd,sBACA,qBAAKqB,MAAOiM,KAAZ,SACI,sBAAKjM,MAAOsM,KAAZ,UACI,cAAC,GAAD,CAAOxG,MAAO,EAAG9F,MAAO+L,GAAxB,yBAGA,sBAAK/L,MAAOuM,GAAZ,UACI,cAAC,GAAD,CACIjE,YAAY,eACZQ,MAAOgD,KAEX,cAAC,GAAD,CAAcD,kBAAwBtI,GAAVkJ,EAAqBA,EAAUrD,gBClEpE4D,GAJc,WACzB,OAAO,cAAC,EAAD,K,uCC6BEC,GAAqB,CAC9BC,WAAY,EACZC,aAAc,EACdC,WAAY,EACZC,aAAc,GAKLC,GAAmB,SAACC,EAA0B1I,GAEvD,IAAInE,EAAiB,YAAO6M,GAM5B,OALI1I,EAAOqI,YAAWxM,EAAMA,EAAImE,QAAO,SAAC2I,GAAD,OAA2BA,EAAUxM,OAAOsI,SAAS,kBACxFzE,EAAOsI,cAAazM,EAAMA,EAAImE,QAAO,SAAC2I,GAAD,OAA2BA,EAAUxM,OAAOsI,SAAS,mBAC1FzE,EAAOuI,YAAW1M,EAAMA,EAAImE,QAAO,SAAC2I,GAAD,MAAgD,sBAArBA,EAAUxM,WACxE6D,EAAOwI,cAAa3M,EAAMA,EAAImE,QAAO,SAAC2I,GAAD,MAAgD,sBAArBA,EAAUxM,QAAuD,wBAArBwM,EAAUxM,WAEnHN,GCgBL+M,GAAgC,SAAC,GAA2B,IAAzBpP,EAAwB,EAAxBA,SAAU+C,EAAc,EAAdA,QAC/C,OACI,wBAAQpB,MAAOsF,GAAalE,QAASA,EAArC,SACK/C,KAKPqP,GAA8B,CAChCrI,QAAS,OACTqG,WAAY,SACZzM,QAAS,MACT0O,SAAU,OACVC,SAAU,OACVC,IAAK,MACLlC,aAAc,4BACdpG,aAAc,OAGZD,GAA8B,CAChCnG,aAAc,OACdF,QAAS,SACTC,OAAQ,8BACR0J,MAAO,oBACPkF,gBAAiB,OACjBC,OAAQ,WAGGC,GA9EwB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eACnD,OACI,sBAAKlO,MAAO0N,GAAZ,UACI,cAAC,GAAD,CACItM,QAAS,SAACoI,GAAD,OACL0E,GAAe,SAACC,GAAD,ODZJ,SAACA,GAAD,oBAAC,gBACzBA,GADwB,IAE3BjB,WAAY,EACZC,aAAc,ICS+BiB,CAAgBH,OAFrD,uBAQA,cAAC,GAAD,CACI7M,QAAS,SAACoI,GAAD,OACL0E,GAAe,SAACC,GAAD,ODdF,SAACA,GAAD,oBAAC,gBAC3BA,GAD0B,IAE7BjB,WAAY,EACZC,aAAc,ICW+BkB,CAAkBJ,OAFvD,yBAQA,cAAC,GAAD,CACI7M,QAAS,SAACoI,GAAD,OACL0E,GAAe,SAACC,GAAD,ODhBJ,SAACA,GAAD,oBAAC,gBACzBA,GADwB,IAE3Bf,WAAY,EACZC,aAAc,ICa+BiB,CAAgBL,OAFrD,uBAQA,cAAC,GAAD,CACI7M,QAAS,SAACoI,GAAD,OACL0E,GAAe,SAACC,GAAD,ODlBF,SAACA,GAAD,oBAAC,gBAC3BA,GAD0B,IAE7Bf,WAAY,EACZC,aAAc,ICe+BkB,CAAkBN,OAFvD,yBAOA,cAAC,GAAD,CACI7M,QAAS,SAACoI,GAAD,OACL0E,GAAe,SAACC,GAAD,OAAclB,OAFrC,+BCrCNuB,GAAYC,aAAgBC,MAE5BtJ,GAAiC,CACnCuJ,OAAQ,OACR9P,UAAW,MACXE,MAAO,OACPoF,WAAY,MACZoB,aAAc,QAGZqJ,GAAc,SAAC9K,GACjB,OAAOA,EAAO0E,KAAI,SAAC1D,EAAOT,GAAR,MAAmB,CACjCA,QACAY,MAAOH,EAAMA,MACb+J,MAAO,IAAIpM,KAAKqC,EAAMgK,WACtBC,IAAK,IAAItM,KAAKqC,EAAMkK,cAgGbC,GA5FoB,WAC/B,IAAQ3P,EAAaQ,qBAAWC,GAAxBT,SACR,EAAsC4C,mBAAS+K,IAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KAEA,GADgBgB,cACYhN,mBAAgB,CACxC,CACI4C,MAAO,YACPgK,UAAW,qBACXE,QAAS,yBAJjB,mBAAOlL,EAAP,KAAe8B,EAAf,KAmEA,OACI,sBAAK5F,MAAOoF,GAAZ,UACI,cAAC,GAAD,CACI6I,YAAaA,EACbC,eAAgBA,IAGpB,cAAC,KAAD,CACIiB,YAAU,EACVC,YAAa,IAAI3M,KACjB4M,MAAO,CAAC,QAAS,OAAQ,OACzBb,UAAWA,GACX1K,OAAQ8K,GAAY9K,GACpBwL,cAxEU,SAACxK,GACnB,IAAMgK,EAAY3I,EAAcrB,EAAM+J,OAChCG,EAAU7I,EAAcrB,EAAMiK,KAEpC,GAAoB,gBAAhBjK,EAAMG,MAAyB,CAE/B,IAAMR,EACFnE,0CAAA,oCAE6BhB,EAF7B,sBAEmDwP,EAFnD,oBAEwEE,EAFxE,sBAIJ5O,IAAMC,KAAKoE,GACXmB,GAAU,SAAC2J,GAAD,OACNA,EAAU1K,QACN,SAACF,GAAD,OACIA,EAAEG,QAAUA,EAAMG,OAClBN,EAAEmK,YAAcA,GAChBnK,EAAEqK,UAAYA,UAwDtBQ,aAlDS,SAAC,GAA8B,IAA5BX,EAA2B,EAA3BA,MAAOE,EAAoB,EAApBA,IAGrBD,EAAY3I,EAAc0I,GAC1BG,EAAU7I,EAAc4I,GACxBtK,EACFnE,0CAAA,iCAE0BhB,EAF1B,sBAEgDwP,EAFhD,oBAEqEE,EAFrE,sBAIJ5O,IAAMC,KAAKoE,GACX,IAAMK,EAAQ,CACVA,MAAO,cACPgK,YACAE,WAEJpJ,GAAU,SAAC2J,GAAD,4BAAmBA,GAAnB,CAA8BzK,QAmChC2K,gBAhCa,SAAC3K,GAYtB,MAAO,CACH9E,MAZQ,CACR8N,gBACoB,gBAAhBhJ,EAAMG,MACA,OACA,0BACV9F,aAAc,MACduQ,QAAS,GACT9G,MAAO,QACP1J,OAAQ,MACRmG,QAAS,iBCpENsK,GAxBA,WACX,IACMC,EAA8B,OADf9P,qBAAWC,GAAxBT,SAGFuQ,EAA8B,CAChC9Q,MAAO6Q,EAAiB,qBAAuB,QAC/C3Q,QAAS,UACToG,QAAS,OACToG,eAAgB,gBAChBqC,gBAAiB,oBACjBlF,MAAO,QACPkH,SAAU,WACVC,OAAQ,IACRC,KAAMJ,EAAiB,OAAS,GAGpC,OACI,yBAAQ5P,MAAO6P,EAAf,UACI,uDACA,yD,ICnBMrQ,IAAVD,M,QCCAA,GAAUC,IAAVD,MAcF0Q,GAAQ,kBACV,sBAAKjQ,MAAOkQ,GAAZ,UACI,cAAC,GAAD,CAAOpK,MAAO,EAAd,wBACA,cAAC,GAAD,CAAOA,MAAO,EAAd,wBACA,cAAC,GAAD,CAAOA,MAAO,EAAd,sBACA,cAAC,KAAD,CAAO5B,WAAYA,GAAYqG,QAASA,KACxC,cAAC,IAAD,CAAQ9L,KAAK,UAAUuB,MAAO2K,GAA9B,iBAGA,cAAC,IAAD,CAAQlM,KAAK,UAAb,gBACA,uBACA,cAAC,GAAD,CAAOuB,MAAOmQ,GAAgBrK,MAAO,EAArC,kCAGA,cAAC,KAAD,CAAQ9F,MAAOoQ,GAAYC,IAAK,EAAGC,IAAK,EAAGC,aAAc,QAI3DL,GAA6B,CAC/B/L,WAAY,MACZlF,QAAS,MACTC,OAAQ,4BACRC,aAAc,MACdoG,aAAc,OAGZ4K,GAAiC,CACnCtR,UAAW,SAGTuR,GAA6B,CAC/BrR,MAAO,SAGIyR,GA9CS,WACpB,OACI,gCACI,cAAC,GAAD,IACA,cAAC,IAAD,CAAQ/R,KAAK,UAAUuB,MAAO2K,GAA9B,oBAGA,cAAC,IAAD,CAAQlM,KAAK,UAAb,4BCRJc,GAAUC,IAAVD,MAgBFsL,GAAkC,CACpC5L,QAAS,OAGE6L,GAlBI,WAGf,OACI,sBAAK9K,MAAO6K,GAAZ,UACI,cAAC,GAAD,8BACA,eAAC,GAAD,CAAO/E,MAAO,EAAd,qBACuC,iBAEN,cAAC,GAAD,Q,wCC0CvC2K,GAA+B,CACjCX,SAAU,QACVnB,OAAQ,QACR+B,IAAK,EACLV,KAAM,EACNjR,MAAO,OACP4R,YAAa,4BACbC,OAAQ,EACRvL,QAAS,OACT+G,cAAe,SACfV,WAAY,SACZD,eAAgB,UAGdoF,GAA4B,CAC9BC,cAAe,OACf9R,OAAQ,EACRC,QAAS,GAGE8R,GAnEC,WACZ,IAAQC,EAAWlR,qBAAWC,GAAtBiR,OAEFC,EADWC,cACSD,SAO1B,OACI,qBAAKE,UAAU,UAAUnR,MAAOyQ,GAAhC,SACI,qBAAIzQ,MAAO6Q,GAAX,UACI,oBAAIM,UAAwB,MAAbF,EAAmB,WAAa,GAA/C,SACI,cAAC,IAAD,CAAM5P,GAAG,IAAT,SACI,cAACsH,EAAA,EAAD,QAGR,oBAAIwI,UAAwB,aAAbF,EAA0B,WAAa,GAAtD,SACI,cAAC,IAAD,CAAM5P,GAAG,WAAT,SACI,cAAC+P,GAAA,EAAD,QAGR,oBAAID,UAAwB,aAAbF,EAA0B,WAAa,GAAtD,SACI,cAAC,IAAD,CACI5P,GAAG,IACHD,QAAS,kBArBH,WACtB,IAAMiQ,EAAeC,SAASC,cAAc,kBAChC,OAAZF,QAAY,IAAZA,KAAcG,UAAUhG,OAAO,UAmBAiG,IACfN,UAAU,kBAHd,SAKI,cAACO,GAAA,EAAD,QAGR,oBAAIP,UAAwB,cAAbF,EAA2B,WAAa,GAAvD,SACI,cAAC,IAAD,CAAM5P,GAAG,YAAT,SACI,cAACsQ,GAAA,EAAD,QAGR,6BACI,cAAC,IAAD,CAAMtQ,GAAG,IAAID,QAAS,kBAAM4P,KAA5B,SACI,cAACY,GAAA,EAAD,cC2BlBC,GAAoC,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,OACtC,sBAAK9R,MAAO+R,GAAZ,UACI,qBACIC,IAAI,iKACJhS,MAAOiS,KAEX,gCACI,mBAAGjS,MAAOkS,GAAV,SAAsBJ,EAAG7M,QACzB,4BACK6M,EAAG9Q,OAAOsI,SAAS,cAAgB,YAAc,uBAM5D6I,GAAoC,CACtCxD,OAAQ,QACR5P,MAAO,QACP+Q,SAAU,QACVY,IAAK,EACLV,KAAM,EACNlC,gBAAiB,sBACjB7O,QAAS,MACT2R,OAAQ,EACRwB,SAAU,UAGRL,GAAgC,CAClC1M,QAAS,OACTqG,WAAY,SACZzM,QAAS,MACT6O,gBAAiB,QACjBuE,UAAW,8BAGTJ,GAA6B,CAC/BlT,MAAO,QACP4P,OAAQ,QACR2D,UAAW,QACXnT,aAAc,MACduF,YAAa,OAGXwN,GAA4B,CAC9BK,WAAY,KAGDC,GArHM,WACjB,IAAQlT,EAAaQ,qBAAWC,GAAxBT,SACR,EAAsC4C,mBAAS+K,IAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KACMmD,EAAeoB,iBAAuB,MAC5C,EAAoCvQ,mBAAsB,IAA1D,mBAAOqL,EAAP,KAAmBmF,EAAnB,KA6CA,OA3CArQ,qBAAU,WAAO,IAAD,EACZ,UAAAgP,EAAasB,eAAb,SAAsBnB,UAAUoB,IAAI,UAepCtB,SAASuB,iBAAiB,SAbT,SAAClO,GAAc,IAAD,IAOM,EAN3BmO,EAAiBxB,SAASC,cAAc,oBACxCwB,GACF,UAAA1B,EAAasB,eAAb,eAAsBK,SAASrO,EAAEoB,WAAjC,OACA+M,QADA,IACAA,OADA,EACAA,EAAgBE,SAASrO,EAAEoB,SACzBkN,EAAQ,UAAG5B,EAAasB,eAAhB,aAAG,EAAsBnB,UAAUwB,SAAS,UAErDD,GAAkBE,IAEnB,UAAA5B,EAAasB,eAAb,SAAsBnB,UAAUoB,IAAI,gBAK7C,CAACvB,IAEJhP,qBAAU,WACN,IAAM6Q,EAAe,uCAAG,8BAAA1L,EAAA,6DAChB2L,EAAmB,GADH,SAEJ/S,IAAMC,KAClBC,yBAAA,uCACoChB,EADpC,kBAHgB,cAEhBoB,EAFgB,OAMpByS,EAAMzS,EAAIP,KANU,SAQRC,IAAMC,KACdC,yBAAA,uCACoChB,EADpC,kBATgB,OAQpBoB,EARoB,QAYpByS,EAAG,sBAAOA,GAAP,YAAezS,EAAIP,QAElBiT,MAAK,SAAC5L,EAAG6L,GACT,OAAO7L,EAAE8L,KAAOD,EAAEC,KAAO,GAAK,KAGlCZ,EAAcS,GAlBM,4CAAH,qDAoBrBD,MACD,IAGC,sBACI/B,UAAU,gBACVnR,MAAOmS,GACPoB,IAAKlC,EAHT,UAKI,cAAC,GAAD,CACIpD,YAAaA,EACbC,eAAgBA,IAEnBZ,GAAiBC,EAAYU,GAAazF,KAAI,SAACsJ,GAAD,OAC3C,cAAC,GAAD,CAAUA,GAAIA,WCpEf,OAA0B,qCCgBnC0B,GAA2B,CAC7BzU,MAAO,OACP4P,OAAQ,OACR2D,UAAW,SAGTmB,GAA+B,CACjC9E,OAAQ,cACR5P,MAAO,cACP+O,gBAAiB,oBACjBgC,SAAU,WACVY,IAAK,OACLV,KAAM,QAGJrR,GAA6B,CAC/BiK,MAAO,QACP8K,SAAU,OACVnB,WAAY,OACZvT,OAAQ,KAGN2U,GAA8B,CAChC3U,OAAQ,OACR2P,OAAQ,OACR5P,MAAO,QACPsG,QAAS,OACToG,eAAgB,gBAChBqC,gBAAiB,oBACjBlF,MAAO,QACPgI,OAAQ,GAGGgD,GA7CA,WACX,OACI,yBAAQ5T,MAAO2T,GAAf,UACI,sBAAK3T,MAAOyT,GAAZ,UACK,IACD,oBAAIzT,MAAOrB,GAAX,qBAAoC,OAExC,qBAAKqT,IAAK6B,GAAM7T,MAAOwT,GAAUM,IAAI,aCuDlCC,OAlDf,WACI,MAA6BjU,qBAAWC,GAAhCT,EAAR,EAAQA,SAAU0R,EAAlB,EAAkBA,OAMlB,OAJA3O,qBAAU,WACF/C,GdlBmB,SAAC0R,GAM5B,SAASgD,IACLC,aAAa9I,IACbA,GAAO+I,WAAWlD,EAAQ,KAP9BrP,OAAOwS,OAASH,EAEhB1C,SAAS8C,YAAcJ,EACvB1C,SAAS+C,UAAYL,EccHM,CAAgBtD,KAC/B,CAAC1R,IAGA,sBAAK6R,UAAU,MAAf,UACI,sBAAKA,UAAU,UAAf,UACI,cAAC,GAAD,IACA,eAAC,IAAD,YACM7R,GACE,qCACI,cAAC,IAAD,CAAOiV,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACI,cAAC,GAAD,SAIXlV,GACG,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,IAAD,CAAOkV,KAAK,YAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACI,cAACC,GAAD,MAEJ,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,GAAD,eAMpB,cAAC,GAAD,QC/CGE,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBnU,MAAK,YAAkD,IAA/CoU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OC6CCO,GA5CiC,SAACC,GAC7C,IAAMC,EAAUlG,cAChB,EAA8BhN,mBAA2B,CACrD5C,SAAUqC,OAAOF,aAAac,QAAQ,cAD1C,mBAAO8S,EAAP,KAAgBC,EAAhB,KA6BA,OACI,cAACvV,EAAcwV,SAAf,CACI9M,MAAO,CACHnJ,SAAU+V,EAAQ/V,SAClBO,MA7BE,SAACP,GACXmC,aAAaC,QAAQ,WAAYpC,GACjCgW,EAAW,6BACJD,GADG,IAEN/V,cAEJqC,OAAOF,aAAaC,QAAQ,iBAAkBgB,KAAKnC,UAAU,KAwBrDyQ,OArBG,WACc,OAArBqE,EAAQ/V,WACZmC,aAAa+T,WAAW,YACxBF,EAAW,6BACJD,GADG,IAEN/V,SAAU,QAGd2B,IAAaC,KAAK,CACdjD,QAAS,yBACTkD,SAAU,MAGdiU,EAAQtI,KAAK,QAIb,SAOKqI,EAAM9W,YCzCnBoX,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,GAAD,UACI,cAAC,GAAD,UAIZrE,SAASsE,eAAe,SAM5BlB,O","file":"static/js/main.3765f190.chunk.js","sourcesContent":["import { Form, Input, Button } from \"antd\";\n\nexport const UsernameInput: React.FC = () => {\n    return (\n        <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[\n                {\n                    required: true,\n                    message: \"Please input your username!\",\n                },\n            ]}\n        >\n            <Input />\n        </Form.Item>\n    );\n};\n\ntype PasswordInputProps = {\n    label: string;\n    name: string;\n    message: string;\n};\n\nexport const PasswordInput: React.FC<PasswordInputProps> = ({\n    label,\n    name,\n    message,\n}) => {\n    return (\n        <Form.Item\n            label={label}\n            name={name}\n            rules={[\n                {\n                    required: true,\n                    message,\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n    );\n};\n\ntype SubmitButtonProps = {\n    children: React.ReactNode;\n};\n\nexport const SubmitButton: React.FC<SubmitButtonProps> = ({ children }) => {\n    return (\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                {children}\n            </Button>\n        </Form.Item>\n    );\n};\n","import CSS from \"csstype\";\n\nexport const titleStyle: CSS.Properties = {\n    textAlign: \"center\",\n    marginTop: \"2em\",\n};\n\nexport const formStyle: CSS.Properties = {\n    width: \"500px\",\n    margin: \"0 auto\",\n    padding: \"3em\",\n    border: \"1px solid lightblue\",\n    borderRadius: \"4px\",\n};","import React from 'react';\n\nexport interface ContextInterface {\n  username: string | null;\n  login? : (username: string) => void;\n  logout? : () => void;\n}\n\nexport default React.createContext<ContextInterface>({\n  username: null\n});\n","import { Typography, Form, notification } from \"antd\";\nimport { UsernameInput, PasswordInput, SubmitButton } from \"./Widgets\";\nimport { titleStyle, formStyle } from \"../../common/formStyles\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport React, { useContext } from \"react\";\nimport GlobalContext from \"../../context/GlobalContext\";\nconst { Title } = Typography;\nvar querystring = require(\"querystring\");\n\nconst openNotification = () => {\n    notification.open({\n        message: \"Invalid Username/Password\",\n        duration: 2.5,\n        onClick: () => {\n            console.log(\"Notification Clicked!\");\n        },\n    });\n};\n\nconst openNotification2 = () => {\n    notification.open({\n        message: \"Passwords do not match\",\n        duration: 2.5,\n        onClick: () => {\n            console.log(\"Notification Clicked!\");\n        },\n    });\n};\n\nconst openNotification3 = () => {\n    notification.open({\n        message: \"Username already exists\",\n        duration: 2.5,\n        onClick: () => {\n            console.log(\"Notification Clicked!\");\n        },\n    });\n};\n\ntype LoginProps = {\n    wrongLogin: () => void;\n};\nexport const Login: React.FC<LoginProps> = ({ wrongLogin }) => {\n    const { login } = useContext(GlobalContext);\n    const onFinish = (data: any) => {\n        axios\n            .post(\n                process.env.REACT_APP_HOST_API_URL + \"/api/auth/login\",\n                querystring.stringify(data),\n                {\n                    headers: {\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\n                    },\n                }\n            )\n            .then((res) => {\n                login!(res.data.username);\n            })\n            .catch(function (error) {\n                console.log(error.response.status); // 401\n                wrongLogin();\n                if (error.response.status == 401) {\n                    openNotification();\n                }\n            });\n    };\n\n    return (\n        <div>\n            <Title style={titleStyle}>Log In</Title>\n            <Form\n                name=\"login\"\n                style={formStyle}\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n                onFinish={onFinish}\n            >\n                <UsernameInput />\n                <PasswordInput\n                    label=\"Password\"\n                    name=\"password\"\n                    message=\"Please input your password!\"\n                />\n                <SubmitButton>Login</SubmitButton>\n\n                <p>\n                    New around here? <Link to=\"/signup\">Sign Up</Link>\n                </p>\n            </Form>\n        </div>\n    );\n};\n\nexport const SignUp = () => {\n    const onFinish = (data: any) => {\n        if (data.password != data.confirmPassword) {\n            openNotification2();\n            return;\n        }\n\n        return axios\n            .post(\n                process.env.REACT_APP_HOST_API_URL + \"/api/auth/signup\",\n                querystring.stringify(data),\n                {\n                    headers: {\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\n                    },\n                }\n            )\n            .then((res) => {\n                localStorage.setItem(\"username\", res.data.username);\n                console.log(res.data);\n                window.location.href =\n                    process.env.REACT_APP_HOST_API_URL + \"/\";\n            })\n            .catch(function (error) {\n                console.log(error.response.status); // 401\n                if (error.response.status == 401) {\n                    openNotification3();\n                }\n            });\n    };\n    return (\n        <div>\n            <Title style={titleStyle}>Sign Up</Title>\n            <Form\n                name=\"signUp\"\n                style={formStyle}\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n                onFinish={onFinish}\n            >\n                <UsernameInput />\n                <PasswordInput\n                    label=\"Password\"\n                    name=\"password\"\n                    message=\"Please input your password!\"\n                />\n                <PasswordInput\n                    label=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    message=\"Please confirm your password!\"\n                />\n\n                <SubmitButton>Create Account</SubmitButton>\n\n                <p>\n                    Already have an account? <Link to=\"/\">Cancel</Link>\n                </p>\n            </Form>\n        </div>\n    );\n};\n","import ReactModal from \"react-modal\";\nimport { Typography } from \"antd\";\n\nconst { Text } = Typography;\n\nexport const LockedOut = () => (\n    <ReactModal isOpen={true}>\n        <Text type=\"danger\">\n            You are currently locked out, please wait a minute before trying to\n            log in again\n        </Text>\n    </ReactModal>\n);\n","import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Login } from \"../components/users/Forms\";\nimport { LockedOut } from \"../components/users/Modals\";\n\nconst LoginPage: React.FC = () => {\n    const [showLockedOut, setShowLockedOut] = useState(false);\n    useEffect(() => {\n        const loginEnabledTimeString: string | null =\n            window.localStorage.getItem(\"loginEnabledTime\");\n        if (loginEnabledTimeString === null) return;\n\n        const loginEnabledTime: Date = new Date(\n            JSON.parse(loginEnabledTimeString)\n        );\n        const interval = setInterval(() => {\n            // Check if current time is greater than loginEnabledTime\n            const rightNow = new Date();\n            if (rightNow > loginEnabledTime) {\n                setShowLockedOut((showLockedOut) => false);\n                clearInterval(interval);\n            } else {\n                setShowLockedOut((showLockedOut) => true);\n            }\n        }, 1000);\n\n        return () => {\n            clearInterval(interval);\n        };\n    }, []);\n\n    const wrongLogin = () => {\n        let failedAttempts: string | null =\n            window.localStorage.getItem(\"failedAttempts\");\n        let failedAttemptsNum: number;\n        if (failedAttempts === null) failedAttemptsNum = 0;\n        else failedAttemptsNum = JSON.parse(failedAttempts);\n\n        if (++failedAttemptsNum === 3) {\n            setShowLockedOut(true);\n            const rightNow = new Date();\n            const oneMinLater = new Date(rightNow.getTime() + 60000);\n            window.localStorage.setItem(\n                \"loginEnabledTime\",\n                JSON.stringify(oneMinLater)\n            );\n        }\n\n        window.localStorage.setItem(\n            \"failedAttempts\",\n            JSON.stringify(failedAttemptsNum % 3)\n        );\n    };\n\n    return (\n        <>\n            <Login wrongLogin={wrongLogin} />\n            {showLockedOut && <LockedOut />}\n        </>\n    );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport { Checkbox, List } from \"antd\";\nimport { TicketmasterEvent } from \"../../common/types\";\nimport { Dispatch } from \"react\";\nimport { SetStateAction } from \"react\";\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\n\nexport const formatDate = (dateString: string) => {\n    const options: Intl.DateTimeFormatOptions = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\ntype EventsListProps = {\n    events: TicketmasterEvent[];\n    selectedEvents: TicketmasterEvent[];\n    onChange: (e: CheckboxChangeEvent, index: number) => void;\n};\n\nconst EventsList: React.FC<EventsListProps> = ({\n    events,\n    onChange,\n    selectedEvents,\n}) => {\n    return (\n        <List\n            itemLayout=\"horizontal\"\n            dataSource={events}\n            style={{\n                marginLeft: \"3em\",\n                width: 500,\n            }}\n            renderItem={(\n                { name, localDate, localTime, venueAddress, url },\n                index\n            ) => (\n                <List.Item\n                    style={{\n                        padding: 12,\n                    }}\n                >\n                    <>\n                        <Checkbox\n                            style={{\n                                marginRight: 12,\n                            }}\n                            // onChange={() => onChange?.(index)}\n                            onChange={(e) => onChange(e, index)}\n                            checked={\n                                selectedEvents.filter(\n                                    (event) =>\n                                        event.name === name &&\n                                        event.localDate == localDate &&\n                                        event.localTime == localTime &&\n                                        event.venueAddress == venueAddress\n                                ).length !== 0\n                            }\n                        />\n                        <List.Item.Meta\n                            title={name}\n                            description={`${venueAddress} | ${formatDate(\n                                localDate\n                            )}`}\n                        />\n                    </>\n                </List.Item>\n            )}\n        />\n    );\n};\n\nexport default EventsList;\n","import { List } from \"antd\";\nimport React from \"react\";\nimport { TicketmasterEvent } from \"../../common/types\";\nimport { formatDate } from \"./EventsList\";\n\ntype SelectedEventsListProps = {\n    selectedEvents: TicketmasterEvent[];\n};\n\nconst SelectedEventList: React.FC<SelectedEventsListProps> = ({\n    selectedEvents,\n}) => {\n    return (\n        <List\n            itemLayout=\"horizontal\"\n            dataSource={selectedEvents}\n            style={{\n                width: 500,\n            }}\n            renderItem={(\n                { name, localDate, localTime, venueAddress, url },\n                index\n            ) => (\n                <List.Item\n                    style={{\n                        padding: 12,\n                    }}\n                >\n                    <List.Item.Meta\n                        title={name}\n                        description={`${venueAddress} | ${formatDate(\n                            localDate\n                        )}`}\n                    />\n                </List.Item>\n            )}\n        />\n    );\n};\n\nexport default SelectedEventList;\n","import { Button, Typography } from \"antd\";\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\nimport React, { Dispatch, SetStateAction, useState } from \"react\";\nimport { EventsFilter, EventsList } from \".\";\nimport { TicketmasterEvent } from \"../../common/types\";\nimport CSS from \"csstype\";\nimport SelectedEventList from \"./SelectedEventList\";\n\ntype EventsSearchProps = {\n    setPage: Dispatch<SetStateAction<number>>;\n    selectedEvents: TicketmasterEvent[];\n    setSelectedEvents: React.Dispatch<\n        React.SetStateAction<TicketmasterEvent[]>\n    >;\n    setGroupDateName: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst { Title } = Typography;\n\nconst EventsSearch: React.FC<EventsSearchProps> = ({\n    setPage,\n    selectedEvents,\n    setSelectedEvents,\n    setGroupDateName,\n}) => {\n    const [events, setEvents] = useState<TicketmasterEvent[]>([]);\n\n    const button = selectedEvents.length === 0 ? 0 : 1;\n\n    const onSelectChange = (e: CheckboxChangeEvent, index: number) => {\n        const checked = e.target.checked;\n        if (checked) {\n            const newSelection = [...selectedEvents, events[index]];\n            setSelectedEvents((oldSelection) => newSelection);\n        } else {\n            const newSelection = selectedEvents.filter(\n                (event) =>\n                    event.name !== events[index].name ||\n                    event.localDate !== events[index].localDate ||\n                    event.localTime !== events[index].localTime ||\n                    event.venueAddress !== events[index].venueAddress\n            );\n            setSelectedEvents((oldSelection) => newSelection);\n        }\n    };\n\n    return (\n        <>\n            <Title style={{ padding: 12 }}>Create Group Date</Title>\n            <div style={containerStyle}>\n                <div>\n                    <EventsFilter\n                        setEvents={setEvents}\n                        setGroupDateName={setGroupDateName}\n                    />\n                    {selectedEvents.length !== 0 && (\n                        <Title level={3} style={{ padding: 12 }}>\n                            Selected Events\n                        </Title>\n                    )}\n                    <SelectedEventList selectedEvents={selectedEvents} />\n                </div>\n\n                <EventsList\n                    events={events}\n                    selectedEvents={selectedEvents}\n                    onChange={onSelectChange}\n                />\n            </div>\n\n            {button === 0 && (\n                <Button disabled onClick={() => setPage(1)} style={buttonStyle}>\n                    {\" \"}\n                    Next{\" \"}\n                </Button>\n            )}\n            {button === 1 && (\n                <Button onClick={() => setPage(1)} style={buttonStyle}>\n                    {\" \"}\n                    Next{\" \"}\n                </Button>\n            )}\n        </>\n    );\n};\n\nconst containerStyle: CSS.Properties = {\n    display: \"flex\",\n};\n\nconst buttonStyle: CSS.Properties = {\n    marginBottom: \"2em\",\n};\n\nexport default EventsSearch;\n","export function ISODateString(d : Date) {\n    function pad(n : number) {return n<10 ? '0'+n : n}\n    return d.getUTCFullYear()+'-'\n         + pad(d.getUTCMonth()+1)+'-'\n         + pad(d.getUTCDate())+'T'\n         + pad(d.getUTCHours())+':'\n         + pad(d.getUTCMinutes())+':'\n         + pad(d.getUTCSeconds())+'Z'\n}","import { Input, DatePicker, Select, Form } from \"antd\";\nimport { HomeOutlined } from \"@ant-design/icons\";\nimport React, { useCallback } from \"react\";\nimport axios from \"axios\";\nimport _, { debounce } from \"lodash\";\nimport { TicketmasterEvent } from \"../../common/types\";\nimport { ISODateString } from \"../../common/iso\";\n\nconst { Search } = Input;\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\nconst genres = [\"Concerts\", \"Movies\", \"Sports\"];\n\ntype EventsFilterProps = {\n    setEvents: React.Dispatch<React.SetStateAction<TicketmasterEvent[]>>;\n    setGroupDateName: React.Dispatch<React.SetStateAction<string>>;\n};\nconst EventsFilter: React.FC<EventsFilterProps> = ({\n    setEvents,\n    setGroupDateName,\n}) => {\n    const onValuesChange = async (changedValues: any, allValues: any) => {\n        setGroupDateName(allValues.name ?? \"\");\n        const rightNow = new Date();\n        const requestBody = {\n            classificationName: allValues.genre ?? \"\",\n            keyword: allValues.keyword ?? \"\",\n            startDateTime: allValues.dateRange\n                ? ISODateString(allValues.dateRange[0])\n                : ISODateString(rightNow),\n            endDateTime: allValues.dateRange\n                ? ISODateString(allValues.dateRange[1])\n                : ISODateString(\n                      new Date(rightNow.getTime() + 1000 * 60 * 60 * 24 * 7)\n                  ),\n            city: allValues.city ?? \"\",\n            stateCode: \"\",\n        };\n\n        const res = await axios.post(\n            process.env.REACT_APP_HOST_API_URL + \"/api/ticketmaster\",\n            requestBody\n        );\n        setEvents(res.data);\n    };\n\n    const debouncedChangeHandler = useCallback(\n        debounce(onValuesChange, 1000),\n        []\n    );\n\n    return (\n        <Form\n            style={{ width: 500, padding: 12 }}\n            layout=\"vertical\"\n            onValuesChange={debouncedChangeHandler}\n        >\n            <Form.Item label=\"Group Date Name\" name=\"name\">\n                <Input placeholder=\"Enter the name of the group date\" />\n            </Form.Item>\n            <Form.Item label=\"Keyword\" name=\"keyword\">\n                <Input placeholder=\"Enter your search query\" />\n            </Form.Item>\n            <Form.Item label=\"Date range\" name=\"dateRange\">\n                <RangePicker showTime style={{ width: \"100%\" }} />\n            </Form.Item>\n            <Form.Item label=\"Genre\" name=\"genre\">\n                <Select placeholder=\"Select a genre\">\n                    {genres.map((genre) => (\n                        <Option value={genre}>{genre}</Option>\n                    ))}\n                </Select>\n            </Form.Item>\n            <Form.Item label=\"City\" name=\"city\">\n                <Input\n                    placeholder=\"Enter your city\"\n                    suffix={\n                        <HomeOutlined style={{ color: \"rgba(0,0,0,.45)\" }} />\n                    }\n                ></Input>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default EventsFilter;\n","import { AutoComplete, Typography, Button } from \"antd\";\nimport React, { useState } from \"react\";\nimport { User } from \"../common/types\";\n\ntype UserSearchProps = {\n    title?: string;\n    placeholder: string;\n    users: User[];\n    onSelect?: (user: User) => void;\n};\n\nconst { Title } = Typography;\n\nconst UserSearch: React.FC<UserSearchProps> = ({\n    title,\n    placeholder,\n    users,\n    onSelect,\n}) => {\n    const [query, setQuery] = useState<string>(\"\");\n    return (\n        <div style={{ padding: 12 }}>\n            <Title>{title}</Title>\n            <AutoComplete\n                options={users\n                    .filter((user) => !user.blocked)\n                    .filter((user) =>\n                        user.username\n                            .toLowerCase()\n                            .includes(query.toLowerCase())\n                    )\n                    .map((user) => ({\n                        value: user.username,\n                        label: user.username,\n                        user,\n                    }))}\n                style={{ width: 200 }}\n                placeholder={placeholder}\n                value={query}\n                onChange={(newQ) => setQuery(newQ)}\n                onSelect={(_, option) => {\n                    onSelect?.((option as any).user);\n                    setQuery(\"\");\n                }}\n            />\n        </div>\n    );\n};\n\nexport default UserSearch;","import { Button, List } from \"antd\";\nimport Title from \"antd/lib/typography/Title\";\nimport React from \"react\";\nimport { User } from \"../common/types\";\n\ntype SelectedUsersListProps = {\n    removeText: string; // Unblock or remove (propose page)\n    onRemove: (user: User) => void;\n    selectedUsers: User[];\n};\nconst SelectedUsersList: React.FC<SelectedUsersListProps> = ({\n    selectedUsers,\n    onRemove,\n    removeText,\n}) => {\n    return (\n        <>\n            {selectedUsers.length !== 0 && (\n                <Title level={3} style={{ padding: 12 }}>\n                    Invited Users\n                </Title>\n            )}\n            <List\n                itemLayout=\"horizontal\"\n                dataSource={selectedUsers}\n                style={{\n                    width: 500,\n                    marginBottom: \"2em\",\n                }}\n                renderItem={(user, index) => (\n                    <List.Item\n                        style={{\n                            padding: 12,\n                        }}\n                    >\n                        <List.Item.Meta title={user.username} />\n                        <Button type=\"default\" onClick={(e) => onRemove(user)}>\n                            {removeText}\n                        </Button>\n                    </List.Item>\n                )}\n            />\n        </>\n    );\n};\n\nexport default SelectedUsersList;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { EventsSearch } from \"../components/events\";\nimport UserSearch from \"../components/UserSearch\";\nimport CSS from \"csstype\";\nimport { TicketmasterEvent, User } from \"../common/types\";\nimport axios from \"axios\";\nimport GlobalContext from \"../context/GlobalContext\";\nimport { Button, notification } from \"antd\";\nimport SelectedUsersList from \"../components/SelectedUsersList\";\n\nconst EditGroupDate: React.FC = () => {\n    const { username } = useContext(GlobalContext);\n    const [page, setPage] = useState(0);\n    const [groupDateName, setGroupDateName] = useState(\"\");\n    const [selectedEvents, setSelectedEvents] = useState<TicketmasterEvent[]>(\n        []\n    );\n\n    const [users, setUsers] = useState<User[]>([]);\n    const [invitedUsers, setInvitedUsers] = useState<User[]>([]);\n\n    const onSelectUser = async (user: User) => {\n        const body = {\n            username,\n            user: user.username,\n            events: selectedEvents,\n        };\n        const { data } = await axios.post(\n            process.env.REACT_APP_HOST_API_URL + \"/api/addUser\",\n            body\n        );\n        if (data) {\n            const newSelection = [...invitedUsers, user];\n            setInvitedUsers((oldSelection) => newSelection);\n        } else {\n            notification.open({\n                message:\n                    \"This user cannot be added as they are blocked or have a scheduling conflict\",\n                duration: 2.5,\n            });\n        }\n    };\n\n    const onRemoveUser = (user: User) => {\n        const newSelection = invitedUsers.filter(\n            (u) => u.username !== user.username\n        );\n        setInvitedUsers((oldSelection) => newSelection);\n    };\n\n    useEffect(() => {\n        axios\n            .post(process.env.REACT_APP_HOST_API_URL + \"/api/getusers\")\n            .then((res) => setUsers(res.data));\n    }, []);\n\n    const onSubmit = undefined;\n\n    return (\n        <div style={containerStyle}>\n            {page === 0 && (\n                <EventsSearch\n                    setPage={setPage}\n                    selectedEvents={selectedEvents}\n                    setSelectedEvents={setSelectedEvents}\n                    setGroupDateName={setGroupDateName}\n                />\n            )}\n            {page === 1 && (\n                <>\n                    <UserSearch\n                        title=\"Add Users\"\n                        placeholder=\"Add users\"\n                        users={users}\n                        onSelect={onSelectUser}\n                    />\n                    <br />\n                    <SelectedUsersList\n                        removeText=\"Remove\"\n                        onRemove={onRemoveUser}\n                        selectedUsers={invitedUsers}\n                    />\n                    <Button onClick={onSubmit}> Send</Button>\n                    {\"\\n\"}\n                    <Button onClick={onSubmit}> Save as Draft</Button>\n                </>\n            )}\n        </div>\n    );\n};\n\nconst containerStyle: CSS.Properties = {\n    marginLeft: \"5em\",\n};\n\nexport default EditGroupDate;\n","import CSS from \"csstype\";\n\nexport const columns = [\n    {\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\",\n    },\n    {\n        title: \"Response\",\n        dataIndex: \"response\",\n        key: \"response\",\n    },\n    {\n        title: \"Excitement\",\n        dataIndex: \"excitement\",\n        key: \"excitement\",\n    },\n];\n\nexport const dataSource = [\n    {\n        key: \"1\",\n        name: \"Vikhyat\",\n        response: \"Yes\",\n        excitement: \"5\",\n    },\n    {\n        key: \"2\",\n        name: \"Daniel\",\n        response: \"Yes\",\n        excitement: \"5\",\n    },\n];\n\nexport const firstButtonStyle: CSS.Properties = {\n    marginRight: \"1em\",\n};\n","import React from 'react'\nimport { Typography, Table, Button } from \"antd\";\nimport {firstButtonStyle, columns, dataSource} from \"../../common/invitees\";\nimport { AutoComplete} from \"antd\";\n\nconst { Title } = Typography;\n\nconst FinalizedView = () => {\n    const algo = 4;\n    return (\n        <>\n            <Title level={4}>Event Name, Time, @ Location</Title>\n            <Title level={4}>Invitees</Title>\n            <Table dataSource={dataSource} columns={columns} />\n            <Title level={4}>Algorithm chose: Event {algo} </Title>\n            <Title level={4}>Your response: <AutoComplete/></Title> {/* fill  with event numbers*/}\n            <Button type=\"default\">Close Polling and Submit</Button>\n        </>\n    );\n};\n\nexport default FinalizedView\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport CSS from \"csstype\";\nimport InviterView from \"../components/viewinvite/InviterView\";\n\n\nconst { Title } = Typography;\n\nconst ViewInvite = () => {\n    const finalized = false;\n\n    return (\n        <div style={viewInviteStyle}>\n            <Title>Group Date Name</Title>\n            <Title level={3}>\n                Status: {finalized ? \"Finalized\" : \"Unfinalized\"}\n            </Title>\n            <InviterView/>\n        </div>\n    );\n};\n\nconst viewInviteStyle: CSS.Properties = {\n    padding: \"3em\",\n};\n\nexport default ViewInvite;\n","import { AutoComplete, Typography, Button } from \"antd\";\nimport React, { useState } from \"react\";\nimport { UserSettings } from \"../common/types\";\nimport axios from \"axios\";\n\ntype BlockedUserSearchProps = {\n    title?: string;\n    placeholder: string;\n    users: UserSettings[];\n};\n\n\nconst { Title } = Typography;\nvar querystring = require('querystring');\n\nconst BlockedUserSearch: React.FC<BlockedUserSearchProps> = ({\n    title,\n    placeholder,\n    users\n}) => {\n    const [query, setQuery] = useState<string>(\"\");\n    const submit = () => {\n        if (query){\n            console.log(\"query\",query);\n            const username = localStorage.getItem(\"username\");\n            const user = query;\n            const data = {\"username\": username, \"user\": user, \"action\": \"add\"};\n            axios.post(process.env.REACT_APP_HOST_API_URL + \"/api/setting\",\n            querystring.stringify(data),\n            {\n                headers: { \n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n                }\n            }).then( res => {\n                console.log(\"res.data in submit\",res.data);\n                window.location.reload();\n            }).catch(function (error) {\n                console.log(error.response.status) \n                console.log(error.response)\n                console.log(error)\n            });\n        }\n      };\n    return (\n        <div style={{ padding: 12 }}>\n            <Title>{title}</Title>\n            <AutoComplete\n                options={users\n                    .filter((user) =>\n                        user.name\n                            .toLowerCase()\n                            .includes(query.toLowerCase())\n                    )\n                    .map((user) => ({\n                        value: user.name,\n                        label: user.name,\n                        user,\n                    }))}\n                style={{ width: 200 }}\n                placeholder={placeholder}\n                value={query}\n                onChange={(newQ) => setQuery(newQ)}\n            />\n           <Button onClick={submit}> Block</Button>\n        </div>\n    );\n};\n\nexport default BlockedUserSearch;","import React from \"react\";\nimport { Button } from \"antd\";\nimport { UserSettings } from \"../../common/types\";\nimport CSS from \"csstype\";\nimport axios from \"axios\";\n\nvar querystring = require('querystring');\n\ntype BlockedUsersProps = {\n    blockedUsers: UserSettings[];\n};\n\nconst BlockedUsers: React.FC<BlockedUsersProps> = ({ blockedUsers }) => {\n    return (\n        <div style={blockedUsersStyle}>\n            {blockedUsers.map((blockedUser, index) => (\n                <BlockedUser\n                    blockedUser={blockedUser}\n                    isLast={index === blockedUsers.length - 1}\n                />\n            ))}\n        </div>\n    );\n};\n\nconst blockedUsersStyle: CSS.Properties = {\n    margin: \"1em 0\",\n    border: \"1px solid #D3D3D3\",\n    borderRadius: \"4px\",\n};\n\ntype BlockedUserProps = {\n    blockedUser: UserSettings;\n    isLast: boolean;\n};\n\nfunction remove(name: any) {\n    const username = localStorage.getItem(\"username\");\n    const user = name;\n    const data = { \"username\": username, \"user\": user, \"action\": \"remove\" };\n    console.log(user);\n    return axios.post(process.env.REACT_APP_HOST_API_URL + \"/api/setting\",\n        querystring.stringify(data),\n        {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(res => {\n            console.log(res.data);\n            window.location.reload();\n        }).catch(function (error) {\n            console.log(error.response.status);\n        });\n}\n\nconst BlockedUser: React.FC<BlockedUserProps> = ({ blockedUser, isLast }) => (\n    <div style={makeStyle(isLast)}>\n        <p style={{ marginTop: \"revert\" }}>@{blockedUser.name}</p>\n        <Button type=\"default\" onClick={() => remove(blockedUser.name)}>Unblock</Button>\n    </div>\n);\n\nconst makeStyle = (isLast: boolean): CSS.Properties => {\n    const blockedUserStyle: CSS.Properties = {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        borderBottom: isLast ? 0 : \"1px solid #D3D3D3\",\n        padding: \"0.5em 1em\",\n    };\n    return blockedUserStyle;\n};\n\nexport default BlockedUsers;","let time: NodeJS.Timeout;\n\nexport const inactivityTimer = (logout : () => void) => {\n    window.onload = resetTimer;\n    // DOM Events\n    document.onmousemove = resetTimer;\n    document.onkeydown = resetTimer;\n\n    function resetTimer() {\n        clearTimeout(time);\n        time = setTimeout(logout, 1000*60)\n    }\n};","import React, { useEffect, useState } from \"react\";\nimport { Typography } from \"antd\";\nimport CSS from \"csstype\";\nimport BlockedUserSearch from \"../components/BlockedUserSearch\"; \nimport BlockedUsers from \"../components/users/BlockedUsers\";\nimport axios from \"axios\";\nimport { UserSettings } from \"../common/types\";\n\nconst { Title } = Typography;\nlet allUsers: UserSettings[]= [];\n\nvar querystring = require('querystring');\n\nconst SettingsPage: React.FC = () => {\n    const [blocked1, setBlocked] = useState<UserSettings[]>();\n    let blocked: UserSettings[] = [];\n    useEffect(() => {\n        const loggedInUsername = localStorage.getItem(\"username\");\n        axios.post(process.env.REACT_APP_HOST_API_URL + \"/api/getusers\").then( res => {\n            //console.log(res.data);\n            res.data.forEach((element:any)=>{\n                if (element.username!=loggedInUsername){\n                    allUsers.push({name: element.username});\n                }\n            });\n            console.log(\"allUsers\", allUsers);\n        }).catch(function (error) {\n            console.log(error.response.status);\n            console.log(error.response);\n            console.log(error);\n        });\n      }, []); // run only once\n\n      useEffect(()=>{\n        const username = localStorage.getItem(\"username\");\n        const data = {\"username\": username, \"user\": \"\", \"action\": \"show\"};\n        blocked = [];\n\n        axios.post(process.env.REACT_APP_HOST_API_URL + \"/api/setting\",\n            querystring.stringify(data),\n            {\n                headers: { \n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n                }\n            }).then( res => {\n                console.log(res.data);\n                console.log(\"blockedUsersBeforeAdding\", blocked)\n                var array = res.data.split(',');\n                array.forEach((element:any)=>{\n                    if (element!= \"empty\"){\n                        blocked.push({name: element});\n                    }\n                });\n                setBlocked(blocked);\n                console.log(\"blockedUsersAfterAdding\", blocked)\n            }).catch(function (error) {\n                console.log(error.response.status) \n            });\n      }, []);\n\n    return (\n        <>\n            <Title style={titleStyle}>Settings</Title>\n            <div style={getSettingsContainerStyle()}>\n                <div style={getSettingsSectionStyle()}>\n                    <Title level={3} style={title2Style}>\n                        Block Users\n                    </Title>\n                    <div style={blockUsersStyle}>\n                        <BlockedUserSearch\n                            placeholder=\"Search users\"\n                            users={allUsers}\n                        />\n                        <BlockedUsers blockedUsers={blocked1!=undefined? blocked1: blocked } />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nconst titleStyle: CSS.Properties = {\n    margin: \"1em\",\n    marginLeft: \"2em\",\n};\n\nconst title2Style: CSS.Properties = {\n    textAlign: \"center\",\n    marginTop: \"1em\",\n};\n\nconst settingsContainerStyle: CSS.Properties = {\n    display: \"flex\",\n    border: \"1px solid darkgrey\",\n    margin: \"0 5em\",\n    borderRadius: \"4px\",\n    justifyContent:'center', \n    alignItems:'center'\n};\n\nconst getSettingsContainerStyle = (): CSS.Properties => {\n    const mediaQuery = window.matchMedia(\"(max-width: 1080px)\");\n    if (mediaQuery.matches) {\n        return {\n            ...settingsContainerStyle,\n            flexDirection: \"column\",\n        };\n    }\n    return settingsContainerStyle;\n};\n\nconst settingsSectionStyle: CSS.Properties = {\n    width: \"50%\",\n};\n\nconst getSettingsSectionStyle = (): CSS.Properties => {\n    const mediaQuery = window.matchMedia(\"(max-width: 1080px)\");\n    if (mediaQuery.matches) {\n        return {\n            ...settingsSectionStyle,\n            width: \"unset\",\n        };\n    }\n    return settingsSectionStyle;\n};\n\nconst blockUsersStyle: CSS.Properties = {\n    width: \"80%\",\n    margin: \"0 auto\",\n};\n\nexport default SettingsPage;","import React from \"react\";\nimport { SignUp } from \"../components/users/Forms\";\n\nconst SignUpPage: React.FC = () => {\n    return <SignUp />;\n};\n\nexport default SignUpPage;\n","import { GroupDate } from \"./types\"\n\nexport type FilterState = {\n    finalized : boolean // true if filtering on this, false if not\n    unfinalized : boolean // so if both false, we return any\n    responded : boolean\n    unresponded : boolean\n}\n\nexport const filterFinalized = (oldState : FilterState) : FilterState => ({\n    ...oldState,\n    finalized : true,\n    unfinalized : false\n})\n\nexport const filterUnfinalized = (oldState : FilterState) : FilterState => ({\n    ...oldState,\n    finalized : false,\n    unfinalized : true\n})\n\nexport const filterResponded = (oldState : FilterState) : FilterState => ({\n    ...oldState,\n    responded : true,\n    unresponded : false\n})\n\nexport const filterUnresponded = (oldState : FilterState) : FilterState => ({\n    ...oldState,\n    responded : false,\n    unresponded : true\n})\n\nexport const defaultFilterState = {\n    finalized : false,\n    unfinalized : false,\n    responded : false,\n    unresponded : false\n}\n\nexport const resetFilters = () : FilterState => defaultFilterState\n\nexport const filterGroupDates = (groupDates : GroupDate[], filter : FilterState) : GroupDate[] => {\n    // We don't want to modify the input array\n    let res : GroupDate[] = [...groupDates]\n    if (filter.finalized) res = res.filter((groupDate : GroupDate) => groupDate.status.includes(\"_finalized\"))\n    if (filter.unfinalized) res = res.filter((groupDate : GroupDate) => groupDate.status.includes(\"unfinalized\"))\n    if (filter.responded) res = res.filter((groupDate : GroupDate) => groupDate.status === \"invitee_responded\")\n    if (filter.unresponded) res = res.filter((groupDate : GroupDate) => groupDate.status === \"inviter_finalized\" || groupDate.status === \"inviter_unfinalized\")\n\n    return res\n}","import React, { MouseEventHandler } from \"react\";\nimport CSS from \"csstype\";\nimport {\n    defaultFilterState,\n    filterFinalized,\n    filterResponded,\n    FilterState,\n    filterUnfinalized,\n    filterUnresponded,\n} from \"../common/filter\";\n\ntype FilterProps = {\n    filterState: FilterState;\n    setFilterState: React.Dispatch<React.SetStateAction<FilterState>>;\n};\n\nconst Filters: React.FC<FilterProps> = ({ filterState, setFilterState }) => {\n    return (\n        <div style={filterStyle}>\n            <Button\n                onClick={(_) =>\n                    setFilterState((oldState) => filterFinalized(filterState))\n                }\n            >\n                Finalized\n            </Button>\n\n            <Button\n                onClick={(_) =>\n                    setFilterState((oldState) => filterUnfinalized(filterState))\n                }\n            >\n                Unfinalized\n            </Button>\n\n            <Button\n                onClick={(_) =>\n                    setFilterState((oldState) => filterResponded(filterState))\n                }\n            >\n                Responded\n            </Button>\n\n            <Button\n                onClick={(_) =>\n                    setFilterState((oldState) => filterUnresponded(filterState))\n                }\n            >\n                Unresponded\n            </Button>\n            <Button\n                onClick={(_) =>\n                    setFilterState((oldState) => defaultFilterState)\n                }\n            >\n                Clear Filters\n            </Button>\n        </div>\n    );\n};\n\ntype ButtonProps = {\n    children: React.ReactNode;\n    onClick: MouseEventHandler;\n};\n\nconst Button: React.FC<ButtonProps> = ({ children, onClick }) => {\n    return (\n        <button style={buttonStyle} onClick={onClick}>\n            {children}\n        </button>\n    );\n};\n\nconst filterStyle: CSS.Properties = {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"1em\",\n    maxWidth: \"100%\",\n    flexWrap: \"wrap\",\n    gap: \"1em\",\n    borderBottom: \"1px solid rgba(0,0,0,0.1)\",\n    marginBottom: \"1em\",\n};\n\nconst buttonStyle: CSS.Properties = {\n    borderRadius: \"25px\",\n    padding: \"0.75em\",\n    border: \"1px solid rgb(68, 141, 247)\",\n    color: \"rgb(68, 141, 247)\",\n    backgroundColor: \"#fff\",\n    cursor: \"pointer\",\n};\n\nexport default Filters;\n","import React, { useContext, useState } from \"react\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport { Calendar, momentLocalizer, SlotInfo } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport CSS from \"csstype\";\nimport { CalendarEvent } from \"../common/types\";\nimport { defaultFilterState } from \"../common/filter\";\nimport Filters from \"../components/Filters\";\nimport { useHistory } from \"react-router\";\nimport GlobalContext from \"../context/GlobalContext\";\nimport { ISODateString } from \"../common/iso\";\nimport axios from \"axios\";\n\nconst localizer = momentLocalizer(moment);\n\nconst containerStyle: CSS.Properties = {\n    height: \"85vh\",\n    marginTop: \"4vh\",\n    width: \"90vw\",\n    marginLeft: \"5vw\",\n    marginBottom: \"12vh\",\n};\n\nconst eventMapper = (events: any[]): CalendarEvent[] => {\n    return events.map((event, index) => ({\n        index,\n        title: event.event,\n        start: new Date(event.startTime),\n        end: new Date(event.endTime),\n    }));\n};\n\nconst AvailabilityPage: React.FC = () => {\n    const { username } = useContext(GlobalContext);\n    const [filterState, setFilterState] = useState(defaultFilterState);\n    const history = useHistory();\n    const [events, setEvents] = useState<any[]>([\n        {\n            event: \"JBConcert\",\n            startTime: \"11-4-2021 15:00:00\",\n            endTime: \"11-4-2021 15:45:00\",\n        },\n    ]);\n\n    const onSelectEvent = (event: CalendarEvent) => {\n        const startTime = ISODateString(event.start);\n        const endTime = ISODateString(event.end);\n\n        if (event.title === \"Unavailable\") {\n            // Removing unavailability\n            const url =\n                process.env.REACT_APP_HOST_API_URL +\n                \"/api/availability\" +\n                `?removeSlot=true&username=${username}&startTime=${startTime}&endTime=${endTime}&event=unavailable`;\n\n            axios.post(url);\n            setEvents((oldEvents) =>\n                oldEvents.filter(\n                    (e) =>\n                        e.event !== event.title ||\n                        e.startTime !== startTime ||\n                        e.endTime !== endTime\n                )\n            );\n        }\n    };\n\n    const onSelectSlot = ({ start, end }: SlotInfo) => {\n        //Use start and end to hit backend\n        // Update events state var\n        const startTime = ISODateString(start as Date);\n        const endTime = ISODateString(end as Date);\n        const url =\n            process.env.REACT_APP_HOST_API_URL +\n            \"/api/availability\" +\n            `?addSlot=true&username=${username}&startTime=${startTime}&endTime=${endTime}&event=unavailable`;\n\n        axios.post(url);\n        const event = {\n            event: \"Unavailable\",\n            startTime,\n            endTime,\n        };\n        setEvents((oldEvents) => [...oldEvents, event]);\n    };\n\n    const eventStyleGetter = (event: CalendarEvent) => {\n        var style = {\n            backgroundColor:\n                event.title === \"Unavailable\"\n                    ? \"grey\"\n                    : \"rgba(68, 141, 247, 0.9)\",\n            borderRadius: \"2px\",\n            opacity: 0.9,\n            color: \"white\",\n            border: \"0px\",\n            display: \"block\",\n        };\n        return {\n            style,\n        };\n    };\n\n    return (\n        <div style={containerStyle}>\n            <Filters\n                filterState={filterState}\n                setFilterState={setFilterState}\n            />\n\n            <Calendar\n                selectable\n                defaultDate={new Date()}\n                views={[\"month\", \"week\", \"day\"]}\n                localizer={localizer}\n                events={eventMapper(events)}\n                onSelectEvent={onSelectEvent}\n                onSelectSlot={onSelectSlot}\n                eventPropGetter={eventStyleGetter}\n            ></Calendar>\n        </div>\n    );\n};\n\nexport default AvailabilityPage;\n","import React, { useContext } from \"react\";\nimport CSS from \"csstype\";\nimport GlobalContext from \"../context/GlobalContext\";\n\nconst Footer = () => {\n    const { username } = useContext(GlobalContext);\n    const sidebarShowing = username !== null;\n\n    const footerStyle: CSS.Properties = {\n        width: sidebarShowing ? \"calc(100vw - 50px)\" : \"100vw\",\n        padding: \"3em 2em\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"rgb(68, 141, 247)\",\n        color: \"white\",\n        position: \"absolute\",\n        bottom: \"0\",\n        left: sidebarShowing ? \"50px\" : 0, // width of sidebar\n    };\n\n    return (\n        <footer style={footerStyle}>\n            <p>Group Date Application</p>\n            <p>A Team 40 Production</p>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from 'react'\nimport { Typography, Table, Button } from \"antd\";\nimport {firstButtonStyle, columns, dataSource} from \"../../common/invitees\";\n\nconst { Title } = Typography;\n\nconst FinalizedView = () => {\n    return (\n        <>\n            <Title level={4}>Event Name, Time, @ Location</Title>\n            <Title level={4}>Invitees</Title>\n            <Table dataSource={dataSource} columns={columns} />\n            <Button type=\"primary\" style={firstButtonStyle}>\n                Accept\n            </Button>\n            <Button type=\"default\">Decline</Button>\n        </>\n    );\n};\n\nexport default FinalizedView\n","import React from \"react\";\nimport { Typography, Table, Button, Slider } from \"antd\";\nimport CSS from \"csstype\";\nimport { firstButtonStyle, columns, dataSource } from \"../../common/invitees\";\n\nconst { Title } = Typography;\n\nconst UnfinalizedView = () => {\n    return (\n        <div>\n            <Event />\n            <Button type=\"primary\" style={firstButtonStyle}>\n                Submit\n            </Button>\n            <Button type=\"default\">Save Draft</Button>\n        </div>\n    );\n};\n\nconst Event = () => (\n    <div style={eventStyle}>\n        <Title level={3}>Event Name</Title>\n        <Title level={4}>Event Info</Title>\n        <Title level={4}>Invitees</Title>\n        <Table dataSource={dataSource} columns={columns} />\n        <Button type=\"primary\" style={firstButtonStyle}>\n            Yes\n        </Button>\n        <Button type=\"default\">No</Button>\n        <br />\n        <Title style={marginTopStyle} level={5}>\n            How excited are you?\n        </Title>\n        <Slider style={widthStyle} min={1} max={5} defaultValue={3} />\n    </div>\n);\n\nconst eventStyle: CSS.Properties = {\n    marginLeft: \"5em\",\n    padding: \"2em\",\n    border: \"1px solid rgba(0,0,0,0.1)\",\n    borderRadius: \"4px\",\n    marginBottom: \"2em\",\n};\n\nconst marginTopStyle: CSS.Properties = {\n    marginTop: \"1.5em\",\n};\n\nconst widthStyle: CSS.Properties = {\n    width: \"300px\",\n};\n\nexport default UnfinalizedView;\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport CSS from \"csstype\";\nimport FinalizedView from \"../components/viewinvite/FinalizedView\";\nimport UnfinalizedView from \"../components/viewinvite/UnfinalizedView\";\n\nconst { Title } = Typography;\n\nconst ViewInvite = () => {\n    const finalized = false;\n\n    return (\n        <div style={viewInviteStyle}>\n            <Title>Group Date Name</Title>\n            <Title level={3}>\n                Status: {finalized ? \"Finalized\" : \"Unfinalized\"}\n            </Title>\n            {finalized ? <FinalizedView /> : <UnfinalizedView />}\n        </div>\n    );\n};\n\nconst viewInviteStyle: CSS.Properties = {\n    padding: \"3em\",\n};\n\nexport default ViewInvite;\n","import React, { useContext } from \"react\";\nimport CSS from \"csstype\";\nimport {\n    HomeOutlined,\n    PlusCircleOutlined,\n    SettingOutlined,\n    LogoutOutlined,\n    BarsOutlined,\n} from \"@ant-design/icons\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport GlobalContext from \"../context/GlobalContext\";\n\nconst Sidebar = () => {\n    const { logout } = useContext(GlobalContext);\n    const location = useLocation();\n    const pathname = location.pathname;\n\n    const showActivityFeeed = () => {\n        const activityFeed = document.querySelector(\".activity-feed\");\n        activityFeed?.classList.remove(\"closed\");\n    };\n\n    return (\n        <div className=\"sidebar\" style={sidebarStyle}>\n            <ul style={listStyle}>\n                <li className={pathname === \"/\" ? \"selected\" : \"\"}>\n                    <Link to=\"/\">\n                        <HomeOutlined />\n                    </Link>\n                </li>\n                <li className={pathname === \"/propose\" ? \"selected\" : \"\"}>\n                    <Link to=\"/propose\">\n                        <PlusCircleOutlined />\n                    </Link>\n                </li>\n                <li className={pathname === \"/propose\" ? \"selected\" : \"\"}>\n                    <Link\n                        to=\"#\"\n                        onClick={() => showActivityFeeed()}\n                        className=\"activity-button\"\n                    >\n                        <BarsOutlined />\n                    </Link>\n                </li>\n                <li className={pathname === \"/settings\" ? \"selected\" : \"\"}>\n                    <Link to=\"/settings\">\n                        <SettingOutlined />\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"#\" onClick={() => logout!()}>\n                        <LogoutOutlined />\n                    </Link>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nconst sidebarStyle: CSS.Properties = {\n    position: \"fixed\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n    width: \"50px\",\n    borderRight: \"1px solid rgba(0,0,0,0.1)\",\n    zIndex: 5,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n};\n\nconst listStyle: CSS.Properties = {\n    listStyleType: \"none\",\n    margin: 0,\n    padding: 0,\n};\n\nexport default Sidebar;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport CSS from \"csstype\";\nimport Filters from \"./Filters\";\nimport { defaultFilterState, filterGroupDates } from \"../common/filter\";\nimport axios from \"axios\";\nimport GlobalContext from \"../context/GlobalContext\";\nimport { GroupDate } from \"../common/types\";\n\nconst ActivityFeed = () => {\n    const { username } = useContext(GlobalContext);\n    const [filterState, setFilterState] = useState(defaultFilterState);\n    const activityFeed = useRef<HTMLDivElement>(null);\n    const [groupDates, setGroupDates] = useState<GroupDate[]>([]);\n\n    useEffect(() => {\n        activityFeed.current?.classList.add(\"closed\");\n\n        const listener = (e: Event) => {\n            const activityButton = document.querySelector(\".activity-button\");\n            const isClickInside =\n                activityFeed.current?.contains(e.target as Node) ||\n                activityButton?.contains(e.target as Node);\n            const isHidden = activityFeed.current?.classList.contains(\"closed\");\n\n            if (!isClickInside && !isHidden) {\n                //the click was outside the activity feed\n                activityFeed.current?.classList.add(\"closed\");\n            }\n        };\n\n        document.addEventListener(\"click\", listener);\n    }, [activityFeed]);\n\n    useEffect(() => {\n        const fetchGroupDates = async () => {\n            let gds: GroupDate[] = [];\n            let res = await axios.post(\n                process.env.REACT_APP_HOST_API_URL +\n                    `/api/get_groupdates?username=${username}&role=inviter`\n            );\n            gds = res.data;\n\n            res = await axios.post(\n                process.env.REACT_APP_HOST_API_URL +\n                    `/api/get_groupdates?username=${username}&role=invitee`\n            );\n            gds = [...gds, ...res.data];\n\n            gds.sort((a, b) => {\n                return a.date > b.date ? 1 : -1;\n            });\n\n            setGroupDates(gds);\n        };\n        fetchGroupDates();\n    }, []);\n\n    return (\n        <div\n            className=\"activity-feed\"\n            style={activityFeedStyle}\n            ref={activityFeed}\n        >\n            <Filters\n                filterState={filterState}\n                setFilterState={setFilterState}\n            />\n            {filterGroupDates(groupDates, filterState).map((gd) => (\n                <Activity gd={gd} />\n            ))}\n        </div>\n    );\n};\n\ntype ActivityProps = {\n    gd: GroupDate;\n};\n\nconst Activity: React.FC<ActivityProps> = ({ gd }) => (\n    <div style={activityStyle}>\n        <img\n            src=\"https://images.unsplash.com/photo-1637102838603-d1c02da68c66?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2070&q=80\"\n            style={imageStyle}\n        />\n        <div>\n            <p style={nameStyle}>{gd.title}</p>\n            <p>\n                {gd.status.includes(\"_finalized\") ? \"Finalized\" : \"Unfinalized\"}\n            </p>\n        </div>\n    </div>\n);\n\nconst activityFeedStyle: CSS.Properties = {\n    height: \"100vh\",\n    width: \"400px\",\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    backgroundColor: \"rgba(247, 247, 247)\",\n    padding: \"1em\",\n    zIndex: 6,\n    overflow: \"scroll\",\n};\n\nconst activityStyle: CSS.Properties = {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"1em\",\n    backgroundColor: \"white\",\n    boxShadow: \"0 1px 3px hsla(0, 0%, 0.2)\",\n};\n\nconst imageStyle: CSS.Properties = {\n    width: \"160px\",\n    height: \"100px\",\n    objectFit: \"cover\",\n    borderRadius: \"4px\",\n    marginRight: \"1em\",\n};\n\nconst nameStyle: CSS.Properties = {\n    fontWeight: 700,\n};\n\nexport default ActivityFeed;\n","export default __webpack_public_path__ + \"static/media/concert3.c57aa10b.jpg\";","import React from \"react\";\nimport CSS from \"csstype\";\nimport logo from \"../assets/concert3.jpg\";\n\nconst Header = () => {\n    return (\n        <header style={headerStyle}>\n            <div style={overlayStyle}>\n                {\" \"}\n                <h1 style={titleStyle}>Groupie</h1>{\" \"}\n            </div>\n            <img src={logo} style={imgStyle} alt=\"logo\" />\n        </header>\n    );\n};\n\nconst imgStyle: CSS.Properties = {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n};\n\nconst overlayStyle: CSS.Properties = {\n    height: \"fit-content\",\n    width: \"fit-content\",\n    backgroundColor: \"rgb(68, 141, 247)\",\n    position: \"absolute\",\n    top: \"25px\",\n    left: \"35px\",\n};\n\nconst titleStyle: CSS.Properties = {\n    color: \"white\",\n    fontSize: \"55px\",\n    fontWeight: \"bold\",\n    margin: \"0\",\n};\n\nconst headerStyle: CSS.Properties = {\n    margin: \"auto\",\n    height: \"20vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"rgb(68, 141, 247)\",\n    color: \"white\",\n    zIndex: 6,\n};\n\nexport default Header;\n","import React, { useEffect, useContext } from \"react\";\nimport LoginPage from \"./pages/LoginPage\";\nimport { Switch, Route } from \"react-router-dom\";\nimport EditGroupDate from \"./pages/EditGroupDate\";\nimport Inviter from \"./pages/Inviter\";\nimport SettingsPage from \"./pages/SettingsPage\";\nimport SignUpPage from \"./pages/SignUpPage\";\nimport AvailabilityPage from \"./pages/AvailabilityPage\";\nimport Footer from \"./components/Footer\";\nimport ViewInvite from \"./pages/ViewInvite\";\nimport Sidebar from \"./components/Sidebar\";\nimport ActivityFeed from \"./components/ActivityFeed\";\nimport { inactivityTimer } from \"./common/inactivity\";\nimport Header from \"./components/Header\";\nimport GlobalContext from \"./context/GlobalContext\";\n\nfunction App() {\n    const { username, logout } = useContext(GlobalContext);\n\n    useEffect(() => {\n        if (username) inactivityTimer(logout!);\n    }, [username]);\n\n    return (\n        <div className=\"App\">\n            <div className=\"content\">\n                <Header />\n                <Switch>\n                    {!username && (\n                        <>\n                            <Route exact path=\"/\">\n                                <LoginPage />\n                            </Route>\n                            <Route path=\"/signup\">\n                                <SignUpPage />\n                            </Route>\n                        </>\n                    )}\n                    {username && (\n                        <>\n                            <Sidebar />\n                            <ActivityFeed />\n                            <Route path=\"/settings\">\n                                <SettingsPage />\n                            </Route>\n                            <Route path=\"/propose\">\n                                <EditGroupDate />\n                            </Route>\n                            <Route path=\"/invite\">\n                                <ViewInvite />\n                            </Route>\n                            <Route path=\"/inviter\">\n                                <Inviter />\n                            </Route>\n                            <Route exact path=\"/\">\n                                <AvailabilityPage />\n                            </Route>\n                        </>\n                    )}\n                </Switch>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from \"react\";\nimport { notification } from \"antd\";\n\nimport GlobalContext, { ContextInterface } from \"./GlobalContext\";\nimport { useHistory } from \"react-router-dom\";\n\ntype ProviderProps = {\n    children: React.ReactNode;\n};\n\nconst GlobalProvider: React.FC<ProviderProps> = (props) => {\n    const history = useHistory();\n    const [context, setContext] = useState<ContextInterface>({\n        username: window.localStorage.getItem(\"username\"),\n    });\n\n    const login = (username: string) => {\n        localStorage.setItem(\"username\", username);\n        setContext({\n            ...context,\n            username,\n        });\n        window.localStorage.setItem(\"failedAttempts\", JSON.stringify(0));\n    };\n\n    const logout = () => {\n        if (context.username === null) return;\n        localStorage.removeItem(\"username\");\n        setContext({\n            ...context,\n            username: null,\n        });\n\n        notification.open({\n            message: \"You've been logged out\",\n            duration: 2.5,\n        });\n\n        history.push(\"/\");\n    };\n\n    return (\n        <GlobalContext.Provider\n            value={{\n                username: context.username,\n                login,\n                logout,\n            }}\n        >\n            {props.children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport default GlobalProvider;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport GlobalProvider from \"./context/GlobalProvider\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <GlobalProvider>\n                <App />\n            </GlobalProvider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}