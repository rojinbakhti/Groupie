{"version":3,"sources":["pages/LoginPage.tsx","common/fakeData.ts","components/events/EventsList.tsx","components/events/EventsSearch.tsx","components/events/EventsFilter.tsx","components/UserSearch.tsx","pages/EditGroupDate.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Title","Typography","UsernameInput","Item","label","name","rules","required","message","PasswordInput","Password","SubmitButton","children","wrapperCol","offset","span","type","htmlType","Login","onFinish","style","titleStyle","formStyle","labelCol","SignUp","textAlign","marginTop","width","margin","padding","border","borderRadius","LoginPage","fakeVenue","url","postalCode","city","state","fakeEvent","startDateTime","venue","fakeUsers","EventsList","events","onChange","selectedEventIndices","itemLayout","dataSource","renderItem","index","dateString","actions","href","target","rel","marginRight","checked","includes","Meta","title","description","Date","toLocaleDateString","undefined","year","month","day","hour","minute","EventsSearch","Search","Input","RangePicker","DatePicker","Option","Select","genres","EventsFilter","onValuesChange","layout","placeholder","onSearch","showTime","map","genre","value","suffix","HomeOutlined","color","UserSearch","users","onSelect","options","filter","user","blocked","_","option","EditGroupDate","App","className","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.751bc354.chunk.js","sourcesContent":["import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Typography, Form, Input, Button, FormProps } from \"antd\";\nimport CSS from \"csstype\";\n\nconst { Title } = Typography;\n\nconst UsernameInput: React.FC = () => {\n    return (\n    <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[\n            {\n                required: true,\n                message: \"Please input your username!\",\n            },\n        ]}\n    >\n        <Input />\n    </Form.Item>\n    )\n}\n\nconst PasswordInput: React.FC = () => {\n    return (\n        <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n                {\n                    required: true,\n                    message: \"Please input your password!\",\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n    )\n}\n\ntype SubmitButtonProps = {\n    children: React.ReactNode\n}\n\nconst SubmitButton: React.FC<SubmitButtonProps> = ({ children }) => {\n    return (\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                { children }\n            </Button>\n        </Form.Item>\n    )\n}\n\ntype LoginProps = {\n    onFinish?: FormProps['onFinish']\n}\n\nconst Login: React.FC<LoginProps> = ({ onFinish}) => {\n    return (\n        <div>\n        <Title style={titleStyle}>Log In</Title>\n        <Form\n            name=\"login\"\n            style={formStyle}\n            labelCol={{ span: 8 }}\n            wrapperCol={{ span: 16 }}\n            onFinish={onFinish}\n        >\n            <UsernameInput />\n            <PasswordInput />\n            <SubmitButton>Login</SubmitButton>\n        </Form>\n    </div>\n    )\n}\n\ntype SignUpProps = {\n    onFinish?: FormProps['onFinish']\n}\n\nconst SignUp: React.FC<SignUpProps> = ({ onFinish }) => {\n    return (\n        <div>\n            <Title style={titleStyle}>Sign Up</Title>\n            <Form\n                name=\"signUp\"\n                style={formStyle}\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n                onFinish={onFinish}\n            >\n                <UsernameInput />\n                <PasswordInput />\n                <SubmitButton>Sign Up</SubmitButton>\n            </Form>\n        </div>\n    );\n};\n\nconst LoginPage: React.FC = () => {\n    return (\n        <div>\n            <Login />\n            <SignUp />\n        </div>\n    )\n}\n\nconst titleStyle: CSS.Properties = {\n    textAlign: \"center\",\n    marginTop: \"2em\",\n};\n\nconst formStyle: CSS.Properties = {\n    width: \"500px\",\n    margin: \"0 auto\",\n    padding: \"3em\",\n    border: \"1px solid lightblue\",\n    borderRadius: \"4px\",\n};\n\nexport default LoginPage;\n","import { Event, User, Venue } from \"./types\";\n\nconst fakeVenue: Venue = {\n    name: 'Hollywood Palladium',\n    url: 'https://www.ticketmaster.com/hollywood-palladium-tickets-hollywood/venue/73794',\n    postalCode: '90028',\n    city: 'Hollywood',\n    state: 'California'\n}\n\n\nexport const fakeEvent: Event = {\n    name: 'RL Grime: Halloween X Live At The Palladium',\n    url: 'https://concerts.livenation.com/rl-grime-halloween-x-live-at-hollywood-california-10-28-2021/event/09005B3BBFB13F75',\n    startDateTime: '2021-10-29T02:00:00Z',\n    venue: fakeVenue,\n}\n\nexport const fakeEvent2: Event = {\n    name: \"AUDACY'S 8th Annual WE CAN SURVIVE\",\n    url: 'https://www.ticketmaster.com/audacys-8th-annual-we-can-survive-hollywood-california-10-23-2021/event/0B005B293FD023B6',\n    startDateTime: '2021-10-22T02:00:00Z',\n    venue: fakeVenue,\n}\n\nexport const fakeEvents = [\n  fakeEvent,\n  fakeEvent2,\n]\n\nexport const fakeUsers: User[] = [\n    { name: 'Arav'}, \n    { name: 'Rojin'}, \n    { name: 'Vikyat'}, \n    { name: 'Da Sol'}\n]","import React from \"react\";\nimport { Checkbox, List } from \"antd\";\nimport { Event } from \"../../common/types\";\nimport LinkIcon from \"@ant-design/icons/LinkOutlined\";\n\nconst formatDate = (dateString: string) => {\n  const options: Intl.DateTimeFormatOptions = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\ntype EventsListProps = {\n  events: Event[];\n  selectedEventIndices?: number[] // TODO: use unique IDs\n  onChange?: (index: number) => void\n};\n\nconst EventsList: React.FC<EventsListProps> = ({ events, onChange, selectedEventIndices }) => {\n  return (\n    <List\n      itemLayout=\"horizontal\"\n      dataSource={events}\n      style={{\n        width: 500\n      }}\n      renderItem={({ name, startDateTime, venue, url }, index) => (\n        <List.Item\n          style={{\n            padding: 12\n          }}\n          actions={[\n            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n              <LinkIcon />\n            </a>\n          ]}\n        >\n          <>\n            <Checkbox\n              style={{\n                marginRight: 12\n              }}\n              onChange={() => onChange?.(index)}\n              checked={selectedEventIndices?.includes(index)}\n            />\n            <List.Item.Meta\n              title={name}\n              description={`${venue.name} | ${formatDate(startDateTime)}`}\n            />\n          </>\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default EventsList;\n","import { Typography } from \"antd\";\nimport React from \"react\";\nimport { EventsFilter, EventsList } from \".\";\nimport { fakeEvent } from \"../../common/fakeData\";\n\ntype EventsSearchProps = {};\n\nconst { Title } = Typography;\n\nconst EventsSearch: React.FC<EventsSearchProps> = () => {\n  return (\n    <>\n      <Title style={{ padding: 12 }}>Add events</Title>\n      <EventsFilter />\n      <EventsList\n        events={[fakeEvent, fakeEvent, fakeEvent]}\n        selectedEventIndices={[0]}\n      />\n    </>\n  );\n};\n\nexport default EventsSearch;\n","import { Input, DatePicker, Select, Form, FormProps } from \"antd\";\nimport { HomeOutlined } from \"@ant-design/icons\";\nimport React from \"react\";\n\nconst { Search } = Input;\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\ntype EventsFilterProps = {\n  onValuesChange?: FormProps[\"onValuesChange\"];\n};\n\nconst genres = [\"Concerts\", \"Movies\", \"Sports\"];\n\nconst EventsFilter: React.FC<EventsFilterProps> = ({ onValuesChange }) => {\n  return (\n    <Form\n      style={{ width: 500, padding: 12 }}\n      layout=\"vertical\"\n      onValuesChange={onValuesChange}\n    >\n      <Form.Item label=\"Keyword\">\n        <Search placeholder=\"Search for a keyword\" onSearch={() => {}} />\n      </Form.Item>\n      <Form.Item label=\"Date range\">\n        <RangePicker showTime style={{ width: \"100%\" }} />\n      </Form.Item>\n      <Form.Item label=\"Genre\">\n        <Select placeholder=\"Select a genre\">\n          {genres.map(genre => (\n            <Option value={genre}>{genre}</Option>\n          ))}\n        </Select>\n      </Form.Item>\n      <Form.Item label=\"Location\">\n        <Input\n          placeholder=\"Filter for a location\"\n          suffix={<HomeOutlined style={{ color: \"rgba(0,0,0,.45)\" }} />}\n        ></Input>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default EventsFilter;\n","import { AutoComplete, Typography } from \"antd\";\nimport React from \"react\";\nimport { User } from \"../common/types\";\n\ntype UserSearchProps = {\n  users: User[];\n  onSelect?: (user: User) => void;\n};\n\nconst { Title } = Typography;\n\nconst UserSearch: React.FC<UserSearchProps> = ({ users, onSelect }) => {\n  return (\n    <div style={{ padding: 12 }}>\n      <Title>Add users</Title>\n      <AutoComplete\n        options={users\n          .filter(user => !user.blocked)\n          .map(user => ({ value: user.name, label: user.name, user }))}\n        style={{ width: 200 }}\n        placeholder=\"Add users\"\n        onSelect={(_, option) => onSelect?.((option as any).user)}\n      />\n    </div>\n  );\n};\n\nexport default UserSearch;\n","import React from \"react\";\nimport { fakeUsers } from \"../common/fakeData\";\nimport { EventsSearch } from \"../components/events\";\nimport UserSearch from \"../components/UserSearch\";\n\nconst EditGroupDate: React.FC = () => {\n  return (\n    <>\n      <UserSearch users={fakeUsers} />\n      <EventsSearch />\n    </>\n  );\n};\n\nexport default EditGroupDate;\n","import React from \"react\";\nimport LoginPage from \"./pages/LoginPage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport EditGroupDate from \"./pages/EditGroupDate\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Switch>\n                        <Route path=\"/login\">\n                            <LoginPage />\n                        </Route>\n                        <Route path=\"/settings\">Settings</Route>\n                        <Route path=\"/propose\">\n                          <EditGroupDate />\n                        </Route>\n                        <Route path=\"/availability\">Availability</Route>\n                        <Route path=\"/\">Home</Route>\n                    </Switch>\n                </header>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}